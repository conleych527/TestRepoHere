<ManuScript>
  <properties manuscriptID="DuckCreekTech_CommercialLines_Data_US_11_0_0_0" versionID="DuckCreekTech_CommercialLinesData_US_00_10" versionDate="2021-06-01" version="1" caption="DuckCreekTech  CommercialLines  Data   US   (11.0.0.0)" image="" dataSchema="" boolean="1" inherited="Carrier_ProductBase_Data_11_0_0_0" fieldCache="1" cultureCode="en-US" cultureName="United States [english]">
    <contexts>
      <context />
    </contexts>
    <notes>1/25/2021 12:24 PM: Versioned with ManuScriptVersioner&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;6/18/2014 1:16 PM: Versioned with ManuScriptVersioner&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;1/21/2013 5:35 PM: Versioned with ManuScriptVersioner&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;7/15/2011 3:28 PM: Versioned with ManuScriptVersioner&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;5/14/2008 9:54 AM: Versioned with UpdateMover&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;2/12/2007: Versioned Manually&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;7/7/2006 12:52 PM: Versioned with UpdateMover&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;3/29/2006 3:41 PM: Versioned with UpdateMover&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;11/22/2005 5:06 PM: Versioned with UpdateMover&amp;#13;&amp;#10;----------------&amp;#13;&amp;#10;10/21/2003 5:31 PM: Initial Release.</notes>
    <resourceState status="Deployed" protected="1" />
    <keys>
      <keyInfo name="lob" value="CPP" />
      <keyInfo name="state" value="US-INH" />
      <keyInfo name="effectiveDateNew" value="2021-06-01" />
      <keyInfo name="effectiveDateRenewal" value="2021-06-01" />
      <keyInfo name="masterID" value="None" />
      <keyInfo name="productCode" value="Data" />
      <keyInfo name="family" value="DCTTemplates" />
      <keyInfo name="version" value="11.0.0.0" />
    </keys>
  </properties>
  <model defaultValue="data.TotalResult">
    <object id="data" path="data" abstract="1">
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <object id="Policy" path="policy" abstract="1">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="PolicyInput" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="PolicyInput.Product" path="Product" type="string">
            <definition>
              <caption value="Product" />
              <maxLength value="30" />
              <options>
                <option value="DuckCreekTech_Product_US_00_22" caption="Duck Creek Product Template" />
                <option value="Carrier_Product_US_00_20" caption="Carrier Product" />
              </options>
            </definition>
            <rules>
              <default value="DuckCreekTech_Product_US_00_22" />
              <affects>
                <reference idref="GlobalPrivate.ProductManuScriptID" effect="postEffect" />
              </affects>
            </rules>
          </public>
          <public id="PolicyInput.LineOfBusiness" type="string" path="LineOfBusiness" override="1">
            <rules>
              <default value="Package" />
              <forceRerate value="1" />
            </rules>
            <definition>
              <caption value="Line of Business" />
              <maxLength idref="MaxLength.sValue" />
              <options>
                <option value="Package" caption="Commercial Package" default="1" />
                <option value="BusinessOwners" caption="Businessowners" validRef="PolicyPrivate.IsCommercialBusinessOwnersSelectable" />
                <option value="WorkersCompensation" caption="Workers Compensation" validRef="PolicyPrivate.IsCommercialWorkersCompensationSelectable" />
                <option value="Property" caption="Commercial Property" validRef="PolicyPrivate.IsCommercialPropertySelectable" />
                <option value="GeneralLiability" caption="Commercial General Liability" validRef="PolicyPrivate.IsCommercialGeneralLiabilitySelectable" />
                <option value="CommercialAuto" caption="Commercial Auto" validRef="PolicyPrivate.IsCommercialAutoSelectable" />
                <option value="InlandMarine" caption="Inland Marine" validRef="PolicyPrivate.IsCommercialInlandMarineSelectable" />
                <option value="InlandMarineAAIS" caption="Inland Marine AAIS" validRef="PolicyPrivate.IsCommercialInlandMarineAAISSelectable" />
                <option value="Crime" caption="Crime" validRef="PolicyPrivate.IsCommercialCrimeSelectable" />
                <option value="CommercialAutoMA" caption="Massachusetts Commercial Auto" validRef="PolicyPrivate.IsCommercialAutoMASelectable" />
                <option value="CommercialUmbrella" caption="Commercial Umbrella" validRef="PolicyPrivate.IsCommercialUmbrellaSelectable" />
              </options>
              <formatMask idref="FormatMask.BlankOption" />
            </definition>
          </public>
          <public id="PolicyInput.HonorRates" path="HonorRates" type="boolean">
            <definition>
              <caption value="Honor Current Rates?" />
              <readOnly>
                <comparison compare="and">
                  <operand idref="Rules.PolicyIsInForce" type="boolean" />
                  <comparison compare="ne">
                    <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                    <operand type="string" value="Renew" />
                  </comparison>
                </comparison>
              </readOnly>
            </definition>
            <rules />
          </public>
          <public id="PolicyInput.IsAuditable" path="Indicators[Type=&quot;IsAuditable&quot;]/bValue" type="boolean">
            <definition>
              <caption value="Is Auditable" />
              <readOnly>
                <comparison compare="or">
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsAuditableLOB" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="WorkersCompensation" />
                  </comparison>
                </comparison>
              </readOnly>
              <options>
                <option value="0" caption="No" />
                <option value="1" caption="Yes" />
              </options>
            </definition>
            <rules>
              <default>
                <comparison compare="eq">
                  <operand idref="PolicyInput.LineOfBusiness" type="string" />
                  <operand type="string" value="WorkersCompensation" />
                </comparison>
              </default>
              <misc>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyInput.LineOfBusiness" type="string" />
                      <operand type="string" value="WorkersCompensation" />
                    </comparison>
                  </condition>
                  <then idref="True" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsAuditableLOB" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </rules>
          </public>
          <public id="PolicyInput.AuditPeriod" path="AuditPeriod" type="string">
            <definition>
              <caption value="Audit Period" />
              <options>
                <option value="Annual" caption="Annual" />
                <option value="SemiAnnual" caption="Semi-Annual" />
                <option value="Quarterly" caption="Quarterly" />
                <option value="Monthly" caption="Monthly" />
              </options>
              <maxLength value="12" />
            </definition>
            <rules>
              <default value="Annual" />
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyInput.AuditPeriod" type="string" />
                        <operand type="string" value="Annual" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyInput.Term" type="int" />
                        <operand type="int" value="6" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="SemiAnnual" />
                </if>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyInput.AuditPeriod" type="string" />
                        <operand type="string" value="NA" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyInput.IsAuditable" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="Annual" />
                </if>
              </misc>
            </rules>
          </public>
          <public id="PolicyInput.ReinsuranceIndicator" path="Indicators[Type=&quot;ReinsuranceIndicator&quot;]/bValue" type="boolean">
            <definition>
              <caption value="Reinsurance" />
            </definition>
            <rules>
              <default idref="False" />
            </rules>
          </public>
          <public id="PolicyInput.SICCode" path="SICCode" type="string" alwaysRun="1">
            <definition>
              <caption value="SICCode" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules>
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="PolicyPrivate.SetSICCode" />
                  <separatorChar value="]" />
                  <ordPosition value="1" />
                </subString>
              </value>
            </rules>
          </public>
          <public id="PolicyInput.SICCodeDesc" path="SICCodeDesc" type="string" alwaysRun="1">
            <definition>
              <caption value="SIC Code" />
              <formatMask idref="FormatMask.BlankOption" />
              <options>
                <request verb="DataKey.listContainingRq">
                  <responsePath value="listContainingRs/o" />
                  <captionPath value="@c" />
                  <valuePath value="@c" />
                  <nameValues>
                    <nameValue idref="PolicyPrivate.SICCodeDataKeyFile" name="datakey" dataType="attribute" />
                    <nameValue idref="PolicyOutputNonShredded.SICCodeSearchValue" name="filter" dataType="attribute" />
                  </nameValues>
                </request>
              </options>
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules>
              <affects>
                <reference idref="PolicyPrivate.SetSICCode" effect="postEffect" />
                <reference idref="PolicyInput.SICCode" effect="postEffect" />
              </affects>
            </rules>
          </public>
          <public id="PolicyInput.NAICSCode" path="NAICSCode" type="string" alwaysRun="1">
            <definition>
              <caption value="NAICS Code" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules>
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="PolicyPrivate.SetNAICSCode" />
                  <separatorChar value="]" />
                  <ordPosition value="1" />
                </subString>
              </value>
            </rules>
          </public>
          <public id="PolicyInput.NAICSCodeDesc" path="NAICSCodeDesc" type="string" alwaysRun="1">
            <definition>
              <caption value="NAICS Code" />
              <formatMask idref="FormatMask.BlankOption" />
              <options>
                <request verb="DataKey.listContainingRq">
                  <responsePath value="listContainingRs/o" />
                  <captionPath value="@c" />
                  <valuePath value="@c" />
                  <nameValues>
                    <nameValue idref="PolicyPrivate.NAICSCodeDataKeyFile" name="datakey" dataType="attribute" />
                    <nameValue idref="PolicyOutputNonShredded.NAICSCodeSearchValue" name="filter" dataType="attribute" />
                  </nameValues>
                </request>
              </options>
              <maxLength idref="MaxLength.Description" />
            </definition>
            <rules>
              <affects>
                <reference idref="PolicyPrivate.SetNAICSCode" effect="postEffect" />
                <reference idref="PolicyInput.NAICSCode" effect="postEffect" />
              </affects>
            </rules>
          </public>
          <public id="PolicyInput.Term" path="Term" type="int" override="1">
            <definition>
              <caption value="Term" />
              <maxLength idref="MaxLength.iValue" />
              <options>
                <option value="12" caption="1 Year" />
                <option value="24" caption="2 Years" />
                <option value="36" caption="3 Years" />
                <option value="6" caption="6 Months" />
                <option value="0" caption="Custom" />
              </options>
              <readOnly>
                <comparison compare="eq">
                  <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </readOnly>
            </definition>
            <rules>
              <default value="12" />
              <forceRerate value="1" />
            </rules>
          </public>
          <public id="PolicyInput.ReasonForDeclination" path="ReasonForDeclination" type="string" comment="Shared">
            <definition>
              <caption value="Reason For Declination" />
              <applicable>
                <comparison compare="eq">
                  <operand idref="TransactionOutput.Status" type="string" />
                  <operand type="string" value="Referred" />
                </comparison>
              </applicable>
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules />
          </public>
          <public id="PolicyInput.EffectiveDate" path="EffectiveDate" type="date" override="1">
            <definition>
              <caption value="Effective Date" />
              <maxLength idref="MaxLength.Date" />
              <readOnly>
                <comparison compare="or">
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="ne">
                    <operand idref="CurrentTransaction.Type" type="string" />
                    <operand type="string" value="New" />
                  </comparison>
                </comparison>
              </readOnly>
              <formatMask idref="FormatMask.Date" />
            </definition>
            <rules>
              <default>
                <if>
                  <condition>
                    <comparison compare="ne">
                      <operand idref="PolicyPrivate.PropertyEffectiveDate" type="date" />
                      <operand type="string" value="" />
                    </comparison>
                  </condition>
                  <then idref="PolicyPrivate.PropertyEffectiveDate" />
                  <else idref="DateTime.CurrentDate" />
                </if>
              </default>
              <minimum value="1900-01-01" />
              <maximum value="2075-01-01" />
              <forceRerate value="1" />
            </rules>
          </public>
          <public id="PolicyInput.ExpirationDate" path="ExpirationDate" type="date" override="1">
            <definition>
              <caption value="Expiration Date" />
              <readOnly>
                <comparison compare="or">
                  <comparison compare="ne">
                    <operand idref="PolicyInput.Term" type="int" />
                    <operand type="int" value="0" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </readOnly>
              <maxLength idref="MaxLength.Date" />
              <formatMask idref="FormatMask.Date" />
            </definition>
            <rules>
              <default idref="PolicyPrivate.ExpirationDateValue" />
              <misc>
                <if>
                  <condition>
                    <comparison compare="ne">
                      <operand idref="PolicyInput.Term" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </condition>
                  <then idref="PolicyPrivate.ExpirationDateValue" />
                </if>
                <if>
                  <condition>
                    <comparison compare="lt">
                      <operand idref="PolicyInput.ExpirationDate" type="date" />
                      <operand idref="PolicyPrivate.MinimumExpirationDate" type="date" />
                    </comparison>
                  </condition>
                  <then idref="PolicyPrivate.MinimumExpirationDate" type="date" />
                </if>
              </misc>
              <minimum value="1900-01-01" />
              <maximum value="2078-01-01" />
              <forceRerate value="1" />
            </rules>
          </public>
          <public id="PolicyInput.KYSurchargeExemption" path="KYSurchargeExemption" type="boolean">
            <definition>
              <caption value="KY Surcharge Exemption" />
            </definition>
          </public>
          <public id="PolicyInput.PrimaryRatingState" path="PrimaryRatingState" type="string" override="1">
            <definition>
              <caption value="Primary Rating State" />
              <maxLength idref="MaxLength.State" />
              <options>
                <option value="AK" caption="AK" />
                <option value="AL" caption="AL" />
                <option value="AR" caption="AR" />
                <option value="AZ" caption="AZ" />
                <option value="CA" caption="CA" />
                <option value="CO" caption="CO" />
                <option value="CT" caption="CT" />
                <option value="DC" caption="DC" />
                <option value="DE" caption="DE" />
                <option value="FL" caption="FL" />
                <option value="GA" caption="GA" />
                <option value="HI" caption="HI" />
                <option value="IA" caption="IA" />
                <option value="ID" caption="ID" />
                <option value="IL" caption="IL" />
                <option value="IN" caption="IN" />
                <option value="KS" caption="KS" />
                <option value="KY" caption="KY" />
                <option value="LA" caption="LA" />
                <option value="MA" caption="MA" validRef="PolicyPrivate.PrimaryRatingStateMAValid" />
                <option value="MD" caption="MD" />
                <option value="ME" caption="ME" />
                <option value="MI" caption="MI" />
                <option value="MN" caption="MN" />
                <option value="MO" caption="MO" />
                <option value="MS" caption="MS" />
                <option value="MT" caption="MT" />
                <option value="NC" caption="NC" />
                <option value="ND" caption="ND" />
                <option value="NE" caption="NE" />
                <option value="NH" caption="NH" />
                <option value="NJ" caption="NJ" />
                <option value="NM" caption="NM" />
                <option value="NV" caption="NV" />
                <option value="NY" caption="NY" />
                <option value="OH" caption="OH" />
                <option value="OK" caption="OK" />
                <option value="OR" caption="OR" />
                <option value="PA" caption="PA" />
                <option value="RI" caption="RI" />
                <option value="SC" caption="SC" />
                <option value="SD" caption="SD" />
                <option value="TN" caption="TN" />
                <option value="TX" caption="TX" />
                <option value="UT" caption="UT" />
                <option value="VA" caption="VA" />
                <option value="VT" caption="VT" />
                <option value="WA" caption="WA" />
                <option value="WI" caption="WI" />
                <option value="WV" caption="WV" />
                <option value="WY" caption="WY" />
              </options>
            </definition>
            <rules>
              <default idref="AccountInput.State" />
            </rules>
            <corrections>
              <correction operation="bestMatch" condition="incorrect" laxity="high" message="Original Value #{uncorrected} was changed to match an item in the list with #{corrected}." />
            </corrections>
          </public>
        </object>
        <object id="PolicyPrivate" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="PolicyManuScript">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="PolicyManuScript.MonolinePagesManuscriptID" type="string" comment="">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="PolicyManuScript.MonolineManuscriptIDTable" />
                  <manuscriptName idref="PolicyPrivate.MonolineLineProductManuscript" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="Pages" name="Manuscript" />
                  <keyRef idref="PolicyManuScript.StateKey" type="string" name="State" />
                  <keyRef idref="PolicyManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <private id="PolicyManuScript.MonolineManuscriptIDTable" type="string" comment="">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="Manuscripts" />
                  <argument op="add" idref="PolicyInput.LineOfBusiness" type="string" />
                </calculation>
              </value>
            </private>
            <private id="PolicyManuScript.SetMonolinePolicyManuscriptID" type="string" comment="" alwaysRun="1">
              <affects>
                <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" effect="setValue" />
              </affects>
              <value idref="PolicyManuScript.MonolinePagesManuscriptID" />
            </private>
            <private id="PolicyManuScript.ResetPolicyManuscriptID" type="string" comment="" alwaysRun="1">
              <affects>
                <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" effect="setValue" />
                <reference idref="PolicyManuScript.SetCurrentManuscriptValues" effect="postEffect" />
              </affects>
              <value idref="GlobalOutput.MasterManuScriptID" />
            </private>
            <public id="PolicyManuScript.CPPFormsManuscriptID" type="string" comment="" path="CPPFormsManuscriptID">
              <rules>
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyInput.HonorRates" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="PolicyManuScript.CPPFormsManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyManuScript.CPPFormsManuscriptID" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.CPPManuscriptIDTable" />
                        <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                        <fieldRef value="Value" />
                        <keyRef type="string" value="FormsCPP" name="Manuscript" />
                        <keyRef idref="PolicyManuScript.StateKey" type="string" name="State" />
                        <keyRef idref="PolicyManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
              <definition>
                <maxLength idref="MaxLength.sValue" />
                <caption value="CPP Forms Manuscript ID" />
              </definition>
            </public>
            <public id="PolicyManuScript.CPPRatingManuscriptID" type="string" comment="" path="CPPRatingManuscriptID">
              <rules>
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyInput.HonorRates" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="PolicyManuScript.CPPRatingManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyManuScript.CPPRatingManuscriptID" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.CPPManuscriptIDTable" />
                        <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                        <fieldRef value="Value" />
                        <keyRef type="string" value="RatingCPP" name="Manuscript" />
                        <keyRef idref="PolicyManuScript.StateKey" type="string" name="State" />
                        <keyRef idref="PolicyManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
              <definition>
                <maxLength idref="MaxLength.sValue" />
                <caption value="CPP Rating Manuscript ID" />
              </definition>
            </public>
            <private id="PolicyManuScript.SetCurrentVersionID" caption="" type="string">
              <value>
                <session sessionValue="versionID" />
              </value>
              <affects>
                <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptVersionID" effect="setValue" />
              </affects>
            </private>
            <private id="PolicyManuScript.SetCurrentManuscriptName" caption="" type="string">
              <value>
                <session sessionValue="manuscript" />
              </value>
              <affects>
                <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptName" effect="setValue" />
              </affects>
            </private>
            <private id="PolicyManuScript.SetCurrentManuscriptValues" caption="" type="string">
              <affects>
                <reference idref="PolicyManuScript.SetCurrentManuscriptName" effect="postEffect" />
                <reference idref="PolicyManuScript.SetCurrentVersionID" effect="postEffect" />
                <reference idref="PolicyAdminPrivate.SetCurrentLineOfBusiness" effect="postEffect" />
                <reference idref="PolicyManuScript.SetCurrentManuscriptPrintManuscriptID" effect="postEffect" />
              </affects>
            </private>
            <object id="InterlineFormsManuscript">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="InterlineFormsManuscript.AKFormsManuScriptID" type="string" comment="" path="AKFormsManuScriptID">
                <definition>
                  <caption value="AK Forms Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsAK">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.AKFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="AK" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.ALFormsManuScriptID" type="string" comment="" path="ALFormsManuScriptID">
                <definition>
                  <caption value="AL Forms Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsAL">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.ALFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="AL" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.ARFormsManuScriptID" type="string" comment="" path="ARFormsManuScriptID">
                <definition>
                  <caption value="AR Forms Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsAR">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.ARFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="AR" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.AZFormsManuScriptID" type="string" comment="" path="AZFormsManuScriptID">
                <definition>
                  <caption value="AZ Forms Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsAZ">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.AZFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="AZ" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.CAFormsManuScriptID" type="string" comment="" path="CAFormsManuScriptID">
                <definition>
                  <caption value="Interline Forms ManuscriptCA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsCA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.CAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="CA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.COFormsManuScriptID" type="string" comment="" path="COFormsManuScriptID">
                <definition>
                  <caption value="Interline Forms ManuscriptCO Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsCO">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.COFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="CO" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.CTFormsManuScriptID" type="string" comment="" path="CTFormsManuScriptID">
                <definition>
                  <caption value="Interline Forms ManuscriptCT Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsCT">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.CTFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="CT" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.DCFormsManuScriptID" type="string" comment="" path="DCFormsManuScriptID">
                <definition>
                  <caption value="Interline Forms ManuscriptDC Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsDC">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.DCFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="DC" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.DEFormsManuScriptID" type="string" comment="" path="DEFormsManuScriptID">
                <definition>
                  <caption value="Interline Forms ManuscriptDE Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsDE">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.DEFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="DE" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.FLFormsManuScriptID" type="string" comment="" path="FLFormsManuScriptID">
                <definition>
                  <caption value="Interline Forms ManuscriptFL Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsFL">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.FLFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="FL" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.GAFormsManuScriptID" type="string" comment="" path="GAFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptGA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsGA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.GAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="GA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.HIFormsManuScriptID" type="string" comment="" path="HIFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptHI Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsHI">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.HIFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="HI" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.IAFormsManuScriptID" type="string" comment="" path="IAFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptIA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsIA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.IAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="IA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.IDFormsManuScriptID" type="string" comment="" path="IDFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptID Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsID">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.IDFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="ID" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.ILFormsManuScriptID" type="string" comment="" path="ILFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptIL Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsIL">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.ILFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="IL" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.INFormsManuScriptID" type="string" comment="" path="INFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptIN Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsIN">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.INFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="IN" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.KSFormsManuScriptID" type="string" comment="" path="KSFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptKS Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsKS">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.KSFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="KS" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.KYFormsManuScriptID" type="string" comment="" path="KYFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptKY Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsKY">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.KYFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="KY" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.LAFormsManuScriptID" type="string" comment="" path="LAFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptLA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsLA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.LAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="LA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MAFormsManuScriptID" type="string" comment="" path="MAFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptMA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="MA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MDFormsManuScriptID" type="string" comment="" path="MDFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptMD Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMD">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MDFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="MD" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MEFormsManuScriptID" type="string" comment="" path="MEFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptME Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsME">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MEFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="ME" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MIFormsManuScriptID" type="string" comment="" path="MIFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptMI Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMI">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MIFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="MI" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MNFormsManuScriptID" type="string" comment="" path="MNFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptMN Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMN">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MNFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="MN" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MOFormsManuScriptID" type="string" comment="" path="MOFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptMO Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMO">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MOFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="MO" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MSFormsManuScriptID" type="string" comment="" path="MSFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptMS Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMS">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MSFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="MS" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MTFormsManuScriptID" type="string" comment="" path="MTFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptMT Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMT">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MTFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="MT" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.MultiStateFormsManuScriptID" type="string" comment="" path="MultiStateFormsManuScriptID">
                <definition>
                  <caption value="Multi State Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsMultiState">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.MultiStateFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="US" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NCFormsManuScriptID" type="string" comment="" path="NCFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptNC Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsNC">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NCFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="NC" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NDFormsManuScriptID" type="string" comment="" path="NDFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptND Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsND">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NDFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="ND" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NEFormsManuScriptID" type="string" comment="" path="NEFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptNE Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsNE">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NEFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="NE" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NHFormsManuScriptID" type="string" comment="" path="NHFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptNH Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsNH">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NHFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="NH" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NJFormsManuScriptID" type="string" comment="" path="NJFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptNJ Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsNJ">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NJFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="NJ" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NMFormsManuScriptID" type="string" comment="" path="NMFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptNM Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsNM">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NMFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="NM" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NVFormsManuScriptID" type="string" comment="" path="NVFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptNV Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsNV">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NVFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="NV" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.NYFormsManuScriptID" type="string" comment="" path="NYFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptNY Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsNY">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.NYFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="NY" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.OHFormsManuScriptID" type="string" comment="" path="OHFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptOH Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsOH">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.OHFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="OH" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.OKFormsManuScriptID" type="string" comment="" path="OKFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptOK Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsOK">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.OKFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="OK" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.ORFormsManuScriptID" type="string" comment="" path="ORFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptOR Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsOR">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.ORFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="OR" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.PAFormsManuScriptID" type="string" comment="" path="PAFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptPA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsPA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.PAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="PA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.RIFormsManuScriptID" type="string" comment="" path="RIFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptRI Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsRI">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.RIFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="RI" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.SCFormsManuScriptID" type="string" comment="" path="SCFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptSC Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsSC">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.SCFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="SC" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.SDFormsManuScriptID" type="string" comment="" path="SDFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptSD Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsSD">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.SDFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="SD" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.TNFormsManuScriptID" type="string" comment="" path="TNFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptTN Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsTN">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.TNFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="TN" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.TXFormsManuScriptID" type="string" comment="" path="TXFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptTX Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsTX">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.TXFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="TX" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.UTFormsManuScriptID" type="string" comment="" path="UTFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptUT Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsUT">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.UTFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="UT" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.VAFormsManuScriptID" type="string" comment="" path="VAFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptVA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsVA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.VAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="VA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.VTFormsManuScriptID" type="string" comment="" path="VTFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptVT Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsVT">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.VTFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="VT" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.WAFormsManuScriptID" type="string" comment="" path="WAFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptWA Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsWA">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.WAFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="WA" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.WIFormsManuScriptID" type="string" comment="" path="WIFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptWI Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsWI">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.WIFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="WI" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.WVFormsManuScriptID" type="string" comment="" path="WVFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptWV Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsWV">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.WVFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="WV" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <public id="InterlineFormsManuscript.WYFormsManuScriptID" type="string" comment="" path="WYFormsManuScriptID">
                <definition>
                  <caption value="Forms ManuscriptWY Forms Manu Script ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="InterlineFormsManuscriptPrivate.CalculateFormsWY">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default idref="InterlineFormsManuscript.WYFormsManuScriptID" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue value="WY" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&gt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <object id="InterlineFormsManuscriptPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="InterlineFormsManuscriptPrivate.CalculateForms" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="PolicyInput.HonorRates" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="Carrier" />
                      <argument op="add" type="string" value="InterlineForms" />
                    </calculation>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsAK" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationAK" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.AKFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsAL" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationAL" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.ALFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsAR" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationAR" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.ARFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsAZ" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationAZ" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.AZFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsCA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationCA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.CAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsCT" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationCT" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.CTFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsDC" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationDC" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.DCFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsDE" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationDE" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.DEFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsFL" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationFL" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.FLFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsGA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationGA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.GAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsHI" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationHI" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.HIFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsIL" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationIL" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.ILFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsIN" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationIN" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.INFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsIA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationIA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.IAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsKS" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationKS" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.KSFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsKY" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationKY" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.KYFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsCO" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationCO" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.COFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsID" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationID" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.IDFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsLA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationLA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.LAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMI" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationMI" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MIFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMO" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationMO" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MOFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMN" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationMN" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MNFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationMA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsME" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationME" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MEFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMultiState" caption="" type="boolean">
                  <value>
                    <comparison compare="or">
                      <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="InterlineFormsManuscript.MultiStateFormsManuScriptID" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMT" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationMT" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MTFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsNC" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationNC" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NCFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsND" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationND" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NDFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMD" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationMD" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MDFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsMS" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationMS" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.MSFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsNE" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationNE" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NEFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsNH" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationNH" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NHFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsNJ" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationNJ" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NJFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsNM" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationNM" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NMFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsNV" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationNV" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NVFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsNY" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationNY" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.NYFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsOK" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationOK" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.OKFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsOR" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationOR" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.ORFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsOH" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationOH" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.OHFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsPA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationPA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.PAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsRI" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationRI" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.RIFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsSC" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationSC" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.SCFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsSD" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationSD" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.SDFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsTN" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationTN" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.TNFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsTX" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationTX" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.TXFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsUT" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationUT" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.UTFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsVA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationVA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.VAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsVT" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationVT" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.VTFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsWA" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationWA" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.WAFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsWI" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationWI" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.WIFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsWV" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationWV" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.WVFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.CalculateFormsWY" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="AccountPrivate.IsAnyLocationWY" type="boolean" />
                      <comparison compare="or">
                        <operand idref="InterlineFormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="InterlineFormsManuscript.WYFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.ManuscriptVersion" type="string" comment="" caption="Manuscript Version">
                  <value>
                    <request verb="ManuScriptBroker.listKeyValuesRq" get="keyValues/keyValue/@value">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="version" name="keyName" dataType="attribute" />
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="ID" name="name" dataType="attribute" />
                            <nameValue idref="PolicyManuScript.InterlineFormsManuscriptID" name="value" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.ManuscriptVersionMinimum" type="string" comment="" caption="Manuscript Version">
                  <value>
                    <calculation>
                      <argument op="eq" idref="InterlineFormsManuscriptPrivate.ManuscriptVersionBase" type="string" />
                      <argument op="add" type="string" value="." />
                      <argument op="add" idref="InterlineFormsManuscriptPrivate.ManuscriptVersionRelease" type="string" />
                      <argument op="add" type="string" value="." />
                    </calculation>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.ManuscriptVersionRelease" type="string" comment="" caption="Manuscript Version">
                  <value>
                    <subString subStrMethod="delimitedList">
                      <sourceString idref="InterlineFormsManuscriptPrivate.ManuscriptVersion" />
                      <separatorChar value="." />
                      <ordPosition value="2" />
                    </subString>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.ManuscriptVersionBase" type="string" comment="" caption="Manuscript Version">
                  <value>
                    <subString subStrMethod="delimitedList">
                      <sourceString idref="InterlineFormsManuscriptPrivate.ManuscriptVersion" />
                      <separatorChar value="." />
                      <ordPosition value="1" />
                    </subString>
                  </value>
                </private>
                <private id="InterlineFormsManuscriptPrivate.ManuscriptVersionMaximum" type="string" comment="" caption="Manuscript Version">
                  <value>
                    <calculation>
                      <argument op="eq" idref="InterlineFormsManuscriptPrivate.ManuscriptVersionBase" type="string" />
                      <argument op="add" type="string" value="." />
                      <argument op="add" idref="InterlineFormsManuscriptPrivate.ManuscriptVersionRelease" type="string" />
                      <argument op="add" type="string" value=".Z" />
                    </calculation>
                  </value>
                </private>
              </object>
            </object>
            <public id="PolicyManuScript.InterlineFormsManuscriptID" type="string" comment="" path="InterlineFormsManuscriptID">
              <rules>
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyInput.HonorRates" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="PolicyManuScript.InterlineFormsManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyManuScript.InterlineFormsManuscriptID" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.CPPManuscriptIDTable" />
                        <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                        <fieldRef value="Value" />
                        <keyRef type="string" value="InterlineCPP" name="Manuscript" />
                        <keyRef idref="PolicyManuScript.StateKey" type="string" name="State" />
                        <keyRef idref="PolicyManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
              <definition>
                <maxLength idref="MaxLength.sValue" />
                <caption value="Interline Forms Manuscript ID" />
              </definition>
            </public>
            <public id="PolicyManuScript.InterlineFormsControlManuscriptID" type="string" comment="" path="InterlineFormsControlManuscriptID">
              <definition>
                <caption type="string" value="Policy Manu Script Interline Forms Control Manuscript ID" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyInput.HonorRates" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="PolicyManuScript.InterlineFormsControlManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyManuScript.InterlineFormsControlManuscriptID" />
                    <else idref="PolicyManuScript.InterlineFormsControlManuscriptBroker" />
                  </if>
                </value>
              </rules>
            </public>
            <private id="PolicyManuScript.InterlineFormsControlManuscriptBroker" type="string" comment="" caption="Policy Manu Script Interline Forms Control Manuscript Broker">
              <value>
                <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="" name="key" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="lob" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="InterlineFormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="productCode" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue value="FormsControl" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="&lt;=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="sort" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="descending" name="direction" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <public id="PolicyManuScript.CPPProductManuscriptID" path="CPPProductManuscriptID" type="string">
              <definition>
                <caption value="Policy Manu ScriptCPP Product Manuscript ID" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyInput.HonorRates" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="PolicyManuScript.CPPProductManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyManuScript.CPPProductManuscriptID" />
                    <else idref="PolicyManuScript.CPPProductManuscriptIDBroker" />
                  </if>
                </value>
              </rules>
            </public>
            <private id="PolicyManuScript.CPPProductManuscriptIDBroker" type="string" caption="temp">
              <value>
                <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="" name="key" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="lob" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.CPPProductLineOfBusiness" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="productCode" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue value="Product" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="state" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue value="US-INH" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="version" name="name" dataType="attribute" />
                        <nameValue value="&gt;=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="version" name="name" dataType="attribute" />
                        <nameValue value="&lt;=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="&lt;=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.CPPProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="sort" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="descending" name="direction" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.CPPProductLineOfBusiness" caption="" type="string">
              <value value="CarrierCPP" />
            </private>
            <private id="PolicyManuScript.ManuscriptVersion" type="string" comment="" caption="Manuscript Version">
              <value>
                <request verb="ManuScriptBroker.listKeyValuesRq" get="keyValues/keyValue/@value">
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="version" name="keyName" dataType="attribute" />
                    <nameValue value="" name="keys" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="ID" name="name" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.ManuscriptVersionID" name="value" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.ManuscriptVersionMinimum" type="string" comment="" caption="Manuscript Version">
              <value>
                <calculation>
                  <argument op="eq" idref="PolicyManuScript.ManuscriptVersionBase" type="string" />
                  <argument op="add" type="string" value="." />
                  <argument op="add" idref="PolicyManuScript.ManuscriptVersionRelease" type="string" />
                  <argument op="add" type="string" value="." />
                </calculation>
              </value>
            </private>
            <private id="PolicyManuScript.ManuscriptVersionRelease" type="string" comment="" caption="Manuscript Version">
              <value value="0" />
            </private>
            <private id="PolicyManuScript.ManuscriptVersionBase" type="string" comment="" caption="Manuscript Version">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="PolicyManuScript.ManuscriptVersion" />
                  <separatorChar value="." />
                  <ordPosition value="1" />
                </subString>
              </value>
            </private>
            <private id="PolicyManuScript.ManuscriptVersionMaximum" type="string" comment="" caption="Manuscript Version">
              <value>
                <calculation>
                  <argument op="eq" idref="PolicyManuScript.ManuscriptVersionBase" type="string" />
                  <argument op="add" type="string" value="." />
                  <argument op="add" idref="PolicyManuScript.ManuscriptVersionRelease" type="string" />
                  <argument op="add" type="string" value=".Z" />
                </calculation>
              </value>
            </private>
            <private id="PolicyManuScript.ManuscriptVersionID" type="string" comment="" caption="Manuscript Version">
              <value idref="GlobalOutput.MasterManuScriptID" />
            </private>
            <private id="PolicyManuScript.EffectiveDateKey" type="date">
              <value idref="PolicyInput.EffectiveDate" />
            </private>
            <private id="PolicyManuScript.EffectiveDateKeyName" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                      <operand type="string" value="Renew" />
                    </comparison>
                  </condition>
                  <then idref="ManuScriptKeys.effectiveDateRenewal" />
                  <else idref="ManuScriptKeys.effectiveDateNew" />
                </if>
              </value>
            </private>
            <private id="PolicyManuScript.LineOfBusinessKey" type="string">
              <value idref="PolicyInput.LineOfBusiness" />
            </private>
            <private id="PolicyManuScript.ManuScriptID" type="string" caption="temp">
              <value>
                <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="" name="keys" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="lob" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="state" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.StateKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="&lt;=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="sort" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="descending" name="direction" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.MasterManuScriptID" type="string" caption="temp">
              <value>
                <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;masterID&quot;]/@value">
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="" name="keys" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="lob" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="state" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.StateKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="&lt;=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="sort" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="descending" name="direction" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.RateEffectiveDate" type="date" caption="temp">
              <value>
                <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;effectiveDateNew&quot;]/@value">
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="" name="keys" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="lob" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="state" name="name" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.StateKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="&lt;=" name="operator" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                      </nameValue>
                      <nameValue value="" name="sort" dataType="element">
                        <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                        <nameValue value="descending" name="direction" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.StateKey" type="string">
              <value idref="PolicyInput.PrimaryRatingState" />
            </private>
            <private id="PolicyManuScript.StatusKey" type="string">
              <value value="" />
            </private>
            <private id="PolicyManuScript.ManuscriptVersionProduct" type="string" comment="">
              <value>
                <request verb="ManuScriptBroker.listKeyValuesRq" get="keyValues/keyValue/@value">
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="version" name="keyName" dataType="attribute" />
                    <nameValue value="" name="keys" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="ID" name="name" dataType="attribute" />
                        <nameValue idref="PolicyManuScript.CPPProductManuscriptID" name="value" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.ManuscriptVersionProductBase" type="string" comment="">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="PolicyManuScript.ManuscriptVersionProduct" />
                  <separatorChar value="." />
                  <ordPosition value="1" />
                </subString>
              </value>
            </private>
            <private id="PolicyManuScript.CurrentManuscriptID" caption="" type="string">
              <value>
                <session sessionValue="manuscriptID" />
              </value>
            </private>
            <private id="PolicyManuScript.SetPolicyManuscriptVersionID" caption="" type="string">
              <affects>
                <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptVersionID" effect="setValue" />
              </affects>
              <value>
                <request verb="ManuScript.getPropertiesRq" get="properties/@versionID">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.SetPolicyManuscriptName" caption="" type="string">
              <affects>
                <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptName" effect="setValue" />
              </affects>
              <value>
                <request verb="ManuScript.getPropertiesRq" get="properties/@caption">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.SetPolicyManuscriptValues" caption="" type="string">
              <affects>
                <reference idref="PolicyManuScript.SetPolicyManuscriptName" effect="postEffect" />
                <reference idref="PolicyManuScript.SetPolicyManuscriptVersionID" effect="postEffect" />
              </affects>
            </private>
            <private id="PolicyManuScript.ResetTransactionPolicyManuscriptID" type="string" comment="" alwaysRun="1">
              <value>
                <iterator type="string" scope="last" action="sum" idref="Transaction_Current">
                  <reference idref="Transaction_CurrentPrivate.SetPolicyManuscritpID" type="string" />
                </iterator>
              </value>
            </private>
            <private id="PolicyManuScript.LocationDeleteManuscriptID" caption="" type="string">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.CPPManuscriptIDTable" />
                  <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="LocationDelete" name="Manuscript" />
                  <keyRef idref="PolicyManuScript.StateKey" type="string" name="State" />
                  <keyRef idref="PolicyManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <public id="PolicyManuScript.CPPPagesManuscriptID" type="string" comment="" path="CPPPagesManuscriptID">
              <rules>
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyInput.HonorRates" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="PolicyManuScript.CPPPagesManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyManuScript.CPPPagesManuscriptID" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.CPPManuscriptIDTable" />
                        <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                        <fieldRef value="Value" />
                        <keyRef type="string" value="PagesCPP" name="Manuscript" />
                        <keyRef idref="PolicyManuScript.StateKey" type="string" name="State" />
                        <keyRef idref="PolicyManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
            </public>
            <private id="PolicyManuScript.CPPProductManuscriptEffectiveDate" type="string" caption="temp" path="CPPProductManuscriptEffectiveDatex">
              <value>
                <if>
                  <condition>
                    <comparison compare="le">
                      <operand idref="PolicyInput.EffectiveDate" type="date" />
                      <operand idref="PolicyManuScript.PolicyManuscriptEffectiveDate" type="string" />
                    </comparison>
                  </condition>
                  <then idref="PolicyManuScript.PolicyManuscriptEffectiveDate" />
                  <else idref="PolicyInput.EffectiveDate" />
                </if>
              </value>
            </private>
            <private id="PolicyManuScript.PolicyManuscriptEffectiveDate" type="string" comment="" caption="Manuscript Effective Date" path="PolicyManuscriptEffectiveDate">
              <value>
                <request verb="ManuScriptBroker.listKeyValuesRq" get="keyValues/keyValue/@value">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="keyName" dataType="attribute" />
                    <nameValue value="" name="keys" dataType="element">
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="ID" name="name" dataType="attribute" />
                        <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="value" dataType="attribute" />
                        <nameValue value="=" name="operator" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="PolicyManuScript.SetCurrentManuscriptPrintManuscriptID" type="string" comment="" alwaysRun="1">
              <value>
                <request verb="Session.setElementRq" get="">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="_printInterface^printManuscriptId" name="path" dataType="attribute" />
                    <nameValue idref="PolicyManuScript.CurrentManuscriptID" name="value" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
          </object>
          <private id="PolicyPrivate.IsPropertyLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="PropertyLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsAutoLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="CommercialAutoLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsWorkersCompensationLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsGeneralLiabilityLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="GeneralLiabilityLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsInlandMarineLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="InlandMarineLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCrimeLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="CrimeLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoSelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialAutoSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,CommercialAuto" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialGeneralLiabilitySelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialGeneralLiabilitySelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,GeneralLiability" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="GeneralLiability" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialPropertySelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialPropertySelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,Property" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Property" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialWorkersCompensationSelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialWorkersCompensationSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="WorkersCompensation" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="WorkersCompensation" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.ShowOccupancy" type="boolean">
            <value>
              <comparison compare="or">
                <comparison compare="or">
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialPropertySelected" type="boolean" />
                    <operand idref="PolicyPrivate.IsGeneralLiabilityLOB" type="boolean" />
                  </comparison>
                  <operand idref="PolicyPrivate.IsCrimeLOB" type="boolean" />
                </comparison>
                <operand idref="PolicyPrivate.IsInlandMarineLOB" type="boolean" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialBusinessOwnersSelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialBusinessOwnersSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="BusinessOwners" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="BusinessOwners" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialCrimeSelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialCrimeSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,Crime" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Crime" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.ShowIsAuditable" caption="" type="boolean">
            <value idref="True" />
          </private>
          <private id="PolicyPrivate.IsNotInAudit" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.SetInSICEditMode" caption="" type="boolean">
            <value idref="True" />
            <affects>
              <reference idref="PolicyOutputNonShredded.InSICEditMode" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.ClearInSICEditMode" caption="" type="boolean">
            <value idref="False" />
            <affects>
              <reference idref="PolicyOutputNonShredded.InSICEditMode" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.NotInSICEditMode" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.InSICEditMode" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineSelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialInlandMarineSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,InlandMarine" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="InlandMarine" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsNotPackagePolilcy" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.CarrierManuScriptIDLookup" type="string" comment="" caption="Loss Cost Table ManuScript ID">
            <value>
              <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                <onFailure value="" />
                <modifySession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="" name="keys" dataType="element">
                    <nameValue value="" name="key" dataType="element">
                      <nameValue value="lob" name="name" dataType="attribute" />
                      <nameValue value="=" name="operator" dataType="attribute" />
                      <nameValue value="CarrierPackage" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="key" dataType="element">
                      <nameValue value="state" name="name" dataType="attribute" />
                      <nameValue value="=" name="operator" dataType="attribute" />
                      <nameValue value="US" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="key" dataType="element">
                      <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                      <nameValue value="&lt;=" name="operator" dataType="attribute" />
                      <nameValue idref="PolicyInput.EffectiveDate" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="sort" dataType="element">
                      <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                      <nameValue value="descending" name="direction" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyPrivate.ProductManuScriptIDLookup" type="string" comment="" caption="Loss Cost Table ManuScript ID">
            <value>
              <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                <onFailure value="" />
                <modifySession value="" />
                <default value="DuckCreekTech_Product_US_00_22" />
                <nameValues>
                  <nameValue value="" name="keys" dataType="element">
                    <nameValue value="" name="key" dataType="element">
                      <nameValue value="lob" name="name" dataType="attribute" />
                      <nameValue value="=" name="operator" dataType="attribute" />
                      <nameValue value="Package" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="key" dataType="element">
                      <nameValue value="state" name="name" dataType="attribute" />
                      <nameValue value="=" name="operator" dataType="attribute" />
                      <nameValue value="US" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="key" dataType="element">
                      <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                      <nameValue value="&lt;=" name="operator" dataType="attribute" />
                      <nameValue idref="PolicyInput.EffectiveDate" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="sort" dataType="element">
                      <nameValue idref="PolicyManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                      <nameValue value="descending" name="direction" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyPrivate.ProductManuscriptID" type="string" comment="" caption="Product Manuscript ID">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PolicyInput.HonorRates" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                    <comparison compare="ne">
                      <operand idref="PolicyOutputNonShredded.HonoredProductManuscriptID" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyOutputNonShredded.HonoredProductManuscriptID" />
                <else idref="PolicyPrivate.ProductManuscriptCheck" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ShowStatButton" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="Context.CurrentContext" type="string" />
                <operand type="string" value="Stat" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsBusinessOwnersLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="CommercialBusinessOwnersPrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InGeneralLiability" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsGeneralLiabilityLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="GeneralLiabilityLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InProperty" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsPropertyLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="PropertyLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InCommercialAuto" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsAutoLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="CommercialAutoLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InCrime" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsCrimeLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="CrimeLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InBusinessOwners" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsBusinessOwnersLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InInlandMarine" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsInlandMarineLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="InlandMarineLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InWokersCompensation" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsWorkersCompensationLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsNotWorkersCompensationLOB" type="float">
            <value>
              <comparison compare="ne">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoSelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialAutoLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialBusinessOwnersSelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialBusinessOwnersPrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialCrimeSelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CrimeLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialGeneralLiabilitySelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="GeneralLiabilityLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineSelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="InlandMarineLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialPropertySelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="PropertyLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialWorkersCompensationSelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.PropertyPremium" type="float" comment="">
            <value>
              <iterator type="float" scope="all" action="sum" idref="Line">
                <reference idref="LineOutput.Premium" type="float" />
                <where>
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand idref="PropertyLinePrivate.LOBCode" type="string" />
                  </comparison>
                </where>
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.ShowTypeOfRisk" caption="" type="boolean">
            <value>
              <comparison idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
            </value>
            <affects>
              <reference idref="PolicyOutput.StatCodePolicyType" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.LineCount" caption="" type="int" alwaysRun="1">
            <value>
              <iterator type="int" scope="all" action="count" idref="Line" />
            </value>
          </private>
          <private id="PolicyPrivate.SetFieldOnAccountTab" caption="" type="string">
            <affects>
              <reference idref="GlobalOutput.CurrentlyInCPP" effect="preEffect" />
              <reference idref="PolicyManuScript.ResetPolicyManuscriptID" effect="preEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ProductManuscriptCheck" type="string" comment="" caption="Product Manuscript ID">
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.Product" type="string" />
                    <operand type="string" value="Carrier_Product_US_00_20" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.CarrierManuScriptIDLookup" />
                <else idref="PolicyPrivate.ProductManuScriptIDLookup" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.SetHonoredManuscriptID" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetHonoredManuscriptIDExecute" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ShowHonorRatesMonoline" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowHonorRatesPackage" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.SetHonoredProductManuscriptID" caption="" type="string" alwaysRun="1">
            <affects>
              <reference idref="PolicyOutputNonShredded.HonoredProductManuscriptID" effect="setValue" />
            </affects>
            <value idref="PolicyPrivate.ProductManuscriptID" />
          </private>
          <private id="PolicyPrivate.SaveHonoredRates" caption="" type="string" alwaysRun="1">
            <value>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.HonorRates" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetHonorRatesTrue" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.SetHonorRatesTrue" caption="" type="string" alwaysRun="1">
            <value idref="True" />
            <affects>
              <reference idref="PolicyInput.HonorRates" effect="setValue" />
              <reference idref="PolicyPrivate.SetHonoredManuscriptIDExecute" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.SetHonoredLineIDs" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.SetHonoredManuscriptID" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SetHonoredLineIDsXPath" caption="" type="string" alwaysRun="1">
            <value>
              <calculation>
                <argument op="eq" type="string" value="..//policy[(LineOfBusiness='" />
                <argument op="add" idref="LineOutput.Type" type="string" />
                <argument op="add" type="string" value="') or (" />
                <argument op="add" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" type="string" value="Package" />
                <argument op="add" type="string" value="'])]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.ResetHonorRatesOnRenewal" caption="" type="boolean">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="and">
                          <operand idref="Rules.PolicyIsNotQuoteOrApplication" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="PolicyPrivate.HonorRatesReCalc" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.PreTransactionProductActivitiesCompleted" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyInput.HonorRates" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="or">
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="PolicyAdminPrivate.IsNewTransACT" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="OSEventData.inAudit" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsNewTransACT" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.ClearHonorRates" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ClearHonorRates" caption="" type="boolean">
            <value idref="False" />
            <affects>
              <reference idref="PolicyInput.HonorRates" effect="setValue" />
              <reference idref="PolicyPrivate.RemoveHonoredLineIDs" effect="postEffect" />
              <reference idref="PolicyPrivate.ClearManuScriptIDs" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.RemoveHonoredLineIDs" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.RemoveHonoredManuscriptRecord" type="string" />
                <where>
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="PolicyInput.LineOfBusiness" type="string" />
                      <operand idref="LineOutput.Type" type="string" />
                    </comparison>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="LineInput.Selected" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyInput.LineOfBusiness" type="string" />
                        <operand type="string" value="Package" />
                      </comparison>
                    </comparison>
                  </comparison>
                </where>
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.DeleteObjectRecord" caption="" type="string">
            <value>
              <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                  <nameValue value="Policy" name="objectID" dataType="attribute" />
                  <nameValue idref="PolicyPrivate.ContextPath" name="context" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyPrivate.ContextPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//*[@id='" />
                <argument op="add" idref="PolicyOutput.ID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.SavePolicyManuscriptIDCheck" caption="" type="boolean">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PolicyInput.HonorRates" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <comparison compare="is">
                      <operand idref="PolicyOutputNonShredded.LastTransactionTypeNotDeprecated" type="string" />
                      <operand type="string" value="New,Renew,Rewrite,Reissue,Restart" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetHonorRatesTrue" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialGeneralLiabilityFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialGeneralLiabilitySelected" />
                <customQuery idref="PolicyPrivate.CommercialGeneralLiabilityFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialGeneralLiabilityFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="GeneralLiabilityLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialAutoFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialAutoSelected" />
                <customQuery idref="PolicyPrivate.CommercialAutoFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialBusinessOwnersFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" />
                <customQuery idref="PolicyPrivate.CommercialBusinessOwnersFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialCrimeFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialCrimeSelected" />
                <customQuery idref="PolicyPrivate.CommercialCrimeFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialInlandMarineFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialInlandMarineSelected" />
                <customQuery idref="PolicyPrivate.CommercialInlandMarineFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialPropertyFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialPropertySelected" />
                <customQuery idref="PolicyPrivate.CommercialPropertyFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialWorkersCompensationFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" />
                <customQuery idref="PolicyPrivate.CommercialWorkersCompensationFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialAutoFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="CommercialAutoLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialBusinessOwnersFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="CommercialBusinessOwnersPrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialCrimeFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="CrimeLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialInlandMarineFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="InlandMarineLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialPropertyFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="PropertyLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialWorkersCompensationFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.ShowSICCodeLookup" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="ne">
                  <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.CanAddReinsurance" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="LinePrivate.NumReinsuranceInDialogMode" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowReinsurance" caption="" type="boolean">
            <value idref="True" />
          </private>
          <private id="PolicyPrivate.SICCodeDataKeyFile" caption="" type="string">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.ISOSICCodes" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Value" />
                <keyRef type="string" value="dk" name="DataServicesFile" />
                <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
              </lookup>
            </value>
          </private>
          <private id="PolicyPrivate.SetSICCode" caption="" type="string" alwaysRun="1">
            <value>
              <subString subStrMethod="delimitedList">
                <sourceString idref="PolicyInput.SICCodeDesc" />
                <separatorChar value="[" />
                <ordPosition value="2" />
              </subString>
            </value>
          </private>
          <private id="PolicyPrivate.ShowSICCode" caption="" type="boolean">
            <value idref="True" />
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyDetail_Page.ShowSICCodeValue" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" />
                <then idref="False" />
              </if>
              <if>
                <condition idref="PolicyAdminPrivate.IsLocked" />
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionNewBusiness" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="New" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionRenew" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Renew" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionEndorse" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Endorse" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionCancel" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                  <operand type="string" value="Cancel" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                  <operand type="string" value="CancelPending" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionReinstate" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Reinstate" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionRewrite" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Rewrite" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionReissue" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Reissue" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionRescind" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Rescind" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionNonRenew" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="NonRenew" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionAudit" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="contains">
                  <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                  <operand type="string" value="Audit" />
                </comparison>
                <comparison compare="isnot">
                  <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                  <operand type="string" value="VoidFinalAudit,VoidInterimAudit" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobNewBusiness" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionNewBusiness" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobEndorse" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionEndorse" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobRenew" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionRenew" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobReissue" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionReissue" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobCancel" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionCancel" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobAudit" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionAudit" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobNonRenew" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionNonRenew" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobRewrite" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionRewrite" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobReinstate" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCurrentTransactionReinstate" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCurrentTransactionRescindCancelPending" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobRescind" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionRescind" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowInterlinePackage" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowInterlineMonoline" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeCoveragePremiums" caption="" type="float">
            <value>
              <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AllCoveragesShare">
                <reference idref="AllCoveragesSharePrivate.SetPremiumToZero" type="float" />
                <customQuery idref="PolicyPrivate.InitializeCoveragePremiumsXPath" />
              </iterator>
            </value>
            <affects>
              <reference idref="PolicyPrivate.InitializeFullyEarnedCoveragePremiums" effect="postEffect" />
              <reference idref="PolicyPrivate.InitializeCoverageIDs" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.InitializeCoveragePremiumsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//coverage[((Premium!=0) or (written!=0)) and (ancestor-or-self::*[@deleted=1] or ancestor-or-self::*[Indicator=0])]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.ShowISOLicenseInfo" caption="" type="boolean">
            <value idref="True" />
            <misc>
              <if>
                <condition idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" />
                <then idref="False" />
              </if>
              <if>
                <condition idref="PolicyPrivate.IsCommercialInlandMarineAAISSelected" />
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.MonolineLineProductManuscript" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LineManuScript.LineProductManuscriptID" type="string" />
                <customQuery idref="PolicyPrivate.MonolineLineProductManuscriptXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.MonolineLineProductManuscriptXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="PolicyInput.LineOfBusiness" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsEligible" type="boolean" comment="" caption="Is Eligible" override="1">
            <value>
              <if>
                <condition>
                  <comparison compare="contains">
                    <operand idref="PolicyPrivate.CheckIsEligible" type="string" />
                    <operand type="int" value="0" />
                  </comparison>
                </condition>
                <then idref="False" />
                <else idref="True" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.IsBindable" type="boolean" comment="" caption="Is Bindable" override="1">
            <value>
              <if>
                <condition>
                  <comparison compare="contains">
                    <operand idref="PolicyPrivate.CheckIsBindable" type="string" />
                    <operand type="int" value="0" />
                  </comparison>
                </condition>
                <then idref="False" />
                <else idref="True" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.NAICSCodeDataKeyFile" caption="" type="string">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.NAICSCodes" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Value" />
                <keyRef type="string" value="dk" name="DataServicesFile" />
                <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
              </lookup>
            </value>
          </private>
          <private id="PolicyPrivate.SetNAICSCode" caption="" type="string" alwaysRun="1">
            <value>
              <subString subStrMethod="delimitedList">
                <sourceString idref="PolicyInput.NAICSCodeDesc" />
                <separatorChar value="[" />
                <ordPosition value="2" />
              </subString>
            </value>
          </private>
          <private id="PolicyPrivate.ShowNAICSCode" caption="" type="boolean">
            <value idref="True" />
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyDetail_Page.ShowNAICSCodeValue" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" />
                <then idref="False" />
              </if>
              <if>
                <condition idref="PolicyAdminPrivate.IsLocked" />
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.ShowNAICSCodeLookup" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="ne">
                  <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ClearInNAICSEditMode" caption="" type="boolean">
            <value idref="False" />
            <affects>
              <reference idref="PolicyOutputNonShredded.InNAICSEditMode" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.NotInNAICSEditMode" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.InNAICSEditMode" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.SetInNAICSEditMode" caption="" type="boolean">
            <value idref="True" />
            <affects>
              <reference idref="PolicyOutputNonShredded.InNAICSEditMode" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.ShowAdditionalNamedInsuredButton" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowAdditionalNamedInsuredApplicableMessage" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand type="string" value="Package" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.HonorRatesReCalc" caption="" type="boolean">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.ActionsApplicable" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="HonorRatesReCalc" />
                <keyRef idref="PolicyOutputNonShredded.LastTransactionType" type="string" name="TransactionType" />
              </lookup>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionRescindCancelPending" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="RescindCancelPending" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.LineTransactionCommit" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.DoTransactionCommit" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SelectedLineXPath" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.MonoLineXPath" />
                <else>
                  <calculation>
                    <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue='" />
                    <argument op="add" idref="True" type="int" />
                    <argument op="add" type="string" value="']]" />
                  </calculation>
                </else>
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.LineTransactionSetup" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.DoTransactionSetup" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialAutoMAFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialAutoMASelected" />
                <customQuery idref="PolicyPrivate.CommercialAutoMAFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoMASelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialAutoMASelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialAutoMA" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialAutoMA" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.CommercialAutoMAFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="CommercialAutoMALinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialUmbrellaFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialUmbrellaSelected" />
                <customQuery idref="PolicyPrivate.CommercialUmbrellaFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialUmbrellaFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="CommercialUmbrellaLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialUmbrellaSelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialUmbrellaSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,CommercialUmbrella" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialUmbrella" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsAutoMALOB" type="float">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="CommercialAutoMALinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsUmbrellaLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="CommercialUmbrellaLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InCommercialAutoMA" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsAutoLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="CommercialAutoLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InCommercialUmbrella" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsUmbrellaLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="CommercialUmbrellaLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoMASelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialAutoMALinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialUmbrellaSelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialUmbrellaLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobHeader" caption="" type="boolean">
            <value idref="True" />
          </private>
          <private id="PolicyPrivate.ShowPrintJobFooter" caption="" type="boolean">
            <value idref="True" />
          </private>
          <private id="PolicyPrivate.CurrentDateTime" caption="" type="datetime">
            <value>
              <session sessionValue="datetime" />
            </value>
          </private>
          <private id="PolicyPrivate.MonoLineXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="PolicyInput.LineOfBusiness" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialBusinessOwnersSelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="BusinessOwnersLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoMASelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="CommercialAutoMALinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoSelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <where>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsPrimaryLocationStateMA" type="string" />
                    <operand idref="False" type="int" />
                  </comparison>
                </where>
                <customQuery idref="CommercialAutoLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialCrimeSelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="CrimeLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialGeneralLiabilitySelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="GeneralLiabilityLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineSelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="InlandMarineLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialPropertySelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="PropertyLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialUmbrellaSelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="CommercialUmbrellaLinePrivate.LineXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsCommercialUmbrellaAllowMonoline" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialWorkersCompensationSelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="WorkersCompensationLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.FirstSelectedLine" type="string">
            <value>
              <iterator type="string" scope="first" action="max" idref="Line">
                <reference idref="LineOutput.LineID" type="string" />
                <where>
                  <comparison compare="eq">
                    <operand idref="LineInput.Selected" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </where>
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SelectedLineCount" type="int" alwaysRun="1">
            <value>
              <iterator type="int" scope="all" action="count" idref="Line">
                <where>
                  <comparison compare="eq">
                    <operand idref="LineInput.Selected" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </where>
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsAllLinesLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand type="string" value="All" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsInAudit" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <comparison compare="or">
                  <comparison compare="eq">
                    <operand idref="PolicyOutputNonShredded.AuditMode" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="OSEventData.inAudit" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </comparison>
                <comparison compare="and">
                  <comparison compare="contains">
                    <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                    <operand type="string" value="Audit" />
                  </comparison>
                  <comparison compare="isnot">
                    <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                    <operand type="string" value="VoidFinalAudit,VoidInterimAudit" />
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ClearFormsData" caption="" type="string" override="1">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsNewTransACT" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="OSEventData.inAudit" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PrintingAndFormsRequests.ClearFormsData" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.CheckPreTransactionProductActivities" caption="" type="boolean">
            <affects>
              <reference idref="PolicyPrivate.SetPreTransactionProductActivitesCompleted" effect="postEffect" />
            </affects>
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="Rules.PolicyIsInForce" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.PreTransactionProductActivitiesCompleted" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyAdminOutputNonShredded.ActiveTransaction" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.DoPreTransactionProductActivities" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.DoPreTransactionProductActivities" caption="" type="boolean">
            <value value="0" />
          </private>
          <private id="PolicyPrivate.ClearPreTransactionProductActivitesCompleted" caption="" type="boolean">
            <value idref="False" />
            <affects>
              <reference idref="PolicyOutputNonShredded.PreTransactionProductActivitiesCompleted" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.SetPreTransactionProductActivitesCompleted" caption="" type="boolean">
            <value idref="True" />
            <affects>
              <reference idref="PolicyOutputNonShredded.PreTransactionProductActivitiesCompleted" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.SetSelectedLines" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LineOutput.Type" type="string" />
                <reference idref="AccountPrivate.Comma" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
            <affects>
              <reference idref="PolicyPrivate.SetLineTransactionIDWhenAdded" effect="preEffect" />
              <reference idref="PolicyOutputNonShredded.SelectedLines" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.ResetSelectedLines" caption="" type="boolean">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.ActionsApplicable" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="ResetSelectedLines" />
                <keyRef idref="PolicyOutputNonShredded.LastTransactionType" type="string" name="TransactionType" />
              </lookup>
            </value>
          </private>
          <private id="PolicyPrivate.ClearSelectedLines" caption="" type="string">
            <affects>
              <reference idref="PolicyOutputNonShredded.SelectedLines" effect="setValue" />
            </affects>
            <value value="" />
          </private>
          <private id="PolicyPrivate.CheckClearSelectedLines" caption="" type="string">
            <value>
              <if>
                <condition idref="PolicyPrivate.ResetSelectedLines" />
                <then idref="PolicyPrivate.ClearSelectedLines" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ClearManuScriptIDs" caption="" type="string">
            <affects>
              <reference idref="PolicyPrivate.ClearPolicyFormsManuScriptIDs" effect="postEffect" />
              <reference idref="PolicyPrivate.ClearLineManuScriptIDs" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ClearPolicyFormsManuScriptIDs" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="PolicyManuScript.InterlineFormsManuscriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.AKFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.ALFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.ARFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.AZFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.CAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.COFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.CTFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.DCFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.DEFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.FLFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.GAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.HIFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.IAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.IDFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.ILFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.INFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.KSFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.KYFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.LAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MDFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MEFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MIFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MNFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MOFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MSFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MTFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.MultiStateFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NCFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NDFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NEFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NHFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NJFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NMFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NVFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.NYFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.OHFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.OKFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.ORFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.PAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.RIFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.SCFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.SDFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.TNFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.TXFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.UTFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.VAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.VTFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.WAFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.WIFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.WVFormsManuScriptID" effect="setValue" />
              <reference idref="InterlineFormsManuscript.WYFormsManuScriptID" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.ClearLineManuScriptIDs" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.ClearManuScriptIDs" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CheckResetCPPProductManuScript" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyManuScript.ManuscriptVersionProductBase" type="string" />
                    <operand idref="PolicyManuScript.ManuscriptVersionBase" type="string" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.ResetProductManuScriptID" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ResetProductManuScriptID" caption="" type="string">
            <affects>
              <reference idref="PolicyManuScript.CPPProductManuscriptID" effect="setValue" />
            </affects>
            <value idref="PolicyManuScript.CPPProductManuscriptIDBroker" />
          </private>
          <private id="PolicyPrivate.ShowAuditPeriod" caption="" type="boolean">
            <value>
              <comparison idref="PolicyInput.IsAuditable" type="boolean" />
            </value>
          </private>
          <private id="PolicyPrivate.CheckIsBindable" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.IsBindableExternal" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CheckIsEligible" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.IsEligibleExternal" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.FarmFormsMaster" type="string" comment="Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsFarmSelected" />
                <customQuery idref="PolicyPrivate.FarmFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.InFarm" type="boolean" comment="Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsFarmLOB" type="boolean" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="FarmLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsFarmSelectable" caption="" type="boolean" comment="Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="FarmLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.FarmFormsMasterXPath" type="string" comment="Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="FarmLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsFarmSelected" type="boolean" comment="Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsFarmSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,Farm" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsFarmSelectedXPath" type="string" comment="Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
            <value>
              <calculation>
                <argument op="eq" type="string" value="..//policy[(LineOfBusiness='" />
                <argument op="add" idref="FarmLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="') or (" />
                <argument op="add" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="FarmLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="'])]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsFarmLOB" type="boolean" comment="Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="FarmLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowSeparatorLineOnPolicyInfo" caption="" type="boolean">
            <value idref="True" />
            <misc>
              <if>
                <condition>
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCurrentPagePricing" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PageOutput.CurrentPageName" type="string" />
                      <operand type="string" value="Pricing" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PageOutput.CurrentPageName" type="string" />
                      <operand type="string" value="RateSchedule" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.SelectedSpecificLineXPath" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.MonoLineXPath" />
                <else>
                  <calculation>
                    <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue='" />
                    <argument op="add" idref="True" type="int" />
                    <argument op="add" type="string" value="']][Type='" />
                    <argument op="add" idref="LineOutput.Type" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </else>
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentManuscriptPages" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="PolicyManuScript.CurrentManuscriptID" type="string" />
                <operand type="string" value="Pages" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentPageSubmission" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPageName" type="string" />
                    <operand type="string" value="SubmissionDetail" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.SetTermAtRenewal" caption="" type="int">
            <value value="12" />
            <affects>
              <reference idref="PolicyInput.Term" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.SetTermAtRenewalCheck" caption="" type="int">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="or">
                      <comparison compare="or">
                        <comparison compare="or">
                          <operand idref="PolicyPrivate.IsCurrentTransactionRenew" type="boolean" />
                          <operand idref="PolicyPrivate.IsCurrentTransactionReissue" type="boolean" />
                        </comparison>
                        <operand idref="PolicyPrivate.IsCurrentTransactionRewrite" type="boolean" />
                      </comparison>
                      <operand idref="PolicyPrivate.IsCurrentTransactionRestart" type="boolean" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetTermAtRenewal" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.PolicyNumberLOBCode" caption="" type="string" override="1">
            <value value="CP" />
          </private>
          <private id="PolicyPrivate.ResetCurrentManuscriptValuesForCPP" caption="" type="string">
            <affects>
              <reference idref="LineManuScript.SetPolicyManuscriptIDCPP" effect="postEffect" />
              <reference idref="PolicyManuScript.SetPolicyManuscriptValues" effect="postEffect" />
              <reference idref="PolicyManuScript.ResetTransactionPolicyManuscriptID" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ResetCurrentManuscriptValuesForCPPCheck" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyInput.LineOfBusiness" type="string" />
                      <operand type="string" value="Package" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.ResetCurrentManuscriptValuesForCPP" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ReRateCPPPolicyCheck" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyInput.LineOfBusiness" type="string" />
                      <operand type="string" value="Package" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.ReRateCPPPolicy" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ReRateCPPPolicy" caption="" type="string">
            <value>
              <external path="data">
                <manuscriptName idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" />
                <referenceField value="data.TotalResultReRate" />
              </external>
            </value>
          </private>
          <private id="PolicyPrivate.ExitInterviewTargetCheck" caption="" type="float">
            <value>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyAdminPrivate.TargetPage" type="string" />
                    <operand type="string" value="interviewList,printJob,integrationStart,partySearch,PitneyRIAMapExtJsStore,print" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.ExitInterviewTargetExecute" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ResetGroupNumber" caption="" type="string" path="ResetGroupNumber">
            <affects>
              <reference idref="PolicyPrivate.EffectiveDateForCurrentAvailable" effect="postEffect" />
              <reference idref="PolicyPrivate.SetupAvailableNumberGroupForNewTerm" effect="postEffect" />
              <reference idref="AccountPrivate.ClearAllBuildingNumbersLocked" effect="postEffect" />
              <reference idref="PolicyPrivate_LocationNumbering.ResetLocationNumber" effect="postEffect" />
              <reference idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumber" effect="postEffect" />
              <reference idref="PolicyPrivate_RiskNumbering.ResetVehicleNumber" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ResetGroupNumberDuplicateCheck" caption="" type="string" path="ResetGroupNumberDuplicateCheck">
            <value>
              <if>
                <condition idref="True" />
                <then idref="PolicyPrivate.ResetGroupNumberDuplicate" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ResetGroupNumberNewTerm" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.ResetGroupNumber" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.VehicleCount" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.RiskGroupCount" type="int" />
                <where>
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </where>
              </iterator>
            </value>
          </private>
          <object id="PolicyPrivate_PackageMod">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="PolicyPrivate_PackageMod.IsLiability_GL" path="IsLiability_GL" type="boolean">
              <definition>
                <caption value="Is Liability_GL" />
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsCommercialGeneralLiabilitySelected" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="PolicyPrivate_PackageMod.IsProperty_IM" path="IsProperty_IM" type="boolean">
              <definition>
                <caption value="Is Property_IM" />
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsCommercialInlandMarineSelected" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="PolicyPrivate_PackageMod.IsProperty_CF" path="IsProperty_CF" type="boolean">
              <definition>
                <caption value="IsProperty_CF" />
              </definition>
              <rules>
                <default idref="False" />
                <value>
                  <comparison idref="PolicyPrivate.IsCommercialPropertySelected" type="boolean" />
                </value>
              </rules>
            </public>
            <private id="PolicyPrivate_PackageMod.IsAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="PolicyPrivate_PackageMod.IsLiability_GL" type="boolean" />
                  <comparison compare="or">
                    <operand idref="PolicyPrivate_PackageMod.IsProperty_CF" type="boolean" />
                    <operand idref="PolicyPrivate_PackageMod.IsProperty_IM" type="boolean" />
                  </comparison>
                </comparison>
              </value>
              <affects>
                <reference idref="PolicyPrivate_PackageMod.IsLiability_GL" effect="postEffect" />
                <reference idref="PolicyPrivate_PackageMod.IsProperty_CF" effect="postEffect" />
                <reference idref="PolicyPrivate_PackageMod.IsProperty_IM" effect="postEffect" />
              </affects>
            </private>
          </object>
          <private id="PolicyPrivate.IsTransactionAtPolicyTerm" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.EffectiveDate" type="date" />
                <operand idref="PolicyOutputNonShredded.CurrentTransactionDate" type="date" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsPolicyValidForAudit" caption="" type="boolean">
            <value>
              <if>
                <condition>
                  <comparison compare="or">
                    <comparison compare="or">
                      <comparison compare="or">
                        <comparison compare="and">
                          <operand idref="PolicyInput.IsAuditable" type="boolean" />
                          <operand idref="PolicyPrivate.IsCommercialAutoSelectedDuringTerm" type="boolean" />
                        </comparison>
                        <operand idref="PolicyPrivate.IsCommercialGeneralLiabilitySelectedDuringTerm" type="boolean" />
                      </comparison>
                      <operand idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" type="boolean" />
                    </comparison>
                    <operand idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" type="boolean" />
                  </comparison>
                </condition>
                <then idref="True" />
                <else idref="False" />
              </if>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="and">
                    <operand idref="PolicyPrivate.IsCurrentTransactionAudit" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsPolicyValidForAudit" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetValidTransaction" message="PolicyPrivate.IsPolicyValidForAuditMsg1" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.SetValidTransaction" caption="" type="boolean">
            <value idref="False" />
            <affects>
              <reference idref="PolicyAdminOutputNonShredded.ValidTransaction" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.IsInInterimAudit" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
                <comparison compare="contains">
                  <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                  <operand type="string" value="InterimAudit" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsInFinalAudit" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="and">
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                  <comparison compare="contains">
                    <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                    <operand type="string" value="FinalAudit" />
                  </comparison>
                </comparison>
                <comparison compare="isnot">
                  <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                  <operand type="string" value="VoidFinalAudit,VoidInterimAudit" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtStart" caption="" type="string" alwaysRun="1">
            <affects>
              <reference idref="PolicyPrivate_RiskNumbering.SetNextAvailableVehicleNumberAtStart" effect="postEffect" />
              <reference idref="PolicyPrivate_LocationNumbering.SetNextAvailableNumberAtStart" effect="postEffect" />
              <reference idref="PolicyPrivate_BuildingNumbering.SetNextAvailableNumberAtStart" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.IsValidToRenumber" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <comparison compare="or">
                  <comparison compare="or">
                    <comparison compare="or">
                      <operand idref="PolicyPrivate.IsCurrentTransactionNewBusiness" type="boolean" />
                      <operand idref="PolicyPrivate.IsCurrentTransactionRenew" type="boolean" />
                    </comparison>
                    <operand idref="PolicyPrivate.IsCurrentTransactionReissue" type="boolean" />
                  </comparison>
                  <operand idref="PolicyPrivate.IsCurrentTransactionRewrite" type="boolean" />
                </comparison>
                <operand idref="PolicyPrivate.IsCurrentTransactionRestart" type="boolean" />
              </comparison>
            </value>
            <misc>
              <if>
                <condition idref="PolicyAdminPrivate.IsLocked" />
                <then idref="False" />
              </if>
            </misc>
          </private>
          <object id="PolicyPrivate_RiskNumbering">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="PolicyPrivate_RiskNumbering.ResetVehicleNumber" caption="" type="string" path="ResetVehicleNumber">
              <value>
                <iterator type="string" scope="all" action="sum" idref="Line">
                  <reference idref="LinePrivate_RiskNumbering.ResetRiskNumber" type="int" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="CommercialAuto" />
                    </comparison>
                  </where>
                </iterator>
              </value>
              <affects>
                <reference idref="PolicyPrivate_RiskNumbering.ResetVehicleNumberNextAvailable" effect="postEffect" />
              </affects>
            </private>
            <private id="PolicyPrivate_RiskNumbering.ResetVehicleNumberNextAvailable" caption="" type="int" path="ResetVehicleNumberNextAvailable">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableVehicleNumberPrivate.ResetVehicleNumberNextAvailable" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_RiskNumbering.SetNextAvailableVehicleNumberAtStart" caption="" type="int" path="SetNextAvailableVehicleNumberAtStart">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberAtStart" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_RiskNumbering.ResetVehicleNumberMidTerm" caption="" type="string" path="ResetVehicleNumber">
              <value>
                <iterator type="string" scope="all" action="sum" idref="Line">
                  <reference idref="LinePrivate_RiskNumbering.ResetRiskNumberMidTerm" type="int" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="CommercialAuto" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_RiskNumbering.SetNextAvailableVehicleNumberAtIssue" caption="" type="int" path="SetNextAvailableVehicleNumberAtStart">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberAtIssue" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
          </object>
          <object id="PolicyPrivate_LocationNumbering">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="PolicyPrivate_LocationNumbering.ResetLocationNumber" caption="" type="int" path="ResetLocationNumber">
              <affects>
                <reference idref="PolicyPrivate_LocationNumbering.ResetLocationNumberNextAvailable" effect="postEffect" />
              </affects>
              <value>
                <iterator type="int" scope="all" action="sum" idref="Location">
                  <reference idref="LocationPrivate.LocationNumberReset" type="int" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.ResetLocationNumberNextAvailable" caption="" type="int" path="ResetLocationNumberNextAvailable">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableLocationNumberPrivate.ResetLocationNumberNextAvailable" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.NextAvailableLocationNumber" caption="" type="int" alwaysRun="1" path="NextAvailableLocationNumber">
              <affects>
                <reference idref="PolicyPrivate_LocationNumbering.NextAvailableLocationNumberIncrement" effect="postEffect" />
              </affects>
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.NextAvailableLocationNumberIncrement" caption="" type="int" alwaysRun="1" path="NextAvailableLocationNumberIncrement">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableLocationNumberPrivate.NextAvailableLocationNumberIncrement" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.SetNextAvailableNumberAtStart" caption="" type="int" alwaysRun="1" path="SetNextAvailableNumberAtStart">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberAtStart" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.ResetNumberMidTerm" caption="" type="int" path="ResetNumberMidTerm" comment="Called on Mark For Delete button from Location Schedule" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="sum" idref="Location">
                  <reference idref="LocationPrivate.LocationNumberResetMidTerm" type="int" />
                  <where>
                    <comparison compare="and">
                      <comparison compare="ge">
                        <operand idref="LocationOutputNonShredded.Number" type="int" />
                        <operand idref="PolicyPrivate_LocationNumbering.NextAvailableLocationNumberAtStart" type="int" />
                      </comparison>
                      <comparison compare="ne">
                        <operand idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                        <operand idref="LocationOutput.LocationID" type="string" />
                      </comparison>
                    </comparison>
                  </where>
                </iterator>
              </value>
              <affects>
                <reference idref="PolicyPrivate_LocationNumbering.ResetNextAvailableToValueAtStart" effect="preEffect" />
              </affects>
            </private>
            <private id="PolicyPrivate_LocationNumbering.ResetNextAvailableToValueAtStart" caption="" type="int" alwaysRun="1" path="SetNextAvailableNumberAtStart">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableLocationNumberPrivate.ResetNextAvailLocationToValueAtStart" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.NextAvailableLocationNumberAtStart" caption="" type="int" alwaysRun="1" path="NextAvailableLocationNumber">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumberAtStart" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.DefaultLocationNumbersAtImport" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="sum" idref="Location">
                  <reference idref="LocationOutputNonShredded.Number" type="int" />
                  <customQuery value="location[not(Number)]" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_LocationNumbering.SetNextAvailableNumberAtIssue" caption="" type="int" alwaysRun="1" path="SetNextAvailableNumberAtStart">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberAtIssue" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
          </object>
          <object id="PolicyPrivate_BuildingNumbering">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="PolicyPrivate_BuildingNumbering.ResetBuildingNumber" caption="" type="string" alwaysRun="1" path="ResetBuildingNumber">
              <affects>
                <reference idref="PolicyPrivate_BuildingNumbering.DeleteBuildingNumberGroup" effect="preEffect" />
                <reference idref="AccountPrivate.AddNeededBuildingNumberRecords" effect="preEffect" />
                <reference idref="AccountPrivate.InitializeNextAvailableBuildingNumber" effect="preEffect" />
              </affects>
              <value>
                <iterator type="string" scope="all" action="sum" idref="Building">
                  <reference idref="BuildingPrivate.ResetBuildingNumber" type="string" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocation" caption="" type="int" alwaysRun="1" path="ResetBuildingNumber">
              <affects>
                <reference idref="AccountPrivate.InitializeNextAvailableBuildingNumberCurrentLocation" effect="preEffect" />
              </affects>
              <value>
                <iterator type="int" scope="all" action="sum" idref="Building">
                  <reference idref="BuildingPrivate.ResetBuildingNumber" type="string" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="BuildingInput.BuildingLocationID" type="string" />
                      <operand idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                    </comparison>
                  </where>
                  <customQuery idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocMidTerm" caption="" type="int" alwaysRun="1" path="ResetBuildingNumber">
              <value>
                <iterator type="int" scope="all" action="sum" idref="Building">
                  <reference idref="BuildingPrivate.ResetBuildingNumber" type="string" />
                  <where>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="BuildingInput.BuildingLocationID" type="string" />
                        <operand idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="BuildingPrivate.IsBuildingNumberLocked" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </where>
                  <customQuery idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocXPath" />
                </iterator>
              </value>
              <affects>
                <reference idref="AccountPrivate.InitializeNextAvailableBuildingNumberCurrentLocMidTerm" effect="preEffect" />
              </affects>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.SetNextAvailableNumberAtStart" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.SetBuildingNumberAtStart" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.DeleteBuildingNumberGroup" caption="" type="string">
              <value>
                <iterator type="string" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.DeleteBuildingNumberGroup" type="string" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.NextAvailableBuildingNumber" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.NextAvailableBuildingNumber" type="string" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.NextAvailableBuildingNumberAtStart" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.NextAvailableBuildingNumberAtStart" type="string" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.NextAvailableBuildingNumberIncrement" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.NextAvailableBuildingNumberIncrement" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocXPath" caption="" type="string" path="ResetBuildingNumber" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="building[BuildingLocationID='" />
                  <argument op="add" idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="PolicyPrivate_BuildingNumbering.SetNextAvailableNumberAtIssue" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.SetBuildingNumberAtIssue" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
          </object>
          <private id="PolicyPrivate.AvailableNumbersForCurrentTermXPath" caption="" type="string" path="AvailableNumbersForCurrentTermXPath" alwaysRun="1">
            <value>
              <calculation>
                <argument op="eq" type="string" value="./AvailableNumbersPerTerm[@id='" />
                <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.SetupAvailableNumberGroupForNewTerm" caption="" type="string" alwaysRun="1">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <comparison compare="ne">
                      <operand idref="PolicyPrivate.EffectiveDateForCurrentAvailable" type="date" />
                      <operand idref="PolicyInput.EffectiveDate" type="date" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetupAvailableNumberGroupForNewTermExecute" />
              </if>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.EffectiveDateForCurrentAvailable" type="date" />
                      <operand idref="PolicyInput.EffectiveDate" type="date" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.ResetAvailableNumberIDPerTerm" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.SetHonoredManuscriptIDExecute" caption="" type="string">
            <affects>
              <reference idref="PolicyPrivate.SetHonoredLineIDs" effect="postEffect" />
            </affects>
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PolicyOutputNonShredded.HonoredProductManuscriptID" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyInput.HonorRates" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetHonoredProductManuscriptID" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.SetupAvailableNumberGroupForNewTermExecute" caption="" type="string" alwaysRun="1">
            <value>
              <request verb="ManuScript.addObjectRecordRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                  <nameValue value="AvailableNumbersPerTerm" name="objectID" dataType="attribute" />
                  <nameValue idref="PolicyOutput.ID" name="UniqueID" dataType="attribute" />
                </nameValues>
              </request>
            </value>
            <affects>
              <reference idref="PolicyPrivate.ResetAvailableNumberIDPerTerm" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ResetAvailableNumberIDPerTerm" caption="" type="string" alwaysRun="1">
            <affects>
              <reference idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="setValue" />
            </affects>
            <value>
              <iterator type="string" scope="last" action="sum" idref="AvailableNumbersPerTerm">
                <reference idref="AvailableNumbersPerTermPrivate.ID" type="string" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.ResetGroupNumberDuplicate" caption="" type="string">
            <affects>
              <reference idref="AccountPrivate.ClearAllBuildingNumbersLocked" effect="postEffect" />
              <reference idref="PolicyPrivate_LocationNumbering.ResetLocationNumber" effect="postEffect" />
              <reference idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumber" effect="postEffect" />
              <reference idref="PolicyPrivate_RiskNumbering.ResetVehicleNumber" effect="postEffect" />
              <reference idref="AccountPrivate.SetAllBuildingNumbersLockedRewrite" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtStartCheck" caption="" type="string" alwaysRun="1">
            <value>
              <if>
                <condition>
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="ne">
                        <operand idref="CurrentTransaction.RevisionOf" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetGroupNumbersAtStart" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.EffectiveDateForCurrentAvailable" caption="" type="date">
            <value>
              <iterator type="date" scope="last" action="sum" idref="AvailableNumbersPerTerm">
                <reference idref="AvailableNumbersPerTerm.PolicyEffectiveDate" type="date" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialUmbrellaAllowMonoline" caption="" type="boolean" comment="Phase I of Umbrella release is only for Umbrella on package policies.">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.AllowMonolineUmbrella" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Value" />
                <keyRef type="string" value="default" name="Type" />
              </lookup>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeFullyEarnedCoveragePremiums" caption="" type="float">
            <value>
              <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AllCoveragesShare">
                <reference idref="AllCoveragesSharePrivate.SetPremiumToZeroFullyEarned" type="float" />
                <customQuery idref="PolicyPrivate.InitializeFullyEarnedCoveragePremiumsXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeFullyEarnedCoveragePremiumsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//coverage[FullyEarnedIndicator=1 and (ancestor-or-self::*[@deleted=1] or ancestor-or-self::*[Indicator=0])]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeCoverageIDs" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" idref="AllCoveragesShare">
                <reference idref="AllCoveragesShareOutput.ID" type="string" />
                <customQuery idref="PolicyPrivate.InitializeCoverageIDsXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeCoverageIDsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//coverage[not (@id)]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IgnoreRule" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <operand idref="PolicyPrivate.IsCurrentTransactionEndorse" type="boolean" />
                <operand idref="PolicyPrivate.IsCurrentTransactionCancel" type="boolean" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.StoreRule" caption="" type="boolean">
            <value>
              <comparison idref="Rules.StatusIsApproved" />
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionReporting" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Report" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsNotInReporting" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionReporting" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsInReporting" caption="" type="boolean">
            <value>
              <comparison idref="PolicyPrivate.IsCurrentTransactionReporting" type="boolean" />
            </value>
          </private>
          <private id="PolicyPrivate.TotalCovMiscellaneousCount" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.CovMiscellaneousCount" type="int" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.ExitInterviewTargetExecute" caption="" type="float">
            <value>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyAdminPrivate.TargetPage" type="string" />
                    <operand type="string" value="interviewList,printJob,integrationStart,partySearch,PitneyRIAMapExtJsStore" />
                  </comparison>
                </condition>
                <then idref="SaveForLater.PreAction" />
              </if>
            </value>
            <affects>
              <reference idref="SaveForLater.PreAction" effect="postEffect" />
              <reference idref="UserCheckOutProcess.CheckIn" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ShowNCCILicenseInfo" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" />
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsAuditableLOB" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.IsAuditableLOBLookup" type="boolean" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.UIApplicationReturnPage" caption="" type="string" override="1">
            <value>
              <lookup>
                <tableRef value="UI_ReturnToAfterApplication" />
                <fieldRef value="Page" />
                <keyRef idref="GlobalOutput.CurrentlyInCPP" type="boolean" name="Type" />
              </lookup>
            </value>
          </private>
          <private id="PolicyPrivate.IsReportableLOB" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="Line">
                <reference idref="LineOutput.IsReportable" type="boolean" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobReport" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionReporting" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsFinalReportLOB" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="Line">
                <reference idref="LineOutput.IsFinalReport" type="boolean" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsReinstateAfterFlatCancel" caption="" type="boolean" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                  <operand type="string" value="Reinstate" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.LastTransactionEffectiveDate" type="date" />
                  <operand idref="PolicyInput.EffectiveDate" type="date" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.LineOfBusinessReadOnly" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <operand idref="ConstantsPolicyAdminProcessing.IsNotNewTerm" type="boolean" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ClearPolicyNumberOnDuplicate" caption="" type="string">
            <affects>
              <reference idref="PolicyOutput.PolicyNumber" effect="setValue" />
            </affects>
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                    <operand type="string" value="New" />
                  </comparison>
                </condition>
                <then idref="PolicyOutput.QuoteNumber" />
                <else idref="PolicyOutput.PolicyNumber" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ClearQuoteNumberOnDuplicate" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="PolicyOutput.QuoteNumber" effect="setValue" />
              <reference idref="PolicyPrivate.SetQuoteNumber" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.CommercialAutoPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialAutoSelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialAutoFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialCrimePages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialCrimeSelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialCrimeFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialGeneralLiabilityPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialGeneralLiabilitySelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialGeneralLiabilityFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialInlandMarinePages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialInlandMarineSelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialInlandMarineFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialPropertyPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialPropertySelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialPropertyFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialUmbrellaPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialUmbrellaSelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialUmbrellaFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialAutoMAPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialAutoMASelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialAutoMAFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialBusinessOwnersPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialBusinessOwnersFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialWorkersCompensationPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialWorkersCompensationFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.ClearUnSelectedLinePremiumTotals" caption="" type="float">
            <value>
              <iterator type="float" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.ClearLinePremiumTotals" type="float" />
                <reference idref="LinePrivate.InitializeCoveragePremiumsLineNotSelected" type="float" />
                <reference idref="LinePrivate.InitializeLineTaxAmountsNotSelected" type="float" />
                <where>
                  <comparison compare="eq">
                    <operand idref="LinePrivate.IsPrimaryLine" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.UnSelectedLineXPath" />
              </iterator>
            </value>
            <affects>
              <reference idref="PolicyPrivate.InitializeLocationTaxAmounts" effect="preEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.UnSelectedLineXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue='" />
                <argument op="add" idref="False" type="int" />
                <argument op="add" type="string" value="']]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.ClearUnSelectedLinePremiumTotalsCheck" caption="" type="float">
            <value>
              <if>
                <condition idref="GlobalOutput.StartedInCPP" />
                <then idref="PolicyPrivate.ClearUnSelectedLinePremiumTotals" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ProcessAtPolicyLoadCheck" caption="" type="string">
            <value>
              <if>
                <condition idref="True" />
                <then idref="PolicyPrivate.ProcessAtPolicyLoad" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ProcessAtPolicyLoad" caption="" type="string">
            <affects>
              <reference idref="PolicyAdminPrivate.GetStatusCodes" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineAAISSelectable" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="sum" idref="Line">
                <reference idref="LinePrivate.IsLOBSelectable" type="boolean" />
                <customQuery idref="InlandMarineAAISLinePrivate.LineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineAAISSelected" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialInlandMarineAAISSelectedXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,InlandMarineAAIS" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="InlandMarineAAIS" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineAAISSelectedXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="InlandMarineAAISLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
                <argument op="add" type="string" value="[(not(LineRemovedMidTerm)) or LineRemovedMidTerm!=1]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialInlandMarineAAISFormsMaster" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                <where idref="PolicyPrivate.IsCommercialInlandMarineAAISSelected" />
                <customQuery idref="PolicyPrivate.CommercialInlandMarineAAISFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialInlandMarineAAISFormsMasterXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Type='" />
                <argument op="add" idref="InlandMarineAAISLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.CommercialInlandMarineAAISPages" type="string">
            <value>
              <iterator type="string" scope="first" action="sum" idref="Line">
                <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                <where>
                  <comparison compare="or">
                    <operand idref="PolicyPrivate.IsCommercialInlandMarineAAISSelected" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.CommercialInlandMarineAAISFormsMasterXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.InInlandMarineAAIS" type="boolean" comment="" alwaysRun="1">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="or">
                  <operand idref="PolicyPrivate.IsInlandMarineAAISLOB" />
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="SelectedLineInput.LineDescription" type="string" />
                      <operand idref="InlandMarineAAISLinePrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsInlandMarineAAISLOB" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.LineOfBusiness" type="string" />
                <operand idref="InlandMarineAAISLinePrivate.LOBCode" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowAAISLicenseInfo" caption="" type="boolean">
            <value idref="False" />
            <misc>
              <if>
                <condition idref="PolicyPrivate.IsCommercialInlandMarineAAISSelected" />
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsPackagePolicyInLOB" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="and">
                  <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
                <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.LinePostApplyChangesEventSetup" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.DoPostApplyChangesSetup" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.ResetGroupNumberLocationDeleteCheck" caption="" type="string">
            <value>
              <if>
                <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                <then idref="PolicyPrivate.ResetGroupNumberNewTerm" />
                <else idref="PolicyPrivate.ResetGroupNumberMidTerm" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.ResetGroupNumberMidTerm" caption="" type="string">
            <affects>
              <reference idref="PolicyPrivate_LocationNumbering.ResetNumberMidTerm" effect="postEffect" />
              <reference idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocMidTerm" effect="postEffect" />
              <reference idref="PolicyPrivate_RiskNumbering.ResetVehicleNumberMidTerm" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ResetGroupNumberImportCheck" caption="" type="string">
            <value>
              <if>
                <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                <then idref="PolicyPrivate.ResetGroupNumberNewTerm" />
                <else idref="PolicyPrivate.ResetGroupNumberMidTermImport" />
              </if>
            </value>
            <affects>
              <reference idref="PolicyPrivate_LocationNumbering.DefaultLocationNumbersAtImport" effect="preEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.ShowConvertToPackage" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
                <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
              </comparison>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="is">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="BusinessOwners,WorkersCompensation,InlandMarineAAIS,CommercialAutoMA" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.SelectedPackageLinesCountXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue='" />
                <argument op="add" idref="True" type="int" />
                <argument op="add" type="string" value="']]" />
                <argument op="add" type="string" value="[LineRemovedMidTerm='0']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.SelectedPackageLinesCount" type="int" alwaysRun="1">
            <value>
              <iterator type="int" scope="all" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.SelectedPackageLinesCountXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.MonolineToPackageRequest" caption="" type="string">
            <value>
              <request verb="Session.getDocumentRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue idref="PolicyPrivate.MonolineToPackageTransform" name="xsltOut" dataType="attribute" />
                  <nameValue value="Session.getDocumentRs/session/data" name="responseSelect" dataType="attribute" />
                  <nameValue value="." name="responseSessionPath" dataType="attribute" />
                  <nameValue value="2" name="responseSessionAppend" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyPrivate.MonolineToPackageTransform" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" idref="GlobalOutput.GlobalRootPath" type="string" />
                <argument op="add" type="string" value="\Transform\" />
                <argument op="add" type="string" value="DCT_MonolineToPackage.xsl" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.SetLineOfBusinessPackage" caption="" type="string">
            <value value="Package" />
            <affects>
              <reference idref="PolicyInput.LineOfBusiness" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.LastTransactionProcessingDataHistoryID" type="string" comment="" caption="Policy Private Last Transaction Processing Data History ID">
            <value>
              <iterator type="string" scope="last" action="sum" idref="Transaction_Current">
                <reference idref="Transaction_Current.HistoryID" type="string" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.RemoveUnusedPaths" caption="" type="string">
            <value>
              <request verb="CustomServer.processRq" get="@status" validRef="PolicyPrivate.RemoveUnusedPathsCheck">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="" name="dataRequests" dataType="element">
                    <nameValue value="" name="Session.getDocumentRq" dataType="element" />
                  </nameValue>
                  <nameValue value="" name="customData" dataType="element" />
                  <nameValue value="" name="xsltRequests" dataType="element">
                    <nameValue value="http://www.w3.org/1999/XSL/Transform" name="xmlns:xsl" dataType="attribute" />
                    <nameValue value="" name="Session.removeElementRq" dataType="element">
                      <nameValue value="/session/data/policy/stateTaxSurcharge[Type='AZTheftProtectionAssessment'][Scope='Surcharge']" name="path" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyPrivate.RemoveUnusedPathsCheck" caption="" type="boolean">
            <value>
              <comparison idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
            </value>
          </private>
          <private id="PolicyPrivate.ShowKYSurchargeExemption" caption="" type="string">
            <value>
              <comparison compare="and">
                <operand idref="AccountPrivate.IsAnyLocationKY" type="boolean" />
                <operand idref="LineKYPremiumSurchargePrivate.TaxAvailableForCurrentLine" type="boolean" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoSelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialAutoSelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,CommercialAuto" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoSelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialAutoLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialGeneralLiabilitySelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialGeneralLiabilitySelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,GeneralLiability" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="GeneralLiability" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialGeneralLiabilitySelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="GeneralLiabilityLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialCrimeSelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialCrimeSelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,Crime" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Crime" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialCrimeSelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CrimeLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineSelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialInlandMarineSelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,InlandMarine" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="InlandMarine" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineSelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="InlandMarineLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialPropertySelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialPropertySelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,Property" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Property" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialPropertySelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="PropertyLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialUmbrellaSelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialUmbrellaSelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,CommercialUmbrella" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialUmbrella" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialUmbrellaSelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialUmbrellaLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineAAISSelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialInlandMarineAAISSelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="isnot">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package,InlandMarineAAIS" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="InlandMarineAAIS" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialInlandMarineAAISSelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="InlandMarineAAISLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialWorkersCompensationSelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialWorkersCompensationSelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="WorkersCompensation" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="WorkersCompensation" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialWorkersCompensationSelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialBusinessOwnersSelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialBusinessOwnersSelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="BusinessOwners" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="BusinessOwners" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialBusinessOwnersSelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialBusinessOwnersPrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoMASelectedDuringTerm" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery idref="PolicyPrivate.IsCommercialAutoMASelectedDuringTermXPath" />
              </iterator>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialAutoMA" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="CommercialAutoMA" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyPrivate.IsCommercialAutoMASelectedDuringTermXPath" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="line[Indicators[Type='Selected'][bValue=1]][" />
                <argument op="add" type="string" value="Type='" />
                <argument op="add" idref="CommercialAutoMALinePrivate.LOBCode" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.ResetLineRemovedMidTermCheck" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.ResetLineRemovedNewTermCheck" type="string" />
                <where idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                <customQuery value="line[LineRemovedMidTerm='1']" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsAnyLineRemovedMidTerm" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Line">
                <customQuery value="line[LineRemovedMidTerm='1']" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.ResetLineRemovedMidTermOOSCheck" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.ResetLineRemovedMidTermOOSCheck" type="string" />
                <where idref="OSEventData.inOutOfSequence" />
                <customQuery value="line[LineRemovedMidTerm='1']" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SetDARRForceReRate" caption="" type="int">
            <value>
              <calculation>
                <argument op="eq" idref="PolicyOutputNonShredded.DARRForceReRate" type="int" />
                <argument op="add" type="int" value="1" />
              </calculation>
            </value>
            <affects>
              <reference idref="PolicyOutputNonShredded.DARRForceReRate" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyPrivate.ShowRemoveLineButtons" caption="" type="boolean">
            <value>
              <comparison idref="ConstantsPolicyAdminProcessing.IsNotNewTerm" type="boolean" />
            </value>
          </private>
          <private id="PolicyPrivate.InitializeStateTaxSurcharges" caption="" type="float">
            <value>
              <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AllStateTaxesSurcharges">
                <reference idref="AllStateTaxesSurchargesPrivate.SetTaxToZero" type="float" />
                <where>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsWorkersCompensationLOB" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </where>
                <customQuery idref="PolicyPrivate.InitializeStateTaxSurchargesXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeStateTaxSurchargesXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//stateTaxSurcharge[((change!=0) or (written!=0))]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.ResetGroupNumberMidTermImport" caption="" type="string">
            <affects>
              <reference idref="PolicyPrivate_LocationNumbering.DefaultLocationNumbersAtImport" effect="postEffect" />
              <reference idref="PolicyPrivate.ResetGroupNumberMidTerm" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.TransactionIdentifierCancelSelect" caption="" type="string">
            <value>
              <select idref="CurrentTransaction.LastReasonType">
                <case type="int" value="11" select="insured" />
                <case type="int" value="12" select="nonPay" />
                <case type="int" value="13" select="underwriting" />
                <case type="int" value="13" select="Other" />
                <otherwise type="string" value="" />
              </select>
            </value>
          </private>
          <private id="PolicyPrivate.TransactionStatCodeSetup" caption="" type="string">
            <affects>
              <reference idref="PolicyOutput.StatCodeTransactionEffectiveDay" effect="postEffect" />
              <reference idref="PolicyOutput.StatCodeTransactionExpirationDay" effect="postEffect" />
              <reference idref="PolicyOutput.StatCodeTransactionIdentifier" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.OccupancyTypeDefault" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyOutputNonShredded.TypeOfRisk" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </condition>
                <then value="" />
                <else>
                  <lookup>
                    <tableRef value="OccupancyTypeDefault" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyOutputNonShredded.TypeOfRisk" type="string" name="Type" />
                  </lookup>
                </else>
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.SetLineTransactionIDWhenAdded" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.SetTransactionIDWhenAddedCheck" type="string" />
                <reference idref="AccountPrivate.Comma" type="string" />
                <customQuery idref="PolicyPrivate.SetLineTransactionIDWhenAddedXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SetLineTransactionIDWhenAddedXPath" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.MonoLineXPath" />
                <else>
                  <calculation>
                    <argument op="eq" type="string" value="line[TransactionIDWhenAdded='' or not(TransactionIDWhenAdded)][Indicators[Type='Selected'][bValue='" />
                    <argument op="add" idref="True" type="int" />
                    <argument op="add" type="string" value="']]" />
                  </calculation>
                </else>
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.CalculateRatingWorksheet" caption="" type="boolean" comment="CPP RateSchedule Rating Worksheet Calculation check">
            <value>
              <comparison compare="gt">
                <operand idref="PolicyPrivate.IsAnyLineRemovedMidTerm" type="boolean" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOSCheck" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <operand idref="PolicyPrivate.IsCurrentTransactionRenew" type="boolean" />
                    <comparison compare="isnot">
                      <operand idref="PolicyOutputNonShredded.LastTransactionStatus" type="string" />
                      <operand type="string" value="Completed,Committed" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.SetGroupNumbersAtOOS_RenewalPending" />
                <else idref="PolicyPrivate.SetGroupNumbersAtOOS" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_LocationXPath" caption="" type="string" comment="Only modify the instances that were added Out of Sequence and during a different policy term.">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[not(AvailableNumberIDForCurrentTerm='" />
                <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                <argument op="add" type="string" value="')]" />
                <argument op="add" type="string" value="[TransactionIDWhenAdded='" />
                <argument op="add" idref="_processingData.CurrentOSTransactionID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_Location" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" includeDeleted="1" idref="Location">
                <reference idref="LocationPrivate_NumberSetup.ReconcileSetupCheck" type="string" />
                <customQuery idref="PolicyPrivate.SetGroupNumbersAtOOS_LocationXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS" caption="" type="string">
            <affects>
              <reference idref="PolicyPrivate.SetGroupNumbersAtStart" effect="preEffect" />
              <reference idref="PolicyPrivate.SetGroupNumbersAtOOS_Location" effect="postEffect" />
              <reference idref="PolicyPrivate.SetGroupNumbersAtOOS_Building" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_Building" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" includeDeleted="1" idref="Building">
                <reference idref="BuildingPrivate_NumberSetup.ReconcileSetupCheck" type="string" />
                <customQuery idref="PolicyPrivate.SetGroupNumbersAtOOS_BuildingXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_BuildingXPath" caption="" type="string" comment="Only modify the instances that were added Out of Sequence and during a different policy term.">
            <value>
              <calculation>
                <argument op="eq" type="string" value="building[not(AvailableNumberIDForCurrentTerm='" />
                <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                <argument op="add" type="string" value="')]" />
                <argument op="add" type="string" value="[TransactionIDWhenAdded='" />
                <argument op="add" idref="_processingData.CurrentOSTransactionID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_Risk" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" includeDeleted="1" idref="Risk">
                <reference idref="RiskPrivate_NumberSetup.ReconcileSetupCheck" type="string" />
                <customQuery idref="PolicyPrivate.SetGroupNumbersAtOOS_RiskXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_RiskXPath" caption="" type="string" comment="Only modify the instances that were added Out of Sequence and during a different policy term. (Commercial Auto only because we only do Vehicle risk numbering)&#xD;&#xA;">
            <value>
              <calculation>
                <argument op="eq" type="string" value="/session/data/policy/line[Type='CommercialAuto']/" />
                <argument op="add" type="string" value="risk[not(AvailableNumberIDForCurrentTerm='" />
                <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                <argument op="add" type="string" value="')]" />
                <argument op="add" type="string" value="[TransactionIDWhenAdded='" />
                <argument op="add" idref="_processingData.CurrentOSTransactionID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_RiskCheck" caption="" type="string">
            <value>
              <if>
                <condition idref="True" />
                <then idref="PolicyPrivate.SetGroupNumbersAtOOS_Risk" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtOOS_RenewalPending" caption="" type="string" alwaysRun="1">
            <affects>
              <reference idref="PolicyPrivate_LocationNumbering.ResetLocationNumber" effect="postEffect" />
              <reference idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumber" effect="postEffect" />
              <reference idref="PolicyPrivate_RiskNumbering.ResetVehicleNumber" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.LineAppendReconcileChangesCheck" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.DoAppendReconcileChangesEvent" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtIssue" caption="" type="string" alwaysRun="1">
            <affects>
              <reference idref="PolicyPrivate_RiskNumbering.SetNextAvailableVehicleNumberAtIssue" effect="postEffect" />
              <reference idref="PolicyPrivate_LocationNumbering.SetNextAvailableNumberAtIssue" effect="postEffect" />
              <reference idref="PolicyPrivate_BuildingNumbering.SetNextAvailableNumberAtIssue" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.SetGroupNumbersAtIssueCheck" caption="" type="string" alwaysRun="1">
            <value>
              <if>
                <condition idref="True" />
                <then idref="PolicyPrivate.SetGroupNumbersAtIssue" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.IsOtherThanCurrentTransactionOpenState" type="boolean" comment="" path="IsAnyTransactionStateOpenOtherThanCurrent" alwaysRun="1">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Transaction_Current">
                <customQuery idref="PolicyPrivate.IsOtherThanCurrentTransactionOpenStateXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsOtherThanCurrentTransactionOpenStateXPath" type="string" path="IsAnyTransactionStateOpenOtherThanCurrent">
            <value>
              <calculation>
                <argument op="eq" type="string" value="transactions//transaction[State='open'" />
                <argument op="add" type="string" value=" and " />
                <argument op="add" type="string" value="not(@id='" />
                <argument op="add" idref="PolicyOutputNonShredded.CurrentTransactionID" type="string" />
                <argument op="add" type="string" value="')" />
                <argument op="add" type="string" value=" and " />
                <argument op="add" type="string" value="DeprecatedBy=''" />
                <argument op="add" type="string" value="]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.PrimaryRatingStateMAValid" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCommercialAutoSelected" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.ShowPrintJobRestart" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyPrivate.IsCurrentTransactionRestart" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionRestart" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Restart" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InitializePolicyFormsManuScriptIDsCheck" caption="" type="boolean">
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyAdminOutputNonShredded.UseDCTFormsAndMessages" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.InitializePolicyFormsManuScriptIDs" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.InitializePolicyFormsManuScriptIDs" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="PolicyManuScript.InterlineFormsManuscriptID" effect="postEffect" />
              <reference idref="PolicyManuScript.InterlineFormsControlManuscriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.AKFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.ALFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.ARFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.AZFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.CAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.COFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.CTFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.DCFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.DEFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.FLFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.GAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.HIFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.IAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.IDFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.ILFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.INFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.KSFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.KYFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.LAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MDFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MEFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MIFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MNFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MOFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MSFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MTFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.MultiStateFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NCFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NDFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NEFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NHFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NJFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NMFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NVFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.NYFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.OHFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.OKFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.ORFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.PAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.RIFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.SCFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.SDFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.TNFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.TXFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.UTFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.VAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.VTFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.WAFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.WIFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.WVFormsManuScriptID" effect="postEffect" />
              <reference idref="InterlineFormsManuscript.WYFormsManuScriptID" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyPrivate.InitializeFormsLineManuScriptIDsCheck" caption="" type="boolean">
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyAdminOutputNonShredded.UseDCTFormsAndMessages" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="PolicyPrivate.InitializeFormsLineManuScriptIDs" />
              </if>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeFormsLineManuScriptIDs" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Line">
                <reference idref="LinePrivate.InitializeFormsManuScriptIDs" type="string" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.IsPrimaryLocationStateMA" caption="" type="string">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyInput.PrimaryRatingState" type="string" />
                <operand type="string" value="MA" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.IsCurrentTransactionInformation" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Information" />
              </comparison>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxAmounts" caption="" type="float">
            <value>
              <iterator type="float" scope="all" action="sum" idref="Location">
                <subtotal idref="LocationPrivate.ClearCommercialAutoTaxValues" type="float" subtotalRef="LocationOutput.TaxCityChangeAmountCommercialAuto" validRef="LocationPrivate.IsCommercialAutoTaxValueInvalidForLocation" />
                <subtotal idref="LocationPrivate.ClearGeneralLiabilityTaxValues" type="float" subtotalRef="LocationOutput.TaxCityChangeAmountGeneralLiability" validRef="LocationPrivate.IsGeneralLiabilityTaxValueInvalidForLocation" />
                <subtotal idref="LocationPrivate.ClearBusinessOwnersTaxValues" type="float" subtotalRef="LocationOutput.TaxCityChangeAmountBusinessOwners" validRef="LocationPrivate.IsBusinessOwnersTaxValueInvalidForLocation" />
                <subtotal idref="LocationPrivate.ClearCrimeTaxValues" type="float" subtotalRef="LocationOutput.TaxCityChangeAmountCrime" validRef="LocationPrivate.IsCrimeTaxValueInvalidForLocation" />
                <subtotal idref="LocationPrivate.ClearInlandMarineAAISTaxValues" type="float" subtotalRef="LocationOutput.TaxCityChangeAmountInlandMarineAAIS" validRef="LocationPrivate.IsInlandMarineAAISTaxValueInvalidForLocation" />
                <subtotal idref="LocationPrivate.ClearInlandMarineTaxValues" type="float" subtotalRef="LocationOutput.TaxCityChangeAmountInlandMarine" validRef="LocationPrivate.IsInlandMarineTaxValueInvalidForLocation" />
                <subtotal idref="LocationPrivate.ClearPropertyTaxValues" type="float" subtotalRef="LocationOutput.TaxCityChangeAmountProperty" validRef="LocationPrivate.IsPropertyTaxValueInvalidForLocation" />
                <customQuery idref="PolicyPrivate.InitializeLocationTaxAmountsXPath" />
                <dependencies>
                  <dependency idref="Line" />
                  <dependency idref="Account" />
                </dependencies>
              </iterator>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[" />
                <argument op="add" idref="PolicyPrivate.InitializeLocationTaxCommercialAutoAmountsXPath" type="string" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" idref="PolicyPrivate.InitializeLocationTaxGeneralLiabilityAmountsXPath" type="string" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" idref="PolicyPrivate.InitializeLocationTaxBusinessOwnersAmountsXPath" type="string" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" idref="PolicyPrivate.InitializeLocationTaxCrimeAmountsXPath" type="string" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" idref="PolicyPrivate.InitializeLocationTaxInlandMarineAAISAmountsXPath" type="string" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" idref="PolicyPrivate.InitializeLocationTaxInlandMarineAmountsXPath" type="string" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" idref="PolicyPrivate.InitializeLocationTaxPropertyAmountsXPath" type="string" />
                <argument op="add" type="string" value="]" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxCommercialAutoAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="(TaxCityChangeAmountCommercialAuto!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCityWrittenAmountCommercialAuto!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyChangeAmountCommercialAuto!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyWrittenAmountCommercialAuto!=0)" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxGeneralLiabilityAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="(TaxCityChangeAmountGeneralLiability!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCityWrittenAmountGeneralLiability!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyChangeAmountGeneralLiability!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyWrittenAmountGeneralLiability!=0)" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxBusinessOwnersAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="(TaxCityChangeAmountBusinessOwners!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCityWrittenAmountBusinessOwners!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyChangeAmountBusinessOwners!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyWrittenAmountBusinessOwners!=0)" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxCrimeAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="(TaxCityChangeAmountCrime!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCityWrittenAmountCrime!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyChangeAmountCrime!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyWrittenAmountCrime!=0)" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxPropertyAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="(TaxCityChangeAmountProperty!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCityWrittenAmountProperty!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyChangeAmountProperty!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyWrittenAmountProperty!=0)" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxInlandMarineAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="(TaxCityChangeAmountInlandMarine!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCityWrittenAmountInlandMarine!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyChangeAmountInlandMarine!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyWrittenAmountInlandMarine!=0)" />
              </calculation>
            </value>
          </private>
          <private id="PolicyPrivate.InitializeLocationTaxInlandMarineAAISAmountsXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="(TaxCityChangeAmountInlandMarineAAIS!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCityWrittenAmountInlandMarineAAIS!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyChangeAmountInlandMarineAAIS!=0)" />
                <argument op="add" type="string" value=" or " />
                <argument op="add" type="string" value="(TaxCountyWrittenAmountInlandMarineAAIS!=0)" />
              </calculation>
            </value>
          </private>
        </object>
        <object id="PolicyOutput" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="PolicyOutputNonShredded" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="PolicyOutputNonShredded.AuditTypeDisplay" path="AuditTypeDisplay" type="string">
              <definition>
                <caption value="Audit Type" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value>
                  <iterator type="string" scope="last" action="sum" idref="Transaction">
                    <reference idref="TransactionInput.AuditType" type="string" />
                  </iterator>
                </value>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.InSICEditMode" type="boolean" comment="" path="InSICEditMode">
              <rules>
                <default idref="False" />
              </rules>
              <definition>
                <caption value="In SIC Edit Mode" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.SICCodeSearchValue" path="SICCodeSearchValue" type="string">
              <definition>
                <caption value="Search Value" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <affects>
                  <reference idref="PolicyInput.SICCodeDesc" effect="postEffect" />
                </affects>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.SICCodeLabel" path="SICCodeLabel" type="string">
              <definition>
                <caption value="SIC Code Label" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value value="SIC Code Search" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.GeneralLiabilityPremOpsIndicator" path="Indicators[Type=&quot;GeneralLiabilityPremOps&quot;]/bValue" type="boolean">
              <definition>
                <caption value="General Liability Prem Ops Indicator" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.TypeOfRisk" path="TypeOfRisk" type="string">
              <definition>
                <caption value="Type of Policy" />
                <options>
                  <option value="31" caption="Motel/Hotel" />
                  <option value="32" caption="Apartment House" />
                  <option value="33" caption="Office" />
                  <option value="34" caption="Mercantile" />
                  <option value="35" caption="Institutional" />
                  <option value="36" caption="Service" />
                  <option value="37" caption="Industrial/Processing" />
                  <option value="38" caption="Contracting Policy" />
                </options>
                <formatMask idref="FormatMask.BlankOption" />
                <maxLength value="2" />
                <readOnly>
                  <comparison compare="eq">
                    <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </readOnly>
                <required idref="True" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.HonoredProductManuscriptID" path="HonoredProductManuscriptID" type="string">
              <definition>
                <caption value="Honored Product Manuscript ID" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyInput.HonorRates" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.TrueISOPackage" path="TrueISOPackage" type="boolean">
              <definition>
                <caption value="True ISO Package" />
              </definition>
              <rules>
                <value>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PolicyInput.LineOfBusiness" type="string" />
                      <operand type="string" value="Package" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate_PackageMod.IsAvailable" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </value>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.ISOLicenseInfo" path="ISOLicenseInfo" type="string">
              <definition>
                <caption value="ISO License Info" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.NAICSCodeLabel" path="NAICSCodeLabel" type="string">
              <definition>
                <caption value="NAICS Code Label" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value value="NAICS Code Search" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.NAICSCodeSearchValue" path="NAICSCodeSearchValue" type="string">
              <definition>
                <caption value="NAICS Code Search Value" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <affects>
                  <reference idref="PolicyInput.NAICSCodeDesc" effect="postEffect" />
                </affects>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.InNAICSEditMode" type="boolean" comment="" path="InNAICSEditMode">
              <rules>
                <default idref="False" />
              </rules>
              <definition>
                <caption value="Policy Output Non Shredded In NAICS Edit Mode" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.FormsPrintJob" path="FormsPrintJob" type="string">
              <definition>
                <caption value="Forms Print Job" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value value="_TransactionPrint" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.IsPackagePolicy" path="PackagePolicyIndicator" type="boolean" comment="Shared">
              <definition>
                <caption value="Package Policy" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <value>
                  <comparison compare="eq">
                    <operand idref="PolicyInput.LineOfBusiness" type="string" />
                    <operand type="string" value="Package" />
                  </comparison>
                </value>
              </rules>
            </public>
            <private id="PolicyOutputNonShredded.GetOSTActiveTransactionType" caption="" type="string">
              <value>
                <request verb="Session.getPropertyRq" get="@value">
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="OSTActiveTransactionType" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <public id="PolicyOutputNonShredded.AuditMode" path="AuditMode" type="boolean">
              <definition>
                <caption value="Audit Mode" />
              </definition>
              <rules>
                <default idref="False" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.PreTransactionProductActivitiesCompleted" path="PreTransactionProductActivitiesCompleted" type="boolean">
              <definition>
                <caption value="Pre Transaction Product Activities Completed" />
              </definition>
              <rules>
                <default idref="False" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.SelectedLines" path="SelectedLines" type="string">
              <definition>
                <caption value="Selected Lines" />
                <maxLength value="200" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" comment="" path="AvailableNumberIDForCurrentTerm">
              <rules>
                <default idref="AvailableNumbersPerTermPrivate.ID" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.NCCILicenseInfo" path="NCCILicenseInfo" type="string">
              <definition>
                <caption value="NCCI License Info" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.IsReportable" path="Indicators[Type=&quot;IsReportable&quot;]/bValue" type="boolean">
              <definition>
                <caption value="Is Reportable" />
              </definition>
              <rules>
                <default idref="False" />
                <value>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsReportableLOB" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </value>
                <affects>
                  <reference idref="PolicyOutputNonShredded.ReportingPeriod" effect="postEffect" />
                </affects>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.ReportingMode" path="ReportingMode" type="boolean">
              <definition>
                <caption value="Reporting Mode" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.ReportingPeriod" path="ReportingPeriod" type="string">
              <definition>
                <caption value="Reporting Period" />
                <options>
                  <option value="Annual" caption="Annual" />
                  <option value="SemiAnnual" caption="Semi Annual" />
                  <option value="Quarterly" caption="Quarterly" />
                  <option value="Monthly" caption="Monthly" />
                </options>
              </definition>
              <rules>
                <default value="Monthly" />
                <value value="Monthly" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.IsFinalReportable" path="Indicators[Type=&quot;IsFinalReportable&quot;]/bValue" type="boolean">
              <definition>
                <caption value="Is Final Report" />
              </definition>
              <rules>
                <default idref="False" />
                <value>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsFinalReportLOB" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </value>
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.AAISLicenseInfo" path="AAISLicenseInfo" type="string">
              <definition>
                <caption value="AAIS License Info" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.CurrentTransactionID" type="string" comment="" path="CurrentTransactionID">
              <rules>
                <value>
                  <iterator type="string" scope="last" action="sum" idref="Transaction">
                    <reference idref="TransactionOutput.ID" type="string" />
                  </iterator>
                </value>
              </rules>
              <definition>
                <caption value="Current Transaction ID" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.DARRForceReRate" path="DARRForceReRate" type="int">
              <definition>
                <caption value="DARR Force Re Rate" />
              </definition>
              <rules>
                <forceRerate value="1" />
                <default value="0" />
              </rules>
            </public>
            <public id="PolicyOutputNonShredded.LastTransactionExpirationDate" type="date" comment="" path="LastTransactionExpirationDate">
              <rules>
                <value>
                  <iterator type="date" scope="last" action="sum" idref="Transaction">
                    <reference idref="TransactionInput.ExpirationDate" type="date" />
                  </iterator>
                </value>
              </rules>
              <definition>
                <caption value="Last Transaction Expiration Date" />
                <maxLength idref="MaxLength.Date" />
              </definition>
            </public>
            <public id="PolicyOutputNonShredded.RatingWorksheetText" type="string" comment="" path="RatingWorksheetText">
              <definition>
                <caption type="string" value="The Rating Worksheet will display calculations in their entirety when the worksheet generation process is complete." />
              </definition>
            </public>
          </object>
          <public id="PolicyOutput.StatCodePolicyType" path="statCode[Type=&quot;PolicyType&quot;]/sValue" type="string" class="StatCode" alwaysRun="1">
            <definition>
              <caption value="Stat Code Policy Type" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.TrueISOPackage" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="10" />
                </if>
                <if>
                  <condition idref="PolicyOutputNonShredded.TrueISOPackage" type="boolean" />
                  <then idref="PolicyOutputNonShredded.TypeOfRisk" />
                </if>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="or">
                        <comparison compare="or">
                          <operand idref="PolicyPrivate.IsCommercialAutoMASelected" type="boolean" />
                          <operand idref="PolicyPrivate.IsCommercialInlandMarineAAISSelected" type="boolean" />
                        </comparison>
                        <operand idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" type="boolean" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="" />
                </if>
              </misc>
              <value value="99" />
            </rules>
          </public>
          <public id="PolicyOutput.ID" path="@id" type="string">
            <definition>
              <caption value="ID" />
              <maxLength idref="MaxLength.ID" />
            </definition>
          </public>
          <public id="PolicyOutput.DCT_FORMLIST" path="DCT_FORMLIST" type="string">
            <definition>
              <caption value="DCT_FORMLIST" />
              <maxLength idref="MaxLength.LongDescription" />
            </definition>
          </public>
          <public id="PolicyOutput.DCT_NAMELIST" path="DCT_NAMELIST" type="string">
            <definition>
              <caption value="DCT_NAMELIST" />
              <maxLength idref="MaxLength.LongDescription" />
            </definition>
          </public>
          <public id="PolicyOutput.DCT_JOBNAMES" path="DCT_JOBNAMES" type="string">
            <definition>
              <caption value="DCT_JOBNAMES" />
              <maxLength idref="MaxLength.LongDescription" />
            </definition>
          </public>
          <public id="PolicyOutput.Audited" path="Audited" type="boolean">
            <definition>
              <caption value="Audited" />
            </definition>
          </public>
          <object id="PolicySubtotals" abstract="1">
            <object id="LineSubTotals" abstract="1">
              <object id="LineTotalPurePremiums" abstract="1">
                <public id="LineTotalPurePremiums.PurePremiumWritten" path="LineTotalPurePremium/@written" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Line Total Pure Premiums Pure Premium Written" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <iterator type="float" scope="all" action="sum" idref="Line">
                        <reference idref="LinePurePremiums.PurePremiumWritten" type="float" />
                        <subtotal idref="LinePurePremiums.PurePremium" type="float" subtotalRef="LineTotalPurePremiums.PurePremium" />
                        <subtotal idref="LinePurePremiums.PurePremiumChange" type="float" subtotalRef="LineTotalPurePremiums.PurePremiumChange" />
                        <subtotal idref="LineTaxesAndSurcharges.TaxesSurchargesWritten" type="float" subtotalRef="LineTotalTaxesAndSurcharges.TaxesSurchargesWritten" />
                        <subtotal idref="LineTaxesAndSurcharges.TaxesSurcharges" type="float" subtotalRef="LineTotalTaxesAndSurcharges.TaxesSurcharges" />
                        <subtotal idref="LineTaxesAndSurcharges.TaxesSurchargesChange" type="float" subtotalRef="LineTotalTaxesAndSurcharges.TaxesSurchargesChange" />
                        <subtotal idref="LinePremiums.PremiumWritten" type="float" subtotalRef="LineTotalPremiums.PremiumWritten" />
                        <subtotal idref="LinePremiums.Premium" type="float" subtotalRef="LineTotalPremiums.Premium" />
                        <subtotal idref="LinePremiums.PremiumChange" type="float" subtotalRef="LineTotalPremiums.PremiumChange" />
                        <customQuery idref="PolicyPrivate.SelectedSpecificLineXPath" />
                      </iterator>
                    </value>
                  </rules>
                </public>
              </object>
            </object>
          </object>
          <object id="PolicyPremiumTotals" abstract="1">
            <object id="PolicyTaxesAndSurcharges" abstract="1">
              <public id="PolicyTaxesAndSurcharges.TaxesSurchargesWritten" path="TaxesSurchargesValues/@written" type="float" override="1">
                <definition>
                  <caption value="Policy Taxes And Surcharges Taxes Surcharges Written" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition idref="PolicyPrivate.IsWorkersCompensationLOB" />
                      <then idref="LineTotalTaxesAndSurcharges.TaxesSurchargesWritten" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="KYMunicipalTaxOutput.AmountWritten" type="float" />
                          <argument op="add" idref="KYPremiumSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="WVPolicyholderSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="NYFireInsSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="NYMotorVehLawEnforcementFeeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="MNFirefighterReliefFundSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountWritten" type="float" />
                          <argument op="add" idref="FLHurricaneCatastropheFundOutput.AmountWritten" type="float" />
                          <argument op="add" idref="FLEmergencyManagementPreparednessFundSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="FLStateFireMarshalRegulatoryAssessmentOutput.AmountWritten" type="float" />
                          <argument op="add" idref="MNFireSafetySurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="CAAutomobileAssessmentChargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="COAutoTheftPreventionAuthoritySurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="TXAutomobileTheftPreventionFeeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountWritten" type="float" />
                          <argument op="add" idref="MIMCCASurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="WAStateRegulatorySurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="MEFireInvestigationPreventionTaxOutput.AmountWritten" type="float" />
                          <argument op="add" idref="CASeismicSafetyAccountAssessmentOutput.AmountWritten" type="float" />
                          <argument op="add" idref="AZTheftProtectionAssessmentOutput.AmountWritten" type="float" />
                          <argument op="add" idref="MNAutomobileTheftPreventionSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.AmountWritten" type="float" />
                          <argument op="add" idref="NCCommercialAutoLossRecoupmentSurchargeOutput.AmountWritten" type="float" />
                          <argument op="add" idref="FLInsuranceGuarantyAssociationAssessmentOutput.AmountWritten" type="float" />
                          <argument op="add" idref="COHazardMitigationFeeOutput.AmountWritten" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="PolicyStateTaxesSurcharges.TotalAllTaxes" effect="preEffect" />
                  </affects>
                </rules>
              </public>
              <public id="PolicyTaxesAndSurcharges.TaxesSurchargesChange" path="TaxesSurchargesValues/@change" type="float" override="1">
                <definition>
                  <caption value="Policy Taxes And Surcharges Taxes Surcharges Change" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition idref="PolicyPrivate.IsWorkersCompensationLOB" />
                      <then idref="LineTotalTaxesAndSurcharges.TaxesSurchargesChange" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="KYMunicipalTaxOutput.AmountChange" type="float" />
                          <argument op="add" idref="KYPremiumSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="WVPolicyholderSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="NYFireInsSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="NYMotorVehLawEnforcementFeeOutput.AmountChange" type="float" />
                          <argument op="add" idref="MNFirefighterReliefFundSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountChange" type="float" />
                          <argument op="add" idref="FLHurricaneCatastropheFundOutput.AmountChange" type="float" />
                          <argument op="add" idref="FLEmergencyManagementPreparednessFundSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="FLStateFireMarshalRegulatoryAssessmentOutput.AmountChange" type="float" />
                          <argument op="add" idref="MNFireSafetySurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="CAAutomobileAssessmentChargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="COAutoTheftPreventionAuthoritySurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="TXAutomobileTheftPreventionFeeOutput.AmountChange" type="float" />
                          <argument op="add" idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountChange" type="float" />
                          <argument op="add" idref="MIMCCASurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="WAStateRegulatorySurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="MEFireInvestigationPreventionTaxOutput.AmountChange" type="float" />
                          <argument op="add" idref="CASeismicSafetyAccountAssessmentOutput.AmountChange" type="float" />
                          <argument op="add" idref="AZTheftProtectionAssessmentOutput.AmountChange" type="float" />
                          <argument op="add" idref="MNAutomobileTheftPreventionSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.AmountChange" type="float" />
                          <argument op="add" idref="NCCommercialAutoLossRecoupmentSurchargeOutput.AmountChange" type="float" />
                          <argument op="add" idref="FLInsuranceGuarantyAssociationAssessmentOutput.AmountChange" type="float" />
                          <argument op="add" idref="COHazardMitigationFeeOutput.AmountChange" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </rules>
              </public>
              <public id="PolicyTaxesAndSurcharges.TaxesSurcharges" path="TaxesSurcharges" type="float" override="1">
                <definition>
                  <caption value="Total Taxes and Surcharges" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition idref="PolicyPrivate.IsWorkersCompensationLOB" />
                      <then idref="LineTotalTaxesAndSurcharges.TaxesSurcharges" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="KYMunicipalTaxOutput.Amount" type="float" />
                          <argument op="add" idref="KYPremiumSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="WVPolicyholderSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="NYFireInsSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="NYMotorVehLawEnforcementFeeOutput.Amount" type="float" />
                          <argument op="add" idref="MNFirefighterReliefFundSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" />
                          <argument op="add" idref="FLHurricaneCatastropheFundOutput.Amount" type="float" />
                          <argument op="add" idref="FLEmergencyManagementPreparednessFundSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="FLStateFireMarshalRegulatoryAssessmentOutput.Amount" type="float" />
                          <argument op="add" idref="MNFireSafetySurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="CAAutomobileAssessmentChargeOutput.Amount" type="float" />
                          <argument op="add" idref="COAutoTheftPreventionAuthoritySurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="TXAutomobileTheftPreventionFeeOutput.Amount" type="float" />
                          <argument op="add" idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" />
                          <argument op="add" idref="MIMCCASurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="WAStateRegulatorySurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="MEFireInvestigationPreventionTaxOutput.Amount" type="float" />
                          <argument op="add" idref="CASeismicSafetyAccountAssessmentOutput.Amount" type="float" />
                          <argument op="add" idref="AZTheftProtectionAssessmentOutput.Amount" type="float" />
                          <argument op="add" idref="MNAutomobileTheftPreventionSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" type="float" />
                          <argument op="add" idref="NCCommercialAutoLossRecoupmentSurchargeOutput.Amount" type="float" />
                          <argument op="add" idref="FLInsuranceGuarantyAssociationAssessmentOutput.Amount" type="float" />
                          <argument op="add" idref="COHazardMitigationFeeOutput.Amount" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </rules>
              </public>
            </object>
            <object id="PolicyPremiums" abstract="1">
              <public id="PolicyPremiums.Premium" path="Premium" type="float" class="excludeInChangeSummary" override="1">
                <definition>
                  <caption value="Total Policy Premium" />
                  <readOnly idref="True" />
                  <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsCurrentManuscriptPages" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="PolicyPremiums.Premium" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="PolicyPurePremiums.PurePremium" type="float" />
                          <argument op="add" idref="PolicyTaxesAndSurcharges.TaxesSurcharges" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </rules>
              </public>
              <public id="PolicyPremiums.PremiumChange" path="PremiumChange" type="float" class="excludeInChangeSummary" override="1">
                <definition>
                  <caption value="Premium Change" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsCurrentManuscriptPages" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="PolicyPremiums.PremiumChange" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="PolicyPurePremiums.PurePremiumChange" type="float" />
                          <argument op="add" idref="PolicyTaxesAndSurcharges.TaxesSurchargesChange" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="PolicyPurePremiumsForBilling.PurePremiumChange" effect="postEffect" />
                    <reference idref="PolicyTaxesAndSurchargesForBilling.TaxesSurchargesChange" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public id="PolicyPremiums.PremiumPrior" path="PremiumPrior" type="float" override="1">
                <definition>
                  <caption value="Premium Prior" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsCurrentManuscriptPages" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="PolicyPremiums.PremiumPrior" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="PolicyPremiums.PremiumWritten" type="float" />
                          <argument op="subtract" idref="PolicyPremiums.PremiumChange" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="PolicyOutput.PurePremiumPrior" effect="postEffect" />
                    <reference idref="PolicyOutput.TaxesSurchargesPrior" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public id="PolicyPremiums.PremiumWritten" path="PremiumWritten" type="float" class="excludeInChangeSummary" override="1">
                <definition>
                  <caption value="Premium Written" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsCurrentManuscriptPages" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="PolicyPremiums.PremiumWritten" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="PolicyPurePremiums.PurePremiumWritten" type="float" />
                          <argument op="add" idref="PolicyTaxesAndSurcharges.TaxesSurchargesWritten" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="PolicyPremiums.PremiumPrior" effect="postEffect" />
                  </affects>
                </rules>
              </public>
            </object>
          </object>
          <public id="PolicyOutput.TermFactor" path="TermFactor" type="float" override="1">
            <definition>
              <caption value="Term Factor" />
              <readOnly idref="True" />
              <formatMask idref="FormatMask.Factor" />
              <maxLength idref="MaxLength.fValue" />
            </definition>
            <rules>
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.NotCustomTerm" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="PolicyPrivate.CustomTermFactor" />
                  <else idref="PolicyPrivate.StandardTermFactor" />
                </if>
              </value>
            </rules>
            <worksheet suppress="1" />
          </public>
          <public id="PolicyOutput.StatCodeTransactionIdentifier" path="statCode[Type=&quot;TransactionIdentifier&quot;]/sValue" type="string" class="StatCode">
            <definition>
              <caption value="Transaction Identifier" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="AccountPrivate.IsAnyLocationTXIncludeDeleted" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="ne">
                        <operand idref="PolicyInput.PrimaryRatingState" type="string" />
                        <operand type="string" value="TX" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="" />
                </if>
              </misc>
              <value>
                <select idref="PolicyOutputNonShredded.LastTransactionType">
                  <case idref="PolicyPrivate.TransactionIdentifierCancelSelect" type="string" select="Cancel" />
                  <case type="int" value="15" select="Endorse" />
                  <case type="int" value="16" select="FinalAudit" />
                  <case type="int" value="16" select="InterimAudit" />
                  <case type="int" value="16" select="RevisedAudit" />
                  <case type="int" value="17" select="Reinstate" />
                  <case type="int" value="18" select="New" />
                  <case type="int" value="19" select="Renew" />
                  <otherwise type="int" value="29" />
                </select>
              </value>
            </rules>
          </public>
          <public id="PolicyOutput.StatCodeTransactionEffectiveDay" path="statCode[Type=&quot;TransactionEffectiveDay&quot;]/sValue" type="string" class="StatCode">
            <definition>
              <caption value="Transaction Effective Day" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules>
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="PolicyOutputNonShredded.LastTransactionEffectiveDate" />
                  <separatorChar value="-" />
                  <ordPosition value="3" />
                </subString>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="AccountPrivate.IsAnyLocationTXIncludeDeleted" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="ne">
                        <operand idref="PolicyInput.PrimaryRatingState" type="string" />
                        <operand type="string" value="TX" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="" />
                </if>
              </misc>
            </rules>
          </public>
          <public id="PolicyOutput.StatCodeTransactionExpirationDay" path="statCode[Type=&quot;TransactionExpirationDay&quot;]/sValue" type="string" class="StatCode">
            <definition>
              <caption value="Transaction Expiration Day" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <rules>
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="PolicyOutputNonShredded.LastTransactionExpirationDate" />
                  <separatorChar value="-" />
                  <ordPosition value="3" />
                </subString>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="AccountPrivate.IsAnyLocationTXIncludeDeleted" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="ne">
                        <operand idref="PolicyInput.PrimaryRatingState" type="string" />
                        <operand type="string" value="TX" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="" />
                </if>
              </misc>
            </rules>
          </public>
        </object>
        <object id="Line" path="line" override="1">
          <minOccurs value="10" />
          <maxOccurs value="10" />
          <object id="Risk" path="risk" override="1">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <object id="RiskPrivate" abstract="1">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="RiskManuScript">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="RiskManuScript.RatingManuscriptID" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="LineInput.HonorRates" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="RiskOutputNonShredded.HonoredRatingManuscriptID" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="RiskOutputNonShredded.HonoredRatingManuscriptID" type="string" />
                            <operand type="string" value="0" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="RiskOutputNonShredded.HonoredRatingManuscriptID" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                          <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                          <fieldRef value="Value" />
                          <keyRef type="string" value="Rating" name="Manuscript" />
                          <keyRef idref="RiskManuScript.StateKey" type="string" name="State" />
                          <keyRef idref="RiskManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="RiskManuScript.PagesManuscriptID" caption="" type="string">
                  <affects>
                    <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" effect="setValue" />
                    <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptVersionID" effect="setValue" />
                  </affects>
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                      <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="string" value="Pages" name="Manuscript" />
                      <keyRef idref="RiskManuScript.StateKey" type="string" name="State" />
                      <keyRef idref="RiskManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                    </lookup>
                  </value>
                </private>
                <private id="RiskManuScript.LineOfBusinessKeyForCarrier" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="Carrier" />
                      <argument op="add" idref="LineOutput.Type" type="string" />
                    </calculation>
                  </value>
                </private>
                <private id="RiskManuScript.ManuScriptIDByCarrier" type="string" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.LineOfBusinessKeyForCarrier" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="RiskManuScript.ManuScriptIDNonCarrier" type="string" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="RiskManuScript.ManuScriptID" type="string" caption="temp">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="LineInput.HonorRates" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="RiskOutputNonShredded.HonoredRiskStateManuscriptID" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="RiskOutputNonShredded.HonoredRiskStateManuscriptID" type="string" />
                            <operand type="string" value="0" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="RiskOutputNonShredded.HonoredRiskStateManuscriptID" />
                      <else idref="RiskManuScript.ManuScriptIDBroker" />
                    </if>
                  </value>
                </private>
                <private id="RiskManuScript.SetRiskStateManuscriptID" caption="" type="string" alwaysRun="1">
                  <value idref="RiskManuScript.ManuScriptID" />
                  <affects>
                    <reference idref="HonoredManuscriptsOutput.RiskManuscriptID" effect="setValue" />
                  </affects>
                </private>
                <private id="RiskManuScript.SetRatingManuscriptID" caption="" type="string" alwaysRun="1">
                  <value idref="RiskManuScript.RatingManuscriptID" />
                  <affects>
                    <reference idref="HonoredManuscriptsOutput.RatingManuscriptID" effect="setValue" />
                    <reference idref="RiskManuScript.SetRiskStateManuscriptID" effect="postEffect" />
                    <reference idref="RiskManuScript.SetRateEffectiveDate" effect="postEffect" />
                  </affects>
                </private>
                <private id="RiskManuScript.ManuScriptIDBroker" type="string" caption="temp">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="ne">
                          <operand idref="RiskManuScript.ManuScriptIDByCarrier" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="RiskManuScript.ManuScriptIDByCarrier" />
                      <else idref="RiskManuScript.ManuScriptIDNonCarrier" />
                    </if>
                  </value>
                </private>
                <private id="RiskManuScript.RateEffectiveDateBroker" type="date" caption="temp">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="ne">
                          <operand idref="RiskManuScript.ManuScriptIDByCarrier" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="RiskManuScript.RateEffectiveDateBrokerByCarrier" />
                      <else idref="RiskManuScript.RateEffectiveDateBrokerByNonCarrier" />
                    </if>
                  </value>
                </private>
                <private id="RiskManuScript.SetRateEffectiveDate" caption="" type="string" alwaysRun="1">
                  <value idref="RiskManuScript.RateEffectiveDate" />
                  <affects>
                    <reference idref="HonoredManuscriptsOutput.RateEffectiveDate" effect="setValue" />
                  </affects>
                </private>
                <private id="RiskManuScript.RateEffectiveDate" type="date" caption="temp">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="LineInput.HonorRates" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="RiskOutputNonShredded.HonoredRateEffectiveDate" type="date" />
                              <operand type="string" value="1899-12-30" />
                            </comparison>
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="RiskOutputNonShredded.HonoredRateEffectiveDate" type="date" />
                            <operand type="int" value="0" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="RiskOutputNonShredded.HonoredRateEffectiveDate" />
                      <else idref="RiskManuScript.RateEffectiveDateBroker" />
                    </if>
                  </value>
                </private>
                <private id="RiskManuScript.EffectiveDateKey" type="date">
                  <value idref="PolicyInput.EffectiveDate" />
                </private>
                <private id="RiskManuScript.EffectiveDateKeyName" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                          <operand type="string" value="Renew" />
                        </comparison>
                      </condition>
                      <then idref="ManuScriptKeys.effectiveDateRenewal" />
                      <else idref="ManuScriptKeys.effectiveDateNew" />
                    </if>
                  </value>
                </private>
                <private id="RiskManuScript.LineOfBusinessKey" type="string">
                  <value idref="LineOutput.Type" />
                </private>
                <private id="RiskManuScript.MasterManuScriptID" type="string" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;masterID&quot;]/@value">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="RiskManuScript.StateKey" type="string">
                  <value idref="LocationInput.State" />
                </private>
                <private id="RiskManuScript.RateEffectiveDateBrokerByCarrier" type="date" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;effectiveDateNew&quot;]/@value">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.LineOfBusinessKeyForCarrier" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="RiskManuScript.RateEffectiveDateBrokerByNonCarrier" type="date" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;effectiveDateNew&quot;]/@value">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
              </object>
              <object id="SelectedLocationManuScript">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="SelectedLocationManuScript.EffectiveDateKey" type="date">
                  <value idref="PolicyInput.EffectiveDate" />
                </private>
                <private id="SelectedLocationManuScript.EffectiveDateKeyName" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                          <operand type="string" value="Renew" />
                        </comparison>
                      </condition>
                      <then idref="ManuScriptKeys.effectiveDateRenewal" />
                      <else idref="ManuScriptKeys.effectiveDateNew" />
                    </if>
                  </value>
                </private>
                <private id="SelectedLocationManuScript.LineOfBusinessKey" type="string">
                  <value idref="LineOutput.Type" />
                </private>
                <private id="SelectedLocationManuScript.ManuScriptID" type="string" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="SelectedLocationManuScript.MasterManuScriptID" type="string" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;masterID&quot;]/@value">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="SelectedLocationManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="SelectedLocationManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="SelectedLocationManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="SelectedLocationManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="SelectedLocationManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="SelectedLocationManuScript.RateEffectiveDate" type="date" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;effectiveDateNew&quot;]/@value">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="RiskManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="RiskManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="SelectedLocationManuScript.StateKey" type="string">
                  <value idref="LocationSelectPrivate.StateForThisLocation" />
                </private>
              </object>
              <private id="RiskPrivate.HonoredManuscriptsStateXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="honoredmanuscripts[State='" />
                    <argument op="add" idref="RiskOutputNonShredded.RiskState" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="RiskPrivate.ContextPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="RiskOutput.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="RiskPrivate.DeleteObjectRecord" caption="" type="string">
                <value>
                  <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                    <onFailure value="" />
                    <modifySession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="Risk" name="objectID" dataType="attribute" />
                      <nameValue idref="RiskPrivate.ContextPath" name="context" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="RiskPrivate.BelongsToLocation" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="RiskInput.LocationID" type="string" />
                    <operand idref="GlobalOutput.LocationIDToCompare" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="RiskPrivate.BelongsToSelectedLocation" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="RiskInput.LocationID" type="string" />
                    <operand idref="LocationSelectInput.LocationID" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="RiskPrivate.CanAdd" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="RiskPrivate.CanEdit" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="RiskPrivate.SetDescription" type="string">
                <value>
                  <external>
                    <manuscriptName idref="LineManuScript.MasterManuScriptID" />
                    <referenceField value="RiskPrivate.SetDescription" />
                  </external>
                </value>
              </private>
              <object id="RiskCoverageTotals">
                <minOccurs value="1" />
                <maxOccurs value="1" />
              </object>
              <private id="RiskPrivate.ResetRiskNumber" caption="" type="int" comment="Line manuscript can be modified to do a set value to the appropriate field">
                <value idref="RiskPrivate.CurrentIteration" />
              </private>
              <private id="RiskPrivate.CurrentIteration" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="current" idref="Risk" />
                </value>
              </private>
              <private id="RiskPrivate.IsValidToRenumber" caption="" type="boolean">
                <value>
                  <comparison idref="PolicyPrivate.IsValidToRenumber" type="boolean" />
                </value>
              </private>
              <private id="RiskPrivate.ValidRiskRenumber" caption="" type="int">
                <value idref="RiskPrivate.CurrentIteration" />
                <affects>
                  <reference idref="PolicyPrivate_RiskNumbering.ResetVehicleNumber" effect="postEffect" />
                </affects>
              </private>
              <private id="RiskPrivate.ResetRiskNumberMidTerm" caption="" type="int" comment="Line manuscript can be modified to do a set value to the appropriate field" path="ResetRiskNumberMidTerm">
                <value idref="LinePrivate_RiskNumbering.NextAvailableVehicleNumber" />
              </private>
              <object id="RiskPrivate_NumberSetup">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="RiskPrivate_NumberSetup.BackupNumberCount" caption="" type="int">
                  <value>
                    <iterator type="int" scope="all" action="count" idref="AvailableNumbersBackup">
                      <customQuery idref="RiskPrivate_NumberSetup.BackupNumberXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="RiskPrivate_NumberSetup.BackupNumberXPath" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="availableNumbersBackup[@groupID='" />
                      <argument op="add" idref="RiskOutput.ID" type="string" />
                      <argument op="add" type="string" value="'][@availableNumberTermID='" />
                      <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                      <argument op="add" type="string" value="']" />
                    </calculation>
                  </value>
                </private>
                <private id="RiskPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" caption="" type="string" path="AvailableNumberIDForCurrentTerm">
                  <value value="" />
                  <affects>
                    <reference idref="RiskOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="setValue" />
                  </affects>
                </private>
                <private id="RiskPrivate_NumberSetup.ReconcileBackupSetup" caption="" type="string" path="LocationNumberOOSSetup">
                  <value value="" />
                  <affects>
                    <reference idref="RiskPrivate_NumberSetup.SetBackupNumberValue" effect="postEffect" />
                    <reference idref="RiskPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" effect="postEffect" />
                    <reference idref="RiskOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
                  </affects>
                </private>
                <private id="RiskPrivate_NumberSetup.ReconcileInitialSetup" caption="" type="string" path="LocationNumberOOSSetup">
                  <value value="" />
                  <affects>
                    <reference idref="RiskPrivate.ResetRiskNumberMidTerm" effect="postEffect" />
                    <reference idref="RiskPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" effect="postEffect" />
                    <reference idref="RiskOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
                    <reference idref="RiskPrivate_NumberSetup.UpdateAvailableNumberBackup" effect="postEffect" />
                  </affects>
                </private>
                <private id="RiskPrivate_NumberSetup.ReconcileSetupCheck" caption="" type="string" path="ReconcileSetupCheck">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="RiskPrivate_NumberSetup.BackupNumberCount" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </condition>
                      <then idref="RiskPrivate_NumberSetup.ReconcileInitialSetup" />
                      <else idref="RiskPrivate_NumberSetup.ReconcileBackupSetup" />
                    </if>
                  </value>
                </private>
                <private id="RiskPrivate_NumberSetup.SetBackupNumberValue" caption="" type="string">
                  <value>
                    <iterator type="string" scope="first" action="sum" idref="AvailableNumbersBackup">
                      <reference idref="AvailableNumbersBackupOutput.Value" type="string" />
                      <customQuery idref="RiskPrivate_NumberSetup.BackupNumberXPath" />
                    </iterator>
                  </value>
                  <affects>
                    <reference idref="RiskOutputNonShredded.RiskNumber" effect="setValue" />
                  </affects>
                </private>
                <private id="RiskPrivate_NumberSetup.UpdateAvailableNumberBackup" caption="" type="string">
                  <value>
                    <request verb="Session.setElementRq" get="">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue idref="RiskPrivate_NumberSetup.UpdateAvailableNumberBackupPath" name="path" dataType="attribute" />
                        <nameValue idref="RiskOutputNonShredded.RiskNumber" name="value" dataType="attribute" />
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="RiskPrivate_NumberSetup.UpdateAvailableNumberBackupPath" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="_temporaryTemplateData^availableNumbersBackup[@groupID='" />
                      <argument op="add" idref="RiskOutput.ID" type="string" />
                      <argument op="add" type="string" value="' and @availableNumberTermID='" />
                      <argument op="add" idref="RiskOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                      <argument op="add" type="string" value="']/@value" />
                    </calculation>
                  </value>
                </private>
              </object>
            </object>
            <object id="RiskInput" abstract="1">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="RiskInput.OccupancyID" path="OccupancyID" type="string" comment="Shared">
                <definition>
                  <caption value="Occupancy ID" />
                  <options codeRef="Occupancy" captionRef="OccupancyOutputNonShredded.ShortDescription" />
                  <maxLength idref="MaxLength.ID" />
                </definition>
              </public>
              <public id="RiskInput.BuildingID" path="BuildingID" type="string" comment="Shared">
                <definition>
                  <caption value="Building ID" />
                  <options codeRef="Building" captionRef="BuildingInput.Description" />
                  <maxLength idref="MaxLength.ID" />
                </definition>
              </public>
              <public id="RiskInput.LocationID" path="LocationID" type="string" comment="Shared">
                <definition>
                  <caption value="Location" />
                  <options codeRef="Location" captionRef="LocationInput.Description" />
                  <maxLength idref="MaxLength.ID" />
                </definition>
              </public>
            </object>
            <relationships>
              <relationship>
                <relatedObject idref="Location" />
                <foreignKey idref="RiskInput.LocationID" />
              </relationship>
              <relationship>
                <relatedObject idref="Building" />
                <foreignKey idref="RiskInput.BuildingID" />
              </relationship>
              <relationship>
                <relatedObject idref="Occupancy" />
                <foreignKey idref="RiskInput.OccupancyID" />
              </relationship>
            </relationships>
            <object id="RiskOutput" abstract="1">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="RiskOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="RiskOutputNonShredded.HonoredRatingManuscriptID" path="HonoredRiskRatingManuscriptID" type="string" alwaysRun="1">
                  <definition>
                    <caption value="Honored Rating Manuscript ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="" />
                      </if>
                    </misc>
                    <value>
                      <iterator type="string" scope="first" action="sum" idref="HonoredManuscripts">
                        <reference idref="HonoredManuscriptsOutput.RatingManuscriptID" type="string" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="RiskOutputNonShredded.RiskState" type="string" />
                            <operand idref="HonoredManuscriptsOutput.State" type="string" />
                          </comparison>
                        </where>
                        <customQuery idref="RiskPrivate.HonoredManuscriptsStateXPath" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <public id="RiskOutputNonShredded.HonoredRiskStateManuscriptID" path="HonoredRiskStateManuscriptID" type="string" alwaysRun="1">
                  <definition>
                    <caption value="Risk Output Non Shredded Honored Risk State Manuscript ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="" />
                      </if>
                    </misc>
                    <value>
                      <iterator type="string" scope="first" action="sum" idref="HonoredManuscripts">
                        <reference idref="HonoredManuscriptsOutput.RiskManuscriptID" type="string" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="RiskOutputNonShredded.RiskState" type="string" />
                            <operand idref="HonoredManuscriptsOutput.State" type="string" />
                          </comparison>
                        </where>
                        <customQuery idref="RiskPrivate.HonoredManuscriptsStateXPath" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <public id="RiskOutputNonShredded.RiskState" path="RiskState" type="string" alwaysRun="1">
                  <definition>
                    <caption value="Risk State" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value idref="LocationInput.State" />
                    <default idref="LocationInput.State" />
                  </rules>
                </public>
                <public id="RiskOutputNonShredded.HonoredRateEffectiveDate" path="HonoredRiskRateEffectiveDate" type="date" alwaysRun="1">
                  <definition>
                    <caption value="Risk Output Non Shredded Honored Rate Effective Date" />
                    <maxLength idref="MaxLength.Date" />
                  </definition>
                  <rules>
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="" />
                      </if>
                    </misc>
                    <value>
                      <iterator type="date" scope="first" action="sum" idref="HonoredManuscripts">
                        <reference idref="HonoredManuscriptsOutput.RateEffectiveDate" type="date" />
                        <where>
                          <comparison compare="eq">
                            <operand idref="RiskOutputNonShredded.RiskState" type="string" />
                            <operand idref="HonoredManuscriptsOutput.State" type="string" />
                          </comparison>
                        </where>
                        <customQuery idref="RiskPrivate.HonoredManuscriptsStateXPath" />
                      </iterator>
                    </value>
                  </rules>
                </public>
                <public id="RiskOutputNonShredded.Deleted" path="@deleted" type="boolean">
                  <definition>
                    <caption value="Deleted" />
                  </definition>
                  <rules>
                    <default value="0" />
                  </rules>
                </public>
                <public id="RiskOutputNonShredded.TransactionIDWhenAdded" path="TransactionIDWhenAdded" type="string">
                  <definition>
                    <caption value="Transaction ID When Added" />
                  </definition>
                  <rules>
                    <default idref="PolicyOutputNonShredded.CurrentTransactionID" />
                    <nonRating value="1" />
                  </rules>
                </public>
                <public id="RiskOutputNonShredded.AvailableNumberIDForCurrentTerm" path="AvailableNumberIDForCurrentTerm" type="string" alwaysRun="1">
                  <definition>
                    <caption value="Available Number ID For Current Term" />
                  </definition>
                  <rules>
                    <default idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" />
                    <misc>
                      <if>
                        <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                        <then idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" />
                      </if>
                    </misc>
                  </rules>
                </public>
                <public id="RiskOutputNonShredded.RiskNumber" path="RiskNumber" type="int">
                  <definition>
                    <caption value="Risk Number" />
                  </definition>
                </public>
              </object>
              <public id="RiskOutput.ID" path="@id" type="string">
                <definition>
                  <caption value="ID" />
                  <maxLength idref="MaxLength.ID" />
                </definition>
              </public>
              <object id="RiskPremiumTotals" abstract="1">
                <object id="RiskPremiumSubtotals">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="RiskKYMunicipalTax">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="RiskKYMunicipalTax.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskKYMunicipalTax.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskKYMunicipalTax.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                  </object>
                  <object id="RiskWVPolicyholderSurcharge">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="RiskWVPolicyholderSurcharge.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskWVPolicyholderSurcharge.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskWVPolicyholderSurcharge.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                  </object>
                  <object id="RiskKYSurcharge">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="RiskKYSurcharge.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskKYSurcharge.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskKYSurcharge.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                  </object>
                  <object id="RiskNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="RiskNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                  </object>
                  <object id="RiskFLInsuranceGuarantyAssociationAssessment">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="RiskFLInsuranceGuarantyAssociationAssessment.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskFLInsuranceGuarantyAssociationAssessment.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                    <private id="RiskFLInsuranceGuarantyAssociationAssessment.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                      <value value="0" />
                    </private>
                  </object>
                </object>
              </object>
            </object>
          </object>
          <object id="LinePrivate" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="CommercialAutoLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialAutoLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="CommercialAutoLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="CommercialAutoLinePrivate.LOBCode" type="string">
                <value value="CommercialAuto" />
              </private>
              <private id="CommercialAutoLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="CommercialAutoLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <private id="CommercialAutoLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="CommercialAutoLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <object id="GeneralLiabilityLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="GeneralLiabilityLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="GeneralLiabilityLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="GeneralLiabilityLinePrivate.LOBCode" type="string">
                <value value="GeneralLiability" />
              </private>
              <private id="GeneralLiabilityLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="GeneralLiabilityLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <private id="GeneralLiabilityLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="GeneralLiabilityLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <object id="PackageLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="PackageLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PackageLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="PackageLinePrivate.LOBCode" type="string">
                <value value="Package" />
              </private>
              <private id="PackageLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="PackageLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="PropertyLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="PropertyLinePrivate.ExtensionGroupMinimum" type="int" comment="">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PropertyLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="PropertyLinePrivate.LOBCode" type="string" comment="">
                <value value="Property" />
              </private>
              <private id="PropertyLinePrivate.SupportsThisLOB" type="boolean" comment="">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="PropertyLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <private id="PropertyLinePrivate.StateManuScriptID" type="string" caption="temp">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="PropertyLinePrivate.LOBCode" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.StateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="PropertyLinePrivate.MasterManuScriptID" type="string" caption="temp">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="PropertyLinePrivate.LOBCode" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue value="US" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="PropertyLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="PropertyLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <object id="LineManuScript">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="LineManuScript.PagesManuscriptID" type="string" comment="" path="PagesManuscriptID">
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.PagesManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.PagesManuscriptID" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                          <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                          <fieldRef value="Value" />
                          <keyRef type="string" value="Pages" name="Manuscript" />
                          <keyRef idref="LineManuScript.StateKey" type="string" name="State" />
                          <keyRef idref="LineManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Pages Manuscript ID" />
                </definition>
              </public>
              <public id="LineManuScript.ManuscriptIDTable" type="string" comment="" path="ManuscriptIDTable">
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="Manuscripts" />
                      <argument op="add" idref="LineManuScript.LineOfBusinessKey" type="string" />
                    </calculation>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Manuscript ID Table" />
                </definition>
              </public>
              <public id="LineManuScript.CPPManuscriptID" type="string" comment="" path="CPPManuscriptID">
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.CPPManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.CPPManuscriptID" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDCPPTable" />
                          <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                          <fieldRef value="Value" />
                          <keyRef type="string" value="PagesCPP" name="Manuscript" />
                          <keyRef idref="LineManuScript.StateKey" type="string" name="State" />
                          <keyRef idref="LineManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="CPPManuscript ID" />
                </definition>
              </public>
              <public id="LineManuScript.ControlManuscriptID" type="string" comment="" path="ControlManuscriptID">
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.HonoredControlManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.HonoredControlManuscriptID" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                          <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                          <fieldRef value="Value" />
                          <keyRef type="string" value="Control" name="Manuscript" />
                          <keyRef idref="LineManuScript.StateKey" type="string" name="State" />
                          <keyRef idref="LineManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineManuScript.HonoredControlManuscriptID" effect="setValue" />
                  </affects>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Control Manuscript ID" />
                </definition>
              </public>
              <public id="LineManuScript.RatingManuscriptID" type="string" comment="" path="RatingManuscriptID">
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.RatingManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.RatingManuscriptID" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                          <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                          <fieldRef value="Value" />
                          <keyRef type="string" value="Rating" name="Manuscript" />
                          <keyRef idref="LineManuScript.StateKey" type="string" name="State" />
                          <keyRef idref="LineManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Rating Manuscript ID" />
                </definition>
              </public>
              <public id="LineManuScript.ManuScriptID" type="string" comment="" path="ManuScriptID">
                <definition>
                  <caption type="string" value="temp" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.HonoredLineManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.HonoredLineManuscriptID" />
                      <else idref="LineManuScript.ManuScriptIDBroker" />
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineManuScript.HonoredLineManuscriptID" effect="setValue" />
                  </affects>
                </rules>
              </public>
              <public id="LineManuScript.MasterManuScriptID" type="string" comment="" path="MasterManuScriptID">
                <definition>
                  <caption type="string" value="temp" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;masterID&quot;]/@value">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="LineManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="LineManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <private id="LineManuScript.SetPolicyManuscriptID" type="string" comment="" alwaysRun="1">
                <affects>
                  <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" effect="setValue" />
                </affects>
                <value idref="LineManuScript.PagesManuscriptID" />
              </private>
              <private id="LineManuScript.SetPolicyManuscriptIDCPP" type="string" comment="" alwaysRun="1">
                <affects>
                  <reference idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" effect="setValue" />
                </affects>
                <value idref="LineManuScript.CPPManuscriptID" />
              </private>
              <public id="LineManuScript.HonoredControlManuscriptID" type="string" comment="" path="HonoredControlManuscriptID" alwaysRun="1">
                <rules>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LineInput.HonorRates" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="PolicyOutputNonShredded.CurrentTransactionDate" type="date" />
                            <operand idref="PolicyInput.EffectiveDate" type="date" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="" />
                    </if>
                  </misc>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Honored Control Manuscript ID" />
                </definition>
              </public>
              <public id="LineManuScript.HonoredLineManuscriptID" path="HonoredLineManuscriptID" type="string" alwaysRun="1">
                <definition>
                  <caption value="Honored Line Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LineInput.HonorRates" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="" />
                    </if>
                  </misc>
                </rules>
              </public>
              <private id="LineManuScript.ManuScriptIDBroker" type="string" comment="" caption="Line Manu Script Manu Script ID Broker">
                <value>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LineManuScript.ManuScriptIDBrokerByCarrier" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="LineManuScript.ManuScriptIDBrokerByCarrier" />
                    <else idref="LineManuScript.ManuScriptIDBrokerByNonCarrier" />
                  </if>
                </value>
              </private>
              <private id="LineManuScript.LineOfBusinessKeyByCarrier" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="Carrier" />
                    <argument op="add" idref="LineOutput.Type" type="string" />
                  </calculation>
                </value>
              </private>
              <private id="LineManuScript.ManuScriptIDBrokerByCarrier" type="string" comment="" caption="Line Manu Script Manu Script ID Broker">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.LineOfBusinessKeyByCarrier" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.StateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LineManuScript.RateEffectiveDateBroker" type="date" caption="temp">
                <value>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LineManuScript.ManuScriptIDBrokerByCarrier" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="LineManuScript.RateEffectiveDateBrokerByCarrier" />
                    <else idref="LineManuScript.RateEffectiveDateBrokerByNonCarrier" />
                  </if>
                </value>
              </private>
              <private id="LineManuScript.RateEffectiveDate" type="date" caption="temp">
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.HonoredRateEffectiveDate" type="date" />
                            <operand type="string" value="1899-12-30" />
                          </comparison>
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="LineManuScript.HonoredRateEffectiveDate" type="date" />
                          <operand type="int" value="0" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="LineManuScript.HonoredRateEffectiveDate" />
                    <else idref="LineManuScript.RateEffectiveDateBroker" />
                  </if>
                </value>
                <affects>
                  <reference idref="LineManuScript.HonoredRateEffectiveDate" effect="setValue" />
                </affects>
              </private>
              <public id="LineManuScript.HonoredRateEffectiveDate" path="HonoredLineRateEffectiveDate" type="date" alwaysRun="1">
                <definition>
                  <caption value="Line Manu Script Honored Rate Effective Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
                <rules>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LineInput.HonorRates" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="" />
                    </if>
                  </misc>
                </rules>
              </public>
              <private id="LineManuScript.ManuScriptIDBrokerByNonCarrier" type="string" comment="" caption="Line Manu Script Manu Script ID Broker">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.StateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <public id="LineManuScript.ManuscriptIDCPPTable" type="string" comment="" path="ManuscriptIDCPPTable">
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="ManuscriptsCPP" />
                    </calculation>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Manuscript ID CPP Table" />
                </definition>
              </public>
              <object id="FormsManuscript">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="FormsManuscript.ALFormsManuScriptID" type="string" comment="" path="ALFormsManuScriptID">
                  <definition>
                    <caption value="AL Forms Manuscript ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsAL">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.ALFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="AL" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.ARFormsManuScriptID" type="string" comment="" path="ARFormsManuScriptID">
                  <definition>
                    <caption value="AR Forms Manuscript ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsAR">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.ARFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="AR" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.AKFormsManuScriptID" type="string" comment="" path="AKFormsManuScriptID">
                  <definition>
                    <caption value="AK Forms Manuscript ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsAK">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.AKFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="AK" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.AZFormsManuScriptID" type="string" comment="" path="AZFormsManuScriptID">
                  <definition>
                    <caption value="AZ Forms Manuscript ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsAZ">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.AZFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="AZ" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MultiStateFormsManuScriptID" type="string" comment="" path="MultiStateFormsManuScriptID">
                  <definition>
                    <caption value="Multi State Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMultiState">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MultiStateFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="US" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <object id="FormsManuscriptPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="FormsManuscriptPrivate.CalculateForms" caption="" type="boolean" alwaysRun="1">
                    <value>
                      <comparison compare="eq">
                        <operand idref="LineInput.HonorRates" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.LineOfBusinessKeyForms" type="string">
                    <value>
                      <calculation>
                        <argument op="eq" type="string" value="Carrier" />
                        <argument op="add" idref="LineOutput.Type" type="string" />
                        <argument op="add" type="string" value="Forms" />
                      </calculation>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsAK" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationAK" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.AKFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsAL" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationAL" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.ALFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsAR" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationAR" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.ARFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsAZ" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationAZ" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.AZFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsCA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationCA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.CAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsCT" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationCT" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.CTFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsDC" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationDC" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.DCFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsDE" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationDE" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.DEFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsFL" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationFL" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.FLFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsGA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationGA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.GAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsHI" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationHI" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.HIFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsIL" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationIL" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.ILFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsIN" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationIN" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.INFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsIA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationIA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.IAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsKS" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationKS" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.KSFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsKY" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationKY" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.KYFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsCO" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationCO" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.COFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsID" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationID" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.IDFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsLA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationLA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.LAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMI" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationMI" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MIFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMO" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationMO" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MOFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMN" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationMN" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MNFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationMA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsME" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationME" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MEFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMultiState" caption="" type="boolean">
                    <value>
                      <comparison compare="or">
                        <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="FormsManuscript.MultiStateFormsManuScriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMT" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationMT" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MTFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsNC" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationNC" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NCFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsND" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationND" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NDFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMD" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationMD" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MDFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsMS" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationMS" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.MSFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsNE" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationNE" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NEFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsNH" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationNH" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NHFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsNJ" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationNJ" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NJFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsNM" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationNM" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NMFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsNV" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationNV" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NVFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsNY" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationNY" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.NYFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsOK" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationOK" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.OKFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsOR" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationOR" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.ORFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsOH" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationOH" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.OHFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsPA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationPA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.PAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsRI" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationRI" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.RIFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsSC" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationSC" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.SCFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsSD" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationSD" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.SDFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsTN" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationTN" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.TNFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsTX" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationTX" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.TXFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsUT" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationUT" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.UTFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsVA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationVA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.VAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsVT" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationVT" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.VTFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsWA" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationWA" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.WAFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsWI" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationWI" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.WIFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsWV" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationWV" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.WVFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.CalculateFormsWY" caption="" type="boolean">
                    <value>
                      <comparison compare="and">
                        <operand idref="AccountPrivate.IsAnyLocationWY" type="boolean" />
                        <comparison compare="or">
                          <operand idref="FormsManuscriptPrivate.CalculateForms" type="boolean" />
                          <comparison compare="eq">
                            <operand idref="FormsManuscript.WYFormsManuScriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.ManuscriptVersion" type="string" comment="" caption="Manuscript Version">
                    <value>
                      <request verb="ManuScriptBroker.listKeyValuesRq" get="keyValues/keyValue/@value">
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default value="" />
                        <nameValues>
                          <nameValue value="version" name="keyName" dataType="attribute" />
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="ID" name="name" dataType="attribute" />
                              <nameValue idref="LineManuScript.FormsMasterManuscriptID" name="value" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.ManuscriptVersionMinimum" type="string" comment="" caption="Manuscript Version">
                    <value>
                      <calculation>
                        <argument op="eq" idref="FormsManuscriptPrivate.ManuscriptVersionBase" type="string" />
                        <argument op="add" type="string" value="." />
                        <argument op="add" idref="FormsManuscriptPrivate.ManuscriptVersionRelease" type="string" />
                        <argument op="add" type="string" value="." />
                      </calculation>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.ManuscriptVersionRelease" type="string" comment="" caption="Manuscript Version">
                    <value>
                      <subString subStrMethod="delimitedList">
                        <sourceString idref="FormsManuscriptPrivate.ManuscriptVersion" />
                        <separatorChar value="." />
                        <ordPosition value="2" />
                      </subString>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.ManuscriptVersionBase" type="string" comment="" caption="Manuscript Version">
                    <value>
                      <subString subStrMethod="delimitedList">
                        <sourceString idref="FormsManuscriptPrivate.ManuscriptVersion" />
                        <separatorChar value="." />
                        <ordPosition value="1" />
                      </subString>
                    </value>
                  </private>
                  <private id="FormsManuscriptPrivate.ManuscriptVersionMaximum" type="string" comment="" caption="Manuscript Version">
                    <value>
                      <calculation>
                        <argument op="eq" idref="FormsManuscriptPrivate.ManuscriptVersionBase" type="string" />
                        <argument op="add" type="string" value="." />
                        <argument op="add" idref="FormsManuscriptPrivate.ManuscriptVersionRelease" type="string" />
                        <argument op="add" type="string" value=".Z" />
                      </calculation>
                    </value>
                  </private>
                </object>
                <public id="FormsManuscript.CAFormsManuScriptID" type="string" comment="" path="CAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptCA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsCA">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.CAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="CA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.COFormsManuScriptID" type="string" comment="" path="COFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptCO Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsCO">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.COFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="CO" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.CTFormsManuScriptID" type="string" comment="" path="CTFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptCT Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsCT">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.CTFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="CT" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.DEFormsManuScriptID" type="string" comment="" path="DEFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptDE Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsDE">
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.DEFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="DE" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.DCFormsManuScriptID" type="string" comment="" path="DCFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptDC Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsDC">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.DCFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="DC" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.FLFormsManuScriptID" type="string" comment="" path="FLFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptFL Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsFL">
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.FLFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="FL" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.GAFormsManuScriptID" type="string" comment="" path="GAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptGA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsGA">
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.GAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="GA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.HIFormsManuScriptID" type="string" comment="" path="HIFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptHI Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsHI">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.HIFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="HI" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.IDFormsManuScriptID" type="string" comment="" path="IDFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptID Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsID">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.IDFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="ID" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.ILFormsManuScriptID" type="string" comment="" path="ILFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptIL Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsIL">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.ILFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="IL" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.INFormsManuScriptID" type="string" comment="" path="INFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptIN Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsIN">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.INFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="IN" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.IAFormsManuScriptID" type="string" comment="" path="IAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptIA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsIA">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.IAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="IA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.KSFormsManuScriptID" type="string" comment="" path="KSFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptKS Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsKS">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.KSFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="KS" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.KYFormsManuScriptID" type="string" comment="" path="KYFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptKY Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsKY">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.KYFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="KY" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.LAFormsManuScriptID" type="string" comment="" path="LAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptLA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsLA">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.LAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="LA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MAFormsManuScriptID" type="string" comment="" path="MAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptMA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMA">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="MA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MDFormsManuScriptID" type="string" comment="" path="MDFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptMD Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMD">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MDFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="MD" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MEFormsManuScriptID" type="string" comment="" path="MEFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptME Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsME">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MEFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="ME" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MIFormsManuScriptID" type="string" comment="" path="MIFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptMI Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMI">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MIFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="MI" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MNFormsManuScriptID" type="string" comment="" path="MNFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptMN Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMN">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MNFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="MN" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MSFormsManuScriptID" type="string" comment="" path="MSFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptMS Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMS">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MSFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="MS" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MOFormsManuScriptID" type="string" comment="" path="MOFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptMO Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMO">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MOFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="MO" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.MTFormsManuScriptID" type="string" comment="" path="MTFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptMT Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsMT">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.MTFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="MT" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NEFormsManuScriptID" type="string" comment="" path="NEFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptNE Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsNE">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NEFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="NE" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NVFormsManuScriptID" type="string" comment="" path="NVFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptNV Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsNV">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NVFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="NV" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NHFormsManuScriptID" type="string" comment="" path="NHFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptNH Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsNH">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NHFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="NH" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NJFormsManuScriptID" type="string" comment="" path="NJFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptNJ Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsNJ">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NJFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="NJ" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NMFormsManuScriptID" type="string" comment="" path="NMFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptNM Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsNM">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NMFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="NM" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NYFormsManuScriptID" type="string" comment="" path="NYFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptNY Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsNY">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NYFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="NY" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NCFormsManuScriptID" type="string" comment="" path="NCFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptNC Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsNC">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NCFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="NC" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.NDFormsManuScriptID" type="string" comment="" path="NDFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptND Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsND">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.NDFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="ND" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.OHFormsManuScriptID" type="string" comment="" path="OHFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptOH Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsOH">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.OHFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="OH" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.OKFormsManuScriptID" type="string" comment="" path="OKFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptOK Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsOK">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.OKFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="OK" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.ORFormsManuScriptID" type="string" comment="" path="ORFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptOR Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsOR">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.ORFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="OR" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.PAFormsManuScriptID" type="string" comment="" path="PAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptPA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsPA">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.PAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="PA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.RIFormsManuScriptID" type="string" comment="" path="RIFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptRI Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsRI">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.RIFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="RI" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.SCFormsManuScriptID" type="string" comment="" path="SCFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptSC Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsSC">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.SCFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="SC" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.SDFormsManuScriptID" type="string" comment="" path="SDFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptSD Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsSD">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.SDFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="SD" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.TNFormsManuScriptID" type="string" comment="" path="TNFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptTN Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsTN">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.TNFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="TN" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.TXFormsManuScriptID" type="string" comment="" path="TXFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptTX Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsTX">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.TXFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="TX" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.UTFormsManuScriptID" type="string" comment="" path="UTFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptUT Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsUT">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.UTFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="UT" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.VTFormsManuScriptID" type="string" comment="" path="VTFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptVT Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsVT">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.VTFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="VT" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.VAFormsManuScriptID" type="string" comment="" path="VAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptVA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsVA">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.VAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="VA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.WAFormsManuScriptID" type="string" comment="" path="WAFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptWA Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsWA">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.WAFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="WA" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.WVFormsManuScriptID" type="string" comment="" path="WVFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptWV Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsWV">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.WVFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="WV" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.WIFormsManuScriptID" type="string" comment="" path="WIFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptWI Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsWI">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.WIFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="WI" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
                <public id="FormsManuscript.WYFormsManuScriptID" type="string" comment="" path="WYFormsManuScriptID">
                  <definition>
                    <caption value="Forms ManuscriptWY Forms Manu Script ID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <request verb="ManuScriptBroker.listRq" get="items/item/@id" validRef="FormsManuscriptPrivate.CalculateFormsWY">
                        <responsePath value="" />
                        <onFailure value="" />
                        <modifySession value="" />
                        <usesSession value="" />
                        <default idref="FormsManuscript.WYFormsManuScriptID" />
                        <nameValues>
                          <nameValue value="" name="keys" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.LineOfBusinessKeyForms" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="WY" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="FormsManuscriptPrivate.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValues>
                      </request>
                    </value>
                  </rules>
                </public>
              </object>
              <public id="LineManuScript.FormsMasterManuscriptID" type="string" comment="" path="FormsMasterManuscriptID">
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.FormsMasterManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.FormsMasterManuscriptID" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                          <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                          <fieldRef value="Value" />
                          <keyRef type="string" value="FormsMaster" name="Manuscript" />
                          <keyRef idref="LineManuScript.StateKey" type="string" name="State" />
                          <keyRef idref="LineManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Forms Master Manuscript ID" />
                </definition>
              </public>
              <public id="LineManuScript.LineProductManuscriptID" path="LineProductManuscriptID" type="string">
                <definition>
                  <caption value="Line Product Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.LineProductManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.LineProductManuscriptID" />
                      <else idref="LineManuScript.LineProductManuscriptIDBroker" />
                    </if>
                  </value>
                </rules>
              </public>
              <private id="LineManuScript.LineProductManuscriptIDBroker" type="string" caption="temp">
                <value>
                  <request verb="CustomServer.expandRequestsRq" get="server/requests/item/@id">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="dataRequests" dataType="element">
                        <nameValue value="" name="ManuScriptBroker.listRq" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="lob" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductLOBKeyByCarrier" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="productCode" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="Product" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="state" name="name" dataType="attribute" />
                              <nameValue value="=" name="operator" dataType="attribute" />
                              <nameValue value="US-INH" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&gt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.ManuscriptVersionMinimum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue value="version" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.ManuscriptVersionMaximum" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="key" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="&lt;=" name="operator" dataType="attribute" />
                              <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                            </nameValue>
                            <nameValue value="" name="sort" dataType="element">
                              <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                              <nameValue value="descending" name="direction" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValue>
                      </nameValue>
                      <nameValue value="" name="xsltRequests" dataType="element">
                        <nameValue value="http://www.w3.org/1999/XSL/Transform" name="xmlns:xsl" dataType="attribute" />
                        <nameValue value="" name="xsl:for-each" dataType="element">
                          <nameValue value="//item" name="select" dataType="attribute" />
                          <nameValue value="" name="xsl:sort" dataType="element">
                            <nameValue value="number" name="data-type" dataType="attribute" />
                            <nameValue value="substring-before(keys/key[@name='version']/@value,'.')" name="select" dataType="attribute" />
                            <nameValue value="descending" name="order" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:sort" dataType="element">
                            <nameValue value="number" name="data-type" dataType="attribute" />
                            <nameValue value="substring-before(substring-after(keys/key[@name='version']/@value,'.'),'.')" name="select" dataType="attribute" />
                            <nameValue value="descending" name="order" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:sort" dataType="element">
                            <nameValue value="number" name="data-type" dataType="attribute" />
                            <nameValue value="substring-before(substring-after(substring-after(keys/key[@name='version']/@value,'.'),'.'),'.')" name="select" dataType="attribute" />
                            <nameValue value="descending" name="order" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:sort" dataType="element">
                            <nameValue value="number" name="data-type" dataType="attribute" />
                            <nameValue value="substring-after(substring-after(substring-after(keys/key[@name='version']/@value,'.'),'.'),'.')" name="select" dataType="attribute" />
                            <nameValue value="descending" name="order" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:copy-of" dataType="element">
                            <nameValue value="." name="select" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <public id="LineManuScript.FormsControlManuscriptID" type="string" comment="" path="FormsControlManuscriptID">
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.FormsControlManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.FormsControlManuscriptID" />
                      <else idref="LineManuScript.FormsControlManuscriptIDBroker" />
                    </if>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Line Manu Script Forms Control Manuscript ID" />
                </definition>
              </public>
              <private id="LineManuScript.FormsControlManuscriptIDBroker" type="string" caption="Forms Control Manuscript ID Broker">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="key" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.FormsLineOfBusinessKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.LineProductManuscriptEffectiveDate" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="productCode" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue value="FormsControl" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LineManuScript.ManuscriptVersion" type="string" comment="" caption="Manuscript Version">
                <value>
                  <request verb="ManuScriptBroker.listKeyValuesRq" get="keyValues/keyValue/@value">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="version" name="keyName" dataType="attribute" />
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="ID" name="name" dataType="attribute" />
                          <nameValue idref="LineManuScript.ManuscriptVersionID" name="value" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LineManuScript.ManuscriptVersionMinimum" type="string" comment="" caption="Manuscript Version">
                <value>
                  <calculation>
                    <argument op="eq" idref="LineManuScript.ManuscriptVersionBase" type="string" />
                    <argument op="add" type="string" value="." />
                    <argument op="add" idref="LineManuScript.ManuscriptVersionRelease" type="string" />
                    <argument op="add" type="string" value="." />
                  </calculation>
                </value>
              </private>
              <private id="LineManuScript.ManuscriptVersionRelease" type="string" comment="" caption="Manuscript Version">
                <value>
                  <subString subStrMethod="delimitedList">
                    <sourceString idref="LineManuScript.ManuscriptVersion" />
                    <separatorChar value="." />
                    <ordPosition value="2" />
                  </subString>
                </value>
              </private>
              <private id="LineManuScript.ManuscriptVersionBase" type="string" comment="" caption="Manuscript Version">
                <value>
                  <subString subStrMethod="delimitedList">
                    <sourceString idref="LineManuScript.ManuscriptVersion" />
                    <separatorChar value="." />
                    <ordPosition value="1" />
                  </subString>
                </value>
              </private>
              <private id="LineManuScript.ManuscriptVersionMaximum" type="string" comment="" caption="Manuscript Version">
                <value>
                  <calculation>
                    <argument op="eq" idref="LineManuScript.ManuscriptVersionBase" type="string" />
                    <argument op="add" type="string" value=".Z" />
                  </calculation>
                </value>
              </private>
              <private id="LineManuScript.FormsLineOfBusinessKey" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="Carrier" />
                    <argument op="add" idref="LineOutput.Type" type="string" />
                    <argument op="add" type="string" value="Forms" />
                  </calculation>
                </value>
              </private>
              <private id="LineManuScript.LineProductLOBKeyByCarrier" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="Carrier" />
                    <argument op="add" idref="LineOutput.Type" type="string" />
                  </calculation>
                </value>
              </private>
              <private id="LineManuScript.ManuscriptVersionID" type="string" comment="" caption="Manuscript Version">
                <value idref="GlobalOutput.MasterManuScriptID" />
              </private>
              <private id="LineManuScript.LineProductManuscriptEffectiveDate" type="string" caption="temp">
                <value>
                  <if>
                    <condition>
                      <comparison compare="le">
                        <operand idref="PolicyInput.EffectiveDate" type="date" />
                        <operand idref="LineManuScript.PolicyManuscriptEffectiveDate" type="string" />
                      </comparison>
                    </condition>
                    <then idref="LineManuScript.PolicyManuscriptEffectiveDate" />
                    <else idref="PolicyInput.EffectiveDate" />
                  </if>
                </value>
              </private>
              <private id="LineManuScript.PolicyManuscriptEffectiveDate" type="string" comment="" caption="Manuscript Effective Date">
                <value>
                  <request verb="ManuScriptBroker.listKeyValuesRq" get="keyValues/keyValue/@value">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="LineManuScript.EffectiveDateKeyName" name="keyName" dataType="attribute" />
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="ID" name="name" dataType="attribute" />
                          <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="value" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LineManuScript.EffectiveDateKey" type="date">
                <value idref="PolicyInput.EffectiveDate" />
              </private>
              <private id="LineManuScript.EffectiveDateKeyName" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                        <operand type="string" value="Renew" />
                      </comparison>
                    </condition>
                    <then idref="ManuScriptKeys.effectiveDateRenewal" />
                    <else idref="ManuScriptKeys.effectiveDateNew" />
                  </if>
                </value>
              </private>
              <private id="LineManuScript.LineOfBusinessKey" type="string">
                <value idref="LineOutput.Type" />
              </private>
              <private id="LineManuScript.StateKey" type="string">
                <value idref="PolicyInput.PrimaryRatingState" />
              </private>
              <public id="LineManuScript.ImportManuscriptID" type="string" comment="" path="ImportManuscriptID">
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.HonorRates" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.ImportManuscriptID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.ImportManuscriptID" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                          <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                          <fieldRef value="Value" />
                          <keyRef type="string" value="Import" name="Manuscript" />
                          <keyRef idref="LineManuScript.StateKey" type="string" name="State" />
                          <keyRef idref="LineManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                  <caption value="Import Manuscript ID" />
                </definition>
              </public>
              <private id="LineManuScript.LineRemovalManuScriptID" caption="" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LinePrivate.LineRemovalAvailable" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="LineManuScript.ManuscriptIDTable" />
                        <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                        <fieldRef value="Value" />
                        <onFailure idref="Spacer" />
                        <keyRef type="string" value="LineRemoval" name="Manuscript" />
                        <keyRef idref="LineManuScript.StateKey" type="string" name="State" />
                        <keyRef idref="LineManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </private>
              <private id="LineManuScript.RateEffectiveDateBrokerByCarrier" type="date" caption="temp">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;effectiveDateNew&quot;]/@value">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.LineOfBusinessKeyByCarrier" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.StateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LineManuScript.RateEffectiveDateBrokerByNonCarrier" type="date" caption="temp">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;effectiveDateNew&quot;]/@value">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.StateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
            </object>
            <object id="WorkersCompensationLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="WorkersCompensationLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="WorkersCompensationLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="WorkersCompensationLinePrivate.LOBCode" type="string">
                <value value="WorkersCompensation" />
              </private>
              <private id="WorkersCompensationLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="WorkersCompensationLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <private id="WorkersCompensationLinePrivate.StateManuScriptID" type="string" caption="temp">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="WorkersCompensationLinePrivate.LOBCode" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue value="US" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="WorkersCompensationLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="WorkersCompensationLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <object id="InlandMarineLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="InlandMarineLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="InlandMarineLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="InlandMarineLinePrivate.LOBCode" type="string">
                <value value="InlandMarine" />
              </private>
              <private id="InlandMarineLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="InlandMarineLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <private id="InlandMarineLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="InlandMarineLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <object id="CrimeLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CrimeLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="CrimeLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="CrimeLinePrivate.LOBCode" type="string">
                <value value="Crime" />
              </private>
              <private id="CrimeLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="CrimeLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <private id="CrimeLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="CrimeLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <private id="LinePrivate.ShowPDF" type="boolean">
              <value value="0" />
            </private>
            <private id="LinePrivate.ShowRateDetail" type="boolean">
              <value>
                <comparison compare="ne">
                  <operand idref="LineOutput.Description" type="string" />
                  <operand idref="PropertyLinePrivate.LOBCode" type="string" />
                </comparison>
              </value>
            </private>
            <object id="CommercialBusinessOwnersPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialBusinessOwnersPrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="CommercialBusinessOwnersPrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="CommercialBusinessOwnersPrivate.LOBCode" type="string">
                <value value="BusinessOwners" />
              </private>
              <private id="CommercialBusinessOwnersPrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="CommercialBusinessOwnersPrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <private id="CommercialBusinessOwnersPrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="CommercialBusinessOwnersPrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <private id="LinePrivate.ShowBuildingButton" type="boolean" comment="">
              <value>
                <comparison compare="and">
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand idref="PropertyLinePrivate.LOBCode" type="string" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand idref="CommercialBusinessOwnersPrivate.LOBCode" type="string" />
                    </comparison>
                  </comparison>
                  <comparison compare="gt">
                    <operand idref="OccupancyGroup.Count" type="int" />
                    <operand type="int" value="0" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.ShowGeneralLiabilityButtons" type="boolean" comment="">
              <value>
                <comparison compare="eq">
                  <operand idref="LineOutput.Type" type="string" />
                  <operand idref="GeneralLiabilityLinePrivate.LOBCode" type="string" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.ShowOccupancyButton" type="boolean">
              <value>
                <comparison compare="or">
                  <operand idref="LinePrivate.ShowPropertyButtons" type="boolean" />
                  <operand idref="LinePrivate.ShowGeneralLiabilityButtons" type="boolean" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.ShowPropertyButtons" type="boolean" comment="">
              <value>
                <comparison compare="eq">
                  <operand idref="LineOutput.Type" type="string" />
                  <operand idref="PropertyLinePrivate.LOBCode" type="string" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.LinePremium" caption="" type="float" />
            <private id="LinePrivate.ShowMiscEndorsements" type="boolean" comment="">
              <value>
                <select idref="LineOutput.Type">
                  <case idref="True" type="int" select="CommercialAuto" />
                  <case idref="True" type="int" select="GeneralLiability" />
                  <case idref="True" type="int" select="Property" />
                  <case idref="True" type="int" select="InlandMarine" />
                  <case idref="True" type="int" select="InlandMarineAAIS" />
                  <case idref="True" type="int" select="Crime" />
                  <case idref="True" type="int" select="BusinessOwners" />
                  <case idref="True" type="int" select="CommercialUmbrella" />
                  <otherwise idref="False" type="int" />
                </select>
              </value>
            </private>
            <private id="LinePrivate.CovMiscPremiumSum" caption="" type="float">
              <value>
                <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="CovMiscellaneous">
                  <reference idref="CovMiscellaneousOutput.Premium" type="float" />
                </iterator>
              </value>
            </private>
            <private id="LinePrivate.ShowLineEditButton" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                    <operand idref="LineInput.Selected" type="boolean" />
                  </comparison>
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                </comparison>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <operand idref="PolicyPrivate.IsNotInAudit" type="boolean" />
                      </comparison>
                      <operand idref="PolicyPrivate.IsNotInReporting" type="boolean" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="LinePrivate.ShowLineSelection" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                    <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                  </comparison>
                  <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="LineOutput.LineID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="LinePrivate.SetHonoredManuscriptID" caption="" type="string" alwaysRun="1">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LineInput.HonorRates" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="LinePrivate.AddHonoredManuscriptRecord" />
                </if>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="LineInput.HonorRates" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="gt">
                        <operand idref="LinePrivate.HonoredRatingCount" type="int" />
                        <operand type="int" value="0" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LinePrivate.RemoveHonoredManuscriptRecord" />
                </if>
              </misc>
              <affects>
                <reference idref="LineManuScript.HonoredRateEffectiveDate" effect="postEffect" />
                <reference idref="LineManuScript.HonoredLineManuscriptID" effect="postEffect" />
                <reference idref="LineManuScript.HonoredControlManuscriptID" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.SetHonoredControlManuscriptID" caption="" type="string" alwaysRun="1">
              <affects>
                <reference idref="LineManuScript.HonoredControlManuscriptID" effect="setValue" />
              </affects>
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="LineInput.HonorRates" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LineManuScript.HonoredControlManuscriptID" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LineManuScript.ControlManuscriptID" />
                  <else idref="LineManuScript.HonoredControlManuscriptID" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.SetHonoredLineManuscriptID" caption="" type="string" alwaysRun="1">
              <affects>
                <reference idref="LineManuScript.HonoredLineManuscriptID" effect="setValue" />
              </affects>
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="LineInput.HonorRates" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="or">
                        <comparison compare="eq">
                          <operand idref="LineManuScript.HonoredLineManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LineManuScript.HonoredLineManuscriptID" type="string" />
                          <operand type="string" value="0" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LineManuScript.ManuScriptID" />
                  <else idref="LineManuScript.HonoredLineManuscriptID" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.AddHonoredManuscriptRecord" caption="" type="string" alwaysRun="1">
              <value>
                <iterator type="string" scope="all" action="sum" idref="Location">
                  <reference idref="LocationPrivate.AddHonoredManuscriptIfNeeded" type="string" />
                </iterator>
              </value>
              <affects>
                <reference idref="LinePrivate.SetHonoredControlManuscriptID" effect="postEffect" />
                <reference idref="LinePrivate.SetHonoredLineManuscriptID" effect="postEffect" />
                <reference idref="LinePrivate.SetHonoredLineRateEffectiveDate" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.HonoredRatingCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="HonoredManuscripts" />
              </value>
            </private>
            <private id="LinePrivate.RemoveHonoredManuscriptRecord" caption="" type="string">
              <value>
                <iterator type="string" scope="all" action="sum" idref="HonoredManuscripts">
                  <reference idref="HonoredManuscriptsPrivate.DeleteObjectRecord" type="string" />
                </iterator>
              </value>
            </private>
            <private id="LinePrivate.SetHonoredLineRateEffectiveDate" caption="" type="date" alwaysRun="1">
              <affects>
                <reference idref="LineManuScript.HonoredRateEffectiveDate" effect="setValue" />
              </affects>
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="LineInput.HonorRates" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="or">
                        <comparison compare="eq">
                          <operand idref="LineManuScript.HonoredRateEffectiveDate" type="date" />
                          <operand type="string" value="1899-12-30" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LineManuScript.HonoredRateEffectiveDate" type="date" />
                          <operand type="int" value="0" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LineManuScript.RateEffectiveDate" />
                  <else idref="LineManuScript.HonoredRateEffectiveDate" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.CovMiscPremiumFESumXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="coverage[Type='Miscellaneous'][Indicator=1]" />
                </calculation>
              </value>
            </private>
            <private id="LinePrivate.ClearInReinsuranceDialogMode" caption="" type="string" alwaysRun="1">
              <value>
                <iterator type="string" scope="all" action="sum" idref="Reinsurance">
                  <reference idref="ReinsurancePrivate.SetReinsuranceAddModeFalse" type="boolean" />
                  <reference idref="ReinsurancePrivate.SetReinsuranceDialogModeFalse" type="boolean" />
                </iterator>
              </value>
            </private>
            <private id="LinePrivate.NumReinsuranceInDialogMode" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Reinsurance">
                  <where>
                    <comparison compare="eq">
                      <operand idref="ReinsuranceOutputNonShredded.ReinsuranceDialogMode" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <object id="AllLinesPrivate">
              <private id="AllLinesPrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AllLinesPrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="AllLinesPrivate.LOBCode" type="string">
                <value value="All" />
              </private>
              <private id="AllLinesPrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="AllLinesPrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
            <private id="LinePrivate.IsEligible" type="boolean" comment="if a policy doesnt meet eligibility, then it is declined" caption="Is Eligible">
              <misc>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LinePrivate.IsEligibleCheck" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
              <value idref="True" />
            </private>
            <private id="LinePrivate.IsBindable" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value idref="True" />
              <misc>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LinePrivate.IsBindableCheck" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="LinePrivate.SetSelectedLineDescription" type="string" comment="" caption="Line Private Set Selected Line Description">
              <value idref="LineOutput.Type" />
              <affects>
                <reference idref="SelectedLineInput.LineDescription" effect="setValue" />
              </affects>
            </private>
            <private id="LinePrivate.IsEligibleCheck" type="boolean" caption="if a policy doesn?t meet eligibility, then it is declined">
              <value idref="True" />
            </private>
            <private id="LinePrivate.IsBindableCheck" type="boolean" caption="bindable policy can be written without authority granted by an underwriter">
              <value idref="True" />
            </private>
            <private id="LinePrivate.IsEligibleExternal" caption="Is Eligible" type="string" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <select idref="LineOutput.Type">
                  <case idref="LinePrivate.IsEligibleCommercialAutoExternal" type="boolean" select="CommercialAuto" />
                  <case idref="LinePrivate.IsEligibleGeneralLiabilityExternal" type="boolean" select="GeneralLiability" />
                  <case idref="LinePrivate.IsEligiblePropertyExternal" type="boolean" select="Property" />
                  <case idref="LinePrivate.IsEligibleWorkersCompensationExternal" type="boolean" select="WorkersCompensation" />
                  <case idref="LinePrivate.IsEligibleInlandMarineExternal" type="boolean" select="InlandMarine" />
                  <case idref="LinePrivate.IsEligibleCrimeExternal" type="boolean" select="Crime" />
                  <case idref="LinePrivate.IsEligibleBusinessOwnersExternal" type="boolean" select="BusinessOwners" />
                  <case idref="LinePrivate.IsEligibleCommercialUmbrellaExternal" type="boolean" select="CommercialUmbrella" />
                  <case idref="LinePrivate.IsEligibleCommercialAutoMAExternal" type="boolean" select="CommercialAutoMA" />
                  <case idref="LinePrivate.IsEligibleInlandMarineAAISExternal" type="boolean" select="InlandMarineAAIS" />
                  <otherwise idref="True" type="int" />
                </select>
              </value>
            </private>
            <private id="LinePrivate.IsBindableExternal" type="string" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <select idref="LineOutput.Type">
                  <case idref="LinePrivate.IsBindableCommercialAutoExternal" type="boolean" select="CommercialAuto" />
                  <case idref="LinePrivate.IsBindableGeneralLiabilityExternal" type="boolean" select="GeneralLiability" />
                  <case idref="LinePrivate.IsBindablePropertyExternal" type="boolean" select="Property" />
                  <case idref="LinePrivate.IsBindableWorkersCompensationExternal" type="boolean" select="WorkersCompensation" />
                  <case idref="LinePrivate.IsBindableInlandMarineExternal" type="boolean" select="InlandMarine" />
                  <case idref="LinePrivate.IsBindableCrimeExternal" type="boolean" select="Crime" />
                  <case idref="LinePrivate.IsBindableBusinessOwnersExternal" type="boolean" select="BusinessOwners" />
                  <case idref="LinePrivate.IsBindableCommericalUmbrellaExternal" type="boolean" select="CommercialUmbrella" />
                  <case idref="LinePrivate.IsBindableCommercialAutoMAExternal" type="boolean" select="CommercialAutoMA" />
                  <case idref="LinePrivate.IsBindableInlandMarineAAISExternal" type="boolean" select="InlandMarineAAIS" />
                  <otherwise idref="True" type="int" />
                </select>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleGeneralLiabilityExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='GeneralLiability']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleCommercialAutoExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='CommercialAuto']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleInlandMarineExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='InlandMarine']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleWorkersCompensationExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='WorkersCompensation']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleBusinessOwnersExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='BusinessOwners']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligiblePropertyExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='Property']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleCrimeExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='Crime']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindableGeneralLiabilityExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='GeneralLiability']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindableCommercialAutoExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='CommercialAuto']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindableInlandMarineExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='InlandMarine']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindableWorkersCompensationExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='WorkersCompensation']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindableBusinessOwnersExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='BusinessOwners']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindablePropertyExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='Property']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindableCrimeExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='Crime']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.LineTransactionCommit" caption="" type="string" />
            <private id="LinePrivate.DoTransactionCommit" caption="" type="string">
              <value>
                <external>
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.LineTransactionCommit" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.DoTransactionSetup" caption="" type="string">
              <value>
                <external>
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.LineTransactionSetup" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.LineTransactionSetup" caption="" type="string" />
            <private id="LinePrivate.IsBindableCommericalUmbrellaExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='CommercialUmbrella']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsBindableCommercialAutoMAExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='CommercialAutoMA']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleCommercialAutoMAExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='CommercialAutoMA']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleCommercialUmbrellaExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='CommercialUmbrella']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <object id="CommercialAutoMALinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialAutoMALinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="CommercialAutoMALinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="CommercialAutoMALinePrivate.LOBCode" type="string">
                <value value="CommercialAutoMA" />
              </private>
              <private id="CommercialAutoMALinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="CommercialAutoMALinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="CommercialAutoMALinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="CommercialAutoMALinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="CommercialUmbrellaLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialUmbrellaLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="CommercialUmbrellaLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="CommercialUmbrellaLinePrivate.LOBCode" type="string">
                <value value="CommercialUmbrella" />
              </private>
              <private id="CommercialUmbrellaLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="CommercialUmbrellaLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="CommercialUmbrellaLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="CommercialUmbrellaLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
            </object>
            <private id="LinePrivate.IsLOBSelectable" caption="" type="boolean">
              <value>
                <comparison compare="ne">
                  <operand idref="LineManuScript.LineProductManuscriptID" type="string" />
                  <operand type="string" value="" />
                </comparison>
              </value>
            </private>
            <object id="BusinessOwnersLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="BusinessOwnersLinePrivate.LOBCode" type="string">
                <value value="BusinessOwners" />
              </private>
              <private id="BusinessOwnersLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="BusinessOwnersLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
            <private id="LinePrivate.ShowOnSchedule" caption="" type="boolean">
              <value>
                <comparison compare="or">
                  <comparison compare="eq">
                    <operand idref="RiskPrivate.BelongsToSelectedLocation" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsAvailable" type="boolean">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                  <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                  <fieldRef value="Value" />
                  <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                  <keyRef idref="LineOutput.Type" type="string" name="Supported" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.ShowLineLayout" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="SelectedLineInput.LineID" type="string" />
                  <operand idref="LineOutput.LineID" type="string" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.Premium" type="float">
              <value idref="LinePrivate.ExternalPremium" />
            </private>
            <private id="LinePrivate.IsPrimaryLine" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyInput.LineOfBusiness" type="string" />
                  <operand idref="LineOutput.Type" type="string" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.ExternalPremium" type="float">
              <value>
                <external>
                  <manuscriptName idref="LineManuScript.MasterManuScriptID" />
                  <referenceField value="LineOutput.Premium" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.ClearManuScriptIDs" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="LineManuScript.HonoredControlManuscriptID" effect="setValue" />
                <reference idref="LineManuScript.FormsMasterManuscriptID" effect="setValue" />
                <reference idref="LineManuScript.FormsControlManuscriptID" effect="setValue" />
                <reference idref="FormsManuscript.AKFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.ALFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.ARFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.AZFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.CAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.COFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.CTFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.DCFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.DEFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.FLFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.GAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.HIFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.IAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.IDFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.ILFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.INFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.KSFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.KYFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.LAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MDFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MEFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MIFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MNFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MOFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MSFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MTFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.MultiStateFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NCFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NDFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NEFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NHFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NJFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NMFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NVFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.NYFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.OHFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.OKFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.ORFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.PAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.RIFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.SCFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.SDFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.TNFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.TXFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.UTFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.VAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.VTFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.WAFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.WIFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.WVFormsManuScriptID" effect="setValue" />
                <reference idref="FormsManuscript.WYFormsManuScriptID" effect="setValue" />
                <reference idref="LineManuScript.PagesManuscriptID" effect="setValue" />
                <reference idref="LineManuScript.HonoredLineManuscriptID" effect="setValue" />
                <reference idref="LineManuScript.HonoredRateEffectiveDate" effect="setValue" />
              </affects>
            </private>
            <private id="LinePrivate.PremiumPostEffect" caption="" type="string" />
            <private id="LinePrivate.PremiumPreEffect" caption="" type="string" />
            <private id="LinePrivate.LineHasPDFRateDetail" caption="" type="boolean">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.PDFRateDetail" />
                  <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                  <fieldRef value="Value" />
                  <keyRef idref="LineOutput.Type" type="string" name="LineOfBusiness" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.RateDetailPageName" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <if>
                  <condition idref="LinePrivate.LineHasPDFRateDetail" />
                  <then value="Pricing" />
                  <else value="RateDetail" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.RateDetailPageSetName" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <if>
                  <condition idref="LinePrivate.LineHasPDFRateDetail" />
                  <then value="MainInterview" />
                  <else value="RateInterview" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.IsBindableFarmExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter&#xD;&#xA;&#xD;&#xA;Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
              <value>
                <external path="data/policy/line[Type='Farm']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleFarmExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined&#xD;&#xA;&#xD;&#xA;Farm is not currently supported by the Commercial Lines Template product.&#xD;&#xA;">
              <value>
                <external path="data/policy/line[Type='Farm']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <object id="FarmLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="FarmLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="FarmLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="FarmLinePrivate.LOBCode" type="string">
                <value value="Farm" />
              </private>
              <private id="FarmLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="FarmLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="FarmLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="FarmLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
            </object>
            <private id="LinePrivate.CovMiscellaneousCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="CovMiscellaneous" />
              </value>
            </private>
            <private id="LinePrivate.ShowManuscriptEndorsementAdd" caption="" type="boolean">
              <value idref="True" />
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyPrivate.IsInAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="LinePrivate.ReinsuranceCount" caption="" type="boolean" alwaysRun="1">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="Reinsurance" />
              </value>
            </private>
            <private id="LinePrivate.StopLineRating" caption="" type="boolean">
              <value idref="False" />
              <affects>
                <reference idref="LinePrivate.SetValidTransactionCheck" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.PackageModifierApplicable" caption="" type="float">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyOutputNonShredded.TrueISOPackage" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                  <else>
                    <lookup>
                      <tableRef value="(custom defined)" idref="TableNames.PackageModifierApplicable" />
                      <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="int" value="6" name="Line" />
                    </lookup>
                  </else>
                </if>
              </value>
            </private>
            <private id="LinePrivate.LinePremiumWritten" caption="" type="float" />
            <private id="LinePrivate.LinePremiumChange" caption="" type="float" />
            <private id="LinePrivate.FullyEarnedWrittenSum" caption="" type="float" path="FullyEarnedWrittenSum">
              <value>
                <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AllCoveragesShare">
                  <reference idref="AllCoveragesShareOutput.PremiumWritten" type="float" />
                  <customQuery idref="LinePrivate.FullyEarnedWrittenSumXPath" />
                </iterator>
              </value>
            </private>
            <private id="LinePrivate.FullyEarnedWrittenSumXPath" caption="" type="string" path="FullyEarnedWrittenSumXPath">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="./line[Type='" />
                  <argument op="add" idref="LineOutput.Type" type="string" />
                  <argument op="add" type="string" value="']//coverage[(FullyEarnedIndicator=1) and (written!=0)]" />
                </calculation>
              </value>
            </private>
            <private id="LinePrivate.SetValidTransactionCheck" caption="" type="boolean">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <operand idref="False" type="int" />
                      <comparison compare="eq">
                        <operand idref="LinePrivate.StopLineRating" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LinePrivate.SetValidTransaction" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.SetValidTransaction" caption="" type="boolean">
              <value idref="False" />
              <affects>
                <reference idref="PolicyAdminOutputNonShredded.ValidTransaction" effect="setValue" />
              </affects>
            </private>
            <object id="LinePrivate_RiskNumbering">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LinePrivate_RiskNumbering.NextAvailableVehicleNumber" caption="" type="string" alwaysRun="1" path="NextAvailableVehicleNumber">
                <affects>
                  <reference idref="LinePrivate_RiskNumbering.NextAvailableVehicleNumberIncrement" effect="postEffect" />
                </affects>
                <value>
                  <iterator type="string" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                    <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" type="int" />
                    <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                  </iterator>
                </value>
              </private>
              <private id="LinePrivate_RiskNumbering.NextAvailableVehicleNumberIncrement" caption="" type="int" alwaysRun="1" path="NextAvailableVehicleNumberIncrement">
                <value>
                  <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                    <reference idref="AvailableVehicleNumberPrivate.NextAvailableVehicleNumberIncrement" type="int" />
                    <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                  </iterator>
                </value>
              </private>
              <private id="LinePrivate_RiskNumbering.ResetRiskNumber" caption="" type="int" path="ResetRiskNumber">
                <value>
                  <iterator type="int" scope="all" action="sum" idref="Risk">
                    <reference idref="RiskPrivate.ResetRiskNumber" type="int" />
                  </iterator>
                </value>
              </private>
              <private id="LinePrivate_RiskNumbering.ResetRiskNumberMidTerm" caption="" type="int" comment="Need to add restriction to iterator to only reset risks that have a current # greater than the _processingData.NextAvailableVehicleNumberAtStart" path="ResetRiskNumberMidTerm">
                <value>
                  <iterator type="int" scope="all" action="sum" idref="Risk">
                    <reference idref="RiskPrivate.ResetRiskNumberMidTerm" type="int" />
                  </iterator>
                </value>
                <affects>
                  <reference idref="LinePrivate_RiskNumbering.ResetNextAvailVehicleToValueAtStart" effect="preEffect" />
                </affects>
              </private>
              <private id="LinePrivate_RiskNumbering.ResetNextAvailVehicleToValueAtStart" caption="" type="int" path="ResetNextAvailVehicleToValueAtStart">
                <value>
                  <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                    <reference idref="AvailableVehicleNumberPrivate.ResetNextAvailVehicleToValueAtStart" type="string" />
                    <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                  </iterator>
                </value>
              </private>
              <private id="LinePrivate_RiskNumbering.NextAvailableVehicleNumberAtStart" caption="" type="int" alwaysRun="1" path="NextAvailableVehicleNumber">
                <value>
                  <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                    <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtStart" type="int" />
                    <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                  </iterator>
                </value>
              </private>
            </object>
            <private id="LinePrivate.IsAuditableLOBLookup" caption="" type="boolean" path="IsAuditableLOBLookup">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.AuditableLOB" />
                  <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                  <fieldRef value="Value" />
                  <keyRef idref="LineOutput.Type" type="string" name="LineOfBusiness" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.IsMNFirefighterReliefFundSurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationMNIncludeDeleted" type="boolean" />
                  <comparison compare="is">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="Property" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationNJIncludeDeleted" type="boolean" />
                  <comparison compare="is">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="Crime,CommercialAuto,GeneralLiability,Property,InlandMarine,InlandMarineAAIS,BusinessOwners" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsLineOfBusinessSelected" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LineInput.Selected" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsCAAutomobileAssessmentChargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationCAIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsCOAutoTheftPreventionAuthoritySurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationCOIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsFLEmergencyManagementPreparednessFundSurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationFLIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsNYMotorVehLawEnforcementFee" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationNYIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsTXAutomobileTheftPreventionFeeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationTXIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsNYFireInsSurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationNYIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsFLHurricaneCatastropheFundAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationFLIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="or">
                      <comparison compare="or">
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="or">
                              <comparison compare="eq">
                                <operand idref="LineOutput.Type" type="string" />
                                <operand type="string" value="CommercialAuto" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="LineOutput.Type" type="string" />
                                <operand type="string" value="GeneralLiability" />
                              </comparison>
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LineOutput.Type" type="string" />
                              <operand type="string" value="Property" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LineOutput.Type" type="string" />
                            <operand type="string" value="InlandMarine" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LineOutput.Type" type="string" />
                          <operand type="string" value="InlandMarineAAIS" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LineOutput.Type" type="string" />
                        <operand type="string" value="Crime" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsFLStateFireMarshalRegulatoryAssessmentAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationFLIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsMNFireSafetySurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationMNIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsFLCitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationFLIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsLACitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationLAIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsMIMCCASurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationMIIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.ClearLinePremiumTotals" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LinePremiums.Premium" effect="setValue" />
                <reference idref="LinePremiums.PremiumChange" effect="setValue" />
                <reference idref="LinePremiums.PremiumWritten" effect="setValue" />
                <reference idref="LinePurePremiums.PurePremium" effect="setValue" />
                <reference idref="LinePurePremiums.PurePremiumChange" effect="setValue" />
                <reference idref="LinePurePremiums.PurePremiumWritten" effect="setValue" />
                <reference idref="LineTaxesAndSurcharges.TaxesSurcharges" effect="setValue" />
                <reference idref="LineTaxesAndSurcharges.TaxesSurchargesChange" effect="setValue" />
                <reference idref="LineTaxesAndSurcharges.TaxesSurchargesWritten" effect="setValue" />
              </affects>
            </private>
            <private id="LinePrivate.IsCASeismicSafetyAccountAssessmentAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationCAIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsAZTheftProtectionAssessmentAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationAZIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.IsMNAutomobileTheftPreventionSurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationMNIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <object id="LineCommissionPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LineCommissionPrivate.GetCommissionData" caption="" type="string">
                <value>
                  <select idref="LineOutput.Type">
                    <case idref="LineCommissionPrivate.GetCommissionDataCommercialAuto" type="string" select="CommercialAuto" />
                    <case idref="LineCommissionPrivate.GetCommissionDataGeneralLiability" type="string" select="GeneralLiability" />
                    <case idref="LineCommissionPrivate.GetCommissionDataProperty" type="string" select="Property" />
                    <case idref="LineCommissionPrivate.GetCommissionDataWorkersCompensation" type="string" select="WorkersCompensation" />
                    <case idref="LineCommissionPrivate.GetCommissionDataInlandMarine" type="string" select="InlandMarine" />
                    <case idref="LineCommissionPrivate.GetCommissionDataCrime" type="string" select="Crime" />
                    <case idref="LineCommissionPrivate.GetCommissionDataBusinessOwners" type="string" select="BusinessOwners" />
                    <case idref="LineCommissionPrivate.GetCommissionDataCommercialUmbrella" type="string" select="CommercialUmbrella" />
                    <case idref="LineCommissionPrivate.GetCommissionDataCommercialAutoMA" type="string" select="CommercialAutoMA" />
                    <case idref="LineCommissionPrivate.GetCommissionDataInlandMarineAAIS" type="string" select="InlandMarineAAIS" />
                    <otherwise type="string" value="" />
                  </select>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataCommercialAuto" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='CommercialAuto']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataGeneralLiability" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='GeneralLiability']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataProperty" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='Property']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataWorkersCompensation" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='WorkersCompensation']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataInlandMarine" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='InlandMarine']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataCrime" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='Crime']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataBusinessOwners" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='BusinessOwners']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataCommercialAutoMA" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='CommercialAutoMA']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataCommercialUmbrella" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='CommercialUmbrella']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionPrivate.GetCommissionDataInlandMarineAAIS" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='InlandMarineAAIS']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionPrivate.GetCommissionData" />
                  </external>
                </value>
              </private>
            </object>
            <object id="LineCommissionOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LineCommissionOutput.CommissionPlanId" caption="" type="string">
                <value>
                  <select idref="LineOutput.Type">
                    <case idref="LineCommissionOutput.CommissionPlanIdCommercialAuto" type="string" select="CommercialAuto" />
                    <case idref="LineCommissionOutput.CommissionPlanIdGeneralLiability" type="string" select="GeneralLiability" />
                    <case idref="LineCommissionOutput.CommissionPlanIdProperty" type="string" select="Property" />
                    <case idref="LineCommissionOutput.CommissionPlanIdWorkersCompensation" type="string" select="WorkersCompensation" />
                    <case idref="LineCommissionOutput.CommissionPlanIdInlandMarine" type="string" select="InlandMarine" />
                    <case idref="LineCommissionOutput.CommissionPlanIdCrime" type="string" select="Crime" />
                    <case idref="LineCommissionOutput.CommissionPlanIdBusinessOwners" type="string" select="BusinessOwners" />
                    <case idref="LineCommissionOutput.CommissionPlanIdCommercialUmbrella" type="string" select="CommercialUmbrella" />
                    <case idref="LineCommissionOutput.CommissionPlanIdCommercialAutoMA" type="string" select="CommercialAutoMA" />
                    <case idref="LineCommissionOutput.CommissionPlanIdInlandMarineAAIS" type="string" select="InlandMarineAAIS" />
                    <otherwise type="string" value="" />
                  </select>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdGeneralLiability" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='GeneralLiability']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdCommercialAuto" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='CommercialAuto']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdProperty" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='Property']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdCrime" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='Crime']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdBusinessOwners" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='BusinessOwners']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdCommercialAutoMA" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='CommercialAutoMA']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdInlandMarine" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='InlandMarine']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdWorkersCompensation" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='WorkersCompensation']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdCommercialUmbrella" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='CommercialUmbrella']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
              <private id="LineCommissionOutput.CommissionPlanIdInlandMarineAAIS" caption="" type="string">
                <value>
                  <external path="data/policy/line[Type='InlandMarineAAIS']">
                    <manuscriptName idref="PolicyAdmin.BillingManuScriptID" />
                    <referenceField value="LineCommissionOutput.CommissionPlanId" />
                  </external>
                </value>
              </private>
            </object>
            <object id="InlandMarineAAISLinePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="InlandMarineAAISLinePrivate.ExtensionGroupMinimum" type="int">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="InlandMarineAAISLinePrivate.SupportsThisLOB" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else value="0" />
                  </if>
                </value>
              </private>
              <private id="InlandMarineAAISLinePrivate.LOBCode" type="string">
                <value value="InlandMarineAAIS" />
              </private>
              <private id="InlandMarineAAISLinePrivate.LineXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="line[Type='" />
                    <argument op="add" idref="InlandMarineAAISLinePrivate.LOBCode" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="InlandMarineAAISLinePrivate.SupportsThisLOB" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.LOBSupport" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
                    <keyRef idref="InlandMarineAAISLinePrivate.LOBCode" type="string" name="Supported" />
                  </lookup>
                </value>
              </private>
            </object>
            <private id="LinePrivate.IsBindableInlandMarineAAISExternal" caption="Is Bindable" type="boolean" comment="bindable policy can be written without authority granted by an underwriter">
              <value>
                <external path="data/policy/line[Type='InlandMarineAAIS']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsBindable" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsEligibleInlandMarineAAISExternal" caption="Is Eligible" type="boolean" comment="if a policy doesn?t meet eligibility, then it is declined">
              <value>
                <external path="data/policy/line[Type='InlandMarineAAIS']">
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.IsEligible" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.IsLOB_ISO" caption="" type="boolean">
              <value>
                <lookup>
                  <tableRef value="LOBAdvisoryBureau" />
                  <fieldRef value="ISO" />
                  <keyRef idref="LineOutput.Type" type="string" name="LOB" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.IsLOB_NCCI" caption="" type="boolean">
              <value>
                <lookup>
                  <tableRef value="LOBAdvisoryBureau" />
                  <fieldRef value="NCCI" />
                  <keyRef idref="LineOutput.Type" type="string" name="LOB" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.IsLOB_AAIS" caption="" type="boolean">
              <value>
                <lookup>
                  <tableRef value="LOBAdvisoryBureau" />
                  <fieldRef value="AAIS" />
                  <keyRef idref="LineOutput.Type" type="string" name="LOB" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.IsLOB_MAIP" caption="" type="boolean" comment="Massachusetts Auto Insurance Plan">
              <value>
                <lookup>
                  <tableRef value="LOBAdvisoryBureau" />
                  <fieldRef value="MAIP" />
                  <keyRef idref="LineOutput.Type" type="string" name="LOB" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.DoPostApplyChangesSetup" caption="" type="string">
              <value>
                <external>
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.LinePostApplyChangesSetup" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.LinePostApplyChangesSetup" caption="" type="string">
              <affects>
                <reference idref="LinePrivate.ResetLineRemovedMidTermOOSCheck" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.ShowSwitchedLine" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <operand idref="LineInput.Selected" type="boolean" />
                    <comparison compare="ne">
                      <operand idref="PolicyAdminOutputNonShredded.CurrentLineOfBusiness" type="string" />
                      <operand idref="LineOutput.Type" type="string" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.LineSelectSortOrder" caption="" type="int">
              <value>
                <lookup>
                  <tableRef value="LOBSelectSortOrder" />
                  <fieldRef value="Value" />
                  <keyRef idref="LineOutput.Type" type="string" name="LOB" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.LineRemovalAvailable" caption="" type="boolean">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.AvailableForMidTermRemoval" />
                  <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                  <fieldRef value="Value" />
                  <keyRef idref="LineOutput.Type" type="string" name="Line" />
                </lookup>
              </value>
            </private>
            <private id="LinePrivate.SetLineRemovedMidTerm" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="LineInputNonShredded.LineRemovedMidTerm" effect="setValue" />
                <reference idref="LinePrivate.SetLineRemovedMidTermDate" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.ClearLineRemovedMidTerm" caption="" type="boolean">
              <value idref="False" />
              <affects>
                <reference idref="LineInputNonShredded.LineRemovedMidTerm" effect="setValue" />
                <reference idref="LineInputNonShredded.LineRemovedFlat" effect="setValue" />
                <reference idref="LinePrivate.ClearLineRemovedMidTermDate" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.ShowRemoveLineButton" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="and">
                        <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                        <operand idref="LineInput.Selected" type="boolean" />
                      </comparison>
                      <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LinePrivate.LineRemovalAvailable" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                  <then idref="False" type="int" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" type="int" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" type="int" />
                </if>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" type="int" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LinePrivate.IsLineSelectedAtTransactionStart" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" type="int" />
                </if>
              </misc>
            </private>
            <private id="LinePrivate.IsLineSelectedAtTransactionStart" caption="" type="boolean">
              <value>
                <comparison compare="contains">
                  <operand idref="PolicyOutputNonShredded.SelectedLines" type="string" />
                  <operand idref="LineOutput.Type" type="string" />
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.HideLineDeleteMessage" caption="" type="boolean">
              <value>
                <comparison compare="or">
                  <comparison compare="eq">
                    <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LineInput.Selected" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                  <then idref="True" />
                </if>
              </misc>
            </private>
            <private id="LinePrivate.ClearLineSelected" caption="" type="boolean">
              <value idref="False" />
              <affects>
                <reference idref="LineInput.Selected" effect="setValue" />
              </affects>
            </private>
            <private id="LinePrivate.ResetLineRemovedNewTerm" caption="" type="string">
              <affects>
                <reference idref="LinePrivate.ClearLineSelected" effect="postEffect" />
                <reference idref="LinePrivate.ClearLineRemovedMidTerm" effect="postEffect" />
              </affects>
              <value>
                <external>
                  <manuscriptName idref="LineManuScript.LineRemovalManuScriptID" />
                  <referenceField value="data.ResetAtNewTerm" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.ResetLineRemovedNewTermCheck" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LinePrivate.ResetLineRemovedNewTerm" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.ResetLineRemovedMidTermOOSCheck" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="and">
                              <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                              <comparison compare="eq">
                                <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                                <operand idref="True" type="int" />
                              </comparison>
                            </comparison>
                            <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                          </comparison>
                          <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LinePrivate.ResetLineRemovedMidTermOOS" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.ResetLineRemovedMidTermOOS" caption="" type="string">
              <value>
                <external>
                  <manuscriptName idref="LineManuScript.LineRemovalManuScriptID" />
                  <referenceField value="data.RemoveLineOfBusiness" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.SetLineRemovedMidTermDate" caption="" type="date">
              <value idref="PolicyOutputNonShredded.CurrentTransactionDate" />
              <affects>
                <reference idref="LineInputNonShredded.LineRemovedMidTermDate" effect="setValue" />
              </affects>
            </private>
            <private id="LinePrivate.ClearLineRemovedMidTermDate" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="LineInputNonShredded.LineRemovedMidTermDate" effect="setValue" />
              </affects>
            </private>
            <private id="LinePrivate.SetTransactionIDWhenAddedCheck" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LinePrivate.IsLineSelectedAtTransactionStart" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="LinePrivate.SetTransactionIDWhenAdded" />
                </if>
              </value>
            </private>
            <private id="LinePrivate.SetTransactionIDWhenAdded" caption="" type="string">
              <value idref="PolicyOutputNonShredded.CurrentTransactionID" />
              <affects>
                <reference idref="LineOutput.TransactionIDWhenAdded" effect="setValue" />
              </affects>
            </private>
            <private id="LinePrivate.IsNCCommercialAutoLossRecoupmentSurchargeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationNCIncludeDeleted" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.InitializeCoveragePremiumsLineNotSelected" caption="" type="float" path="InitializeCoveragePremiumsLineNotSelected">
              <value>
                <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AllCoveragesShare">
                  <reference idref="AllCoveragesSharePrivate.SetPremiumToZero" type="float" />
                  <customQuery idref="LinePrivate.InitializeCoveragePremiumsLineNotSelectedXPath" />
                </iterator>
              </value>
              <affects>
                <reference idref="LinePrivate.DeleteUnselectedLineRequest" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.InitializeCoveragePremiumsLineNotSelectedXPath" caption="" type="string" path="InitializeCoveragePremiumsLineNotSelectedXPath">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="/session/data/policy/line[Type='" />
                  <argument op="add" idref="LineOutput.Type" type="string" />
                  <argument op="add" type="string" value="']//coverage[((Premium!=0) or (written!=0))]" />
                </calculation>
              </value>
            </private>
            <private id="LinePrivate.IsMIAutomobileTheftPreventionAuthorityAssessmentAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationMIIncludeDeleted" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="LineOutput.Type" type="string" />
                    <operand type="string" value="CommercialAuto" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LinePrivate.DoAppendReconcileChangesEvent" caption="" type="string">
              <value>
                <external>
                  <manuscriptName idref="LineManuScript.PagesManuscriptID" />
                  <referenceField value="LinePrivate.LineAppendReconcileChangesEvent" />
                </external>
              </value>
            </private>
            <private id="LinePrivate.LineAppendReconcileChangesEvent" caption="" type="string" />
            <private id="LinePrivate.HideLineNotAvailableDisplay" caption="" type="boolean">
              <misc>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LinePrivate.IsLOBSelectable" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" type="int" />
                </if>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="LineOutput.Type" type="string" />
                        <operand type="string" value="CommercialAuto" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsPrimaryLocationStateMA" type="string" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="False" type="int" />
                </if>
              </misc>
              <value idref="True" />
            </private>
            <private id="LinePrivate.InitializeFormsManuScriptIDs" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="LineManuScript.FormsMasterManuscriptID" effect="postEffect" />
                <reference idref="LineManuScript.FormsControlManuscriptID" effect="postEffect" />
                <reference idref="FormsManuscript.AKFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.ALFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.ARFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.AZFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.CAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.COFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.CTFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.DCFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.DEFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.FLFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.GAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.HIFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.IAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.IDFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.ILFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.INFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.KSFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.KYFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.LAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MDFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MEFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MIFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MNFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MOFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MSFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MTFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.MultiStateFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NCFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NDFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NEFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NHFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NJFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NMFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NVFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.NYFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.OHFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.OKFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.ORFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.PAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.RIFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.SCFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.SDFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.TNFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.TXFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.UTFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.VAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.VTFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.WAFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.WIFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.WVFormsManuScriptID" effect="postEffect" />
                <reference idref="FormsManuscript.WYFormsManuScriptID" effect="postEffect" />
              </affects>
            </private>
            <private id="LinePrivate.DeleteUnselectedLineRequest" caption="" type="string" path="DeleteUnselectedLineRequest" comment="This is only for Session Componentization to be able to reference the coverages that exist within the Shares.">
              <value>
                <request verb="CustomServer.processRq" get="@status" validRef="LinePrivate.DeleteUnselectedLineRequestCheck">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="" name="dataRequests" dataType="element">
                      <nameValue value="" name="Session.getDocumentRq" dataType="element" />
                    </nameValue>
                    <nameValue value="" name="customData" dataType="element" />
                    <nameValue value="" name="xsltRequests" dataType="element">
                      <nameValue value="http://www.w3.org/1999/XSL/Transform" name="xmlns:xsl" dataType="attribute" />
                      <nameValue value="" name="xsl:for-each" dataType="element">
                        <nameValue idref="LinePrivate.DeleteUnselectedLineTransformPath" name="select" dataType="attribute" />
                        <nameValue value="" name="ManuScript.setValueRq" dataType="element">
                          <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                          <nameValue value="AllCoveragesShareOutput.PremiumChange" name="field" dataType="attribute" />
                          <nameValue value="0" name="value" dataType="attribute" />
                          <nameValue value="S:{@id}^//*[@id='{@id}']" name="context" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="ManuScript.setValueRq" dataType="element">
                          <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                          <nameValue value="AllCoveragesShareOutput.PremiumWritten" name="field" dataType="attribute" />
                          <nameValue value="0" name="value" dataType="attribute" />
                          <nameValue value="S:{@id}^//*[@id='{@id}']" name="context" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="ManuScript.setValueRq" dataType="element">
                          <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                          <nameValue value="AllCoveragesShareOutput.Premium" name="field" dataType="attribute" />
                          <nameValue value="0" name="value" dataType="attribute" />
                          <nameValue value="S:{@id}^//*[@id='{@id}']" name="context" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="ManuScript.setValueRq" dataType="element">
                          <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                          <nameValue value="AllCoveragesShareOutput.Prior" name="field" dataType="attribute" />
                          <nameValue value="0" name="value" dataType="attribute" />
                          <nameValue value="S:{@id}^//*[@id='{@id}']" name="context" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="ManuScript.setValueRq" dataType="element">
                          <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                          <nameValue value="AllCoveragesShareOutput.PriorTerm" name="field" dataType="attribute" />
                          <nameValue value="0" name="value" dataType="attribute" />
                          <nameValue value="S:{@id}^//*[@id='{@id}']" name="context" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValue>
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="LinePrivate.DeleteUnselectedLineRequestCheck" caption="" type="boolean" path="DeleteUnselectedLineRequest">
              <value>
                <comparison idref="PolicyAdmin.IsPolicyConvertedToFragments" type="boolean" />
              </value>
            </private>
            <private id="LinePrivate.DeleteUnselectedLineTransformPath" caption="" type="string" path="DeleteUnselectedLineTransformPath">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="data/Session.getDocumentRs//" />
                  <argument op="add" type="string" value="data/policy/line[Type='" />
                  <argument op="add" idref="LineOutput.Type" type="string" />
                  <argument op="add" type="string" value="']//coverage[((Premium!=0) or (written!=0) or (change!=0) or (prior!=0) or (priorTerm!=0))]" />
                </calculation>
              </value>
            </private>
            <private id="LinePrivate.InitializeLineTaxAmountsNotSelected" caption="" type="float" path="InitializeCoveragePremiumsLineNotSelected">
              <value>
                <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AllLineStateTaxesSurcharges">
                  <reference idref="AllLineStateTaxesSurchargesPrivate.SetTaxToZero" type="float" />
                  <customQuery idref="LinePrivate.InitializeLineTaxAmountsNotSelectedXPath" />
                </iterator>
              </value>
            </private>
            <private id="LinePrivate.InitializeLineTaxAmountsNotSelectedXPath" caption="" type="string" path="InitializeCoveragePremiumsLineNotSelectedXPath">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="/session/data/policy/line[Type='" />
                  <argument op="add" idref="LineOutput.Type" type="string" />
                  <argument op="add" type="string" value="']//lineStateTaxSurcharge[((fValue!=0) or (written!=0))]" />
                </calculation>
              </value>
            </private>
            <private id="LinePrivate.IsCOHazardMitigationFeeAvailable" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="AccountPrivate.IsAnyLocationCOIncludeDeleted" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="Property" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
          </object>
          <object id="LineOutput" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="LineOutput.Type" path="Type" type="string" comment="Shared" override="1">
              <definition>
                <caption value="Line Code" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.Type" />
              </definition>
              <rules>
                <default>
                  <select idref="LinePrivate.Number">
                    <case type="string" value="CommercialAuto" select="1" />
                    <case type="string" value="GeneralLiability" select="2" />
                    <case type="string" value="Property" select="3" />
                    <case type="string" value="WorkersCompensation" select="4" />
                    <case type="string" value="InlandMarine" select="5" />
                    <case type="string" value="Crime" select="6" />
                    <case type="string" value="BusinessOwners" select="7" />
                    <case type="string" value="CommercialAutoMA" select="8" />
                    <case type="string" value="CommercialUmbrella" select="9" />
                    <case type="string" value="InlandMarineAAIS" select="10" />
                    <otherwise type="string" value="" />
                  </select>
                </default>
              </rules>
            </public>
            <public id="LineOutput.Description" type="string" comment="" path="exposure[Type=&quot;Description&quot;]/Description" override="1">
              <rules>
                <value>
                  <select idref="LineOutput.Type">
                    <case type="string" value="Commercial Automobile" select="CommercialAuto" />
                    <case type="string" value="Commercial General Liability" select="GeneralLiability" />
                    <case type="string" value="Commercial Property" select="Property" />
                    <case type="string" value="Workers Compensation" select="WorkersCompensation" />
                    <case type="string" value="Inland Marine" select="InlandMarine" />
                    <case type="string" value="Crime" select="Crime" />
                    <case type="string" value="Businessowners" select="BusinessOwners" />
                    <case type="string" value="Commercial Umbrella" select="CommercialUmbrella" />
                    <case type="string" value="Massachusetts Commercial Auto" select="CommercialAutoMA" />
                    <case type="string" value="Inland Marine AAIS" select="InlandMarineAAIS" />
                    <otherwise type="string" value="" />
                  </select>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LineInput.DescriptionOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="LineInput.DescriptionOverride" />
                  </if>
                </misc>
              </rules>
              <definition>
                <readOnly idref="True" />
                <caption value=" " />
                <maxLength idref="MaxLength.Description" />
              </definition>
            </public>
            <object id="TotalTerrorism">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="TotalTerrorism.Premium" path="TotalTerrorismPremium" type="float">
                <definition>
                  <caption value="Premium" />
                  <maxLength idref="MaxLength.Premium" />
                </definition>
              </public>
            </object>
            <public id="LineOutput.Premium" path="Premium" type="float" override="1">
              <definition>
                <caption value="Premium" />
                <readOnly idref="True" />
                <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <object id="LinePremiumTotals" abstract="1">
              <object id="LinePurePremiums" abstract="1">
                <public id="LinePurePremiums.PurePremiumWritten" path="PurePremiumValues/@written" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Premium Written" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="LinePrivate.LinePremiumWritten" type="float" />
                            <argument op="add" idref="CovPolicyMinimumOutput.PremiumWritten" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                    <affects>
                      <reference idref="LinePrivate.PremiumPreEffect" effect="preEffect" />
                      <reference idref="LinePrivate.PremiumPostEffect" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LinePurePremiums.PurePremiumChange" path="PurePremiumValues/@change" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Premium Change" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="LinePrivate.LinePremiumChange" type="float" />
                            <argument op="add" idref="CovPolicyMinimumOutput.PremiumChange" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </rules>
                </public>
                <public id="LinePurePremiums.PurePremium" path="PurePremium" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Premium" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="LineOutput.PurePremium" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LinePremiums" abstract="1">
                <public id="LinePremiums.Premium" path="Premium" type="float" class="excludeInChangeSummary" override="1">
                  <definition>
                    <caption value="Line Premiums Premium" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="LinePurePremiums.PurePremium" type="float" />
                        <argument op="add" idref="LineTaxesAndSurcharges.TaxesSurcharges" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="LineOutput.Premium" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
              </object>
              <object id="LineTaxesAndSurcharges" abstract="1">
                <public id="LineTaxesAndSurcharges.TaxesSurcharges" path="TaxesSurcharges" type="float" override="1">
                  <definition>
                    <caption value="Line Taxes And Surcharges Taxes Surcharges" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="LineWVPolicyholderSurchargePrivate.Total" type="float" />
                        <argument op="add" idref="LineKYMunicipalTaxOutput.Amount" type="float" />
                        <argument op="add" idref="LineKYPremiumSurchargePrivate.Total" type="float" />
                        <argument op="add" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Total" type="float" />
                        <argument op="add" idref="LineCOHazardMitigationFeePrivate.Total" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="LineTaxesAndSurcharges.TaxesSurchargesWritten" path="TaxesSurchargesValues/@written" type="float" override="1">
                  <definition>
                    <caption value="Line Taxes And Surcharges Written" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="LineWVPolicyholderSurchargePrivate.TotalWritten" type="float" />
                        <argument op="add" idref="LineKYMunicipalTaxPrivate.TotalWritten" type="float" />
                        <argument op="add" idref="LineKYPremiumSurchargePrivate.TotalWritten" type="float" />
                        <argument op="add" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.TotalWritten" type="float" />
                        <argument op="add" idref="LineCOHazardMitigationFeePrivate.TotalWritten" type="float" />
                      </calculation>
                    </value>
                    <affects>
                      <reference idref="RiskTotalTaxPremiums.Subtotal" effect="preEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineTaxesAndSurcharges.TaxesSurchargesChange" path="TaxesSurchargesValues/@change" type="float" override="1">
                  <definition>
                    <caption value="Line Taxes And Surcharges Change" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="LineWVPolicyholderSurchargePrivate.TotalChange" type="float" />
                        <argument op="add" idref="LineKYMunicipalTaxOutput.Change" type="float" />
                        <argument op="add" idref="LineKYPremiumSurchargePrivate.TotalChange" type="float" />
                        <argument op="add" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.TotalChange" type="float" />
                        <argument op="add" idref="LineCOHazardMitigationFeePrivate.TotalChange" type="float" />
                      </calculation>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineTaxSubtotals_NonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="WVPolicyholderSubtotals">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="WVPolicyholderSubtotals.PremiumChange" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Change">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_WVPolicyholder.PremiumChange" type="float" />
                        <argument op="add" idref="LineSubtotal_WVPolicyholder.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="WVPolicyholderSubtotals.PremiumWritten" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Written">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_WVPolicyholder.PremiumWritten" type="float" />
                        <argument op="add" idref="LineSubtotal_WVPolicyholder.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <object id="LineSubtotal_WVPolicyholder">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="LineSubtotal_WVPolicyholder.PremiumChange" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Change" />
                    <private id="LineSubtotal_WVPolicyholder.PremiumWritten" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Written" />
                    <private id="LineSubtotal_WVPolicyholder.Premium" caption="" type="float" />
                  </object>
                  <private id="WVPolicyholderSubtotals.Premium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_WVPolicyholder.Premium" type="float" />
                        <argument op="add" idref="LineSubtotal_WVPolicyholder.Premium" type="float" />
                      </calculation>
                    </value>
                  </private>
                </object>
                <object id="KYSurchargeSubtotals">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="KYSurchargeSubtotals.Premium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_KYSurcharge.Premium" type="float" />
                        <argument op="add" idref="LineSubtotal_KYSurcharge.Premium" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="KYSurchargeSubtotals.PremiumChange" type="float" caption="Line Total_WV Policyholder Premiums Premium Change">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_KYSurcharge.PremiumChange" type="float" />
                        <argument op="add" idref="LineSubtotal_KYSurcharge.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="KYSurchargeSubtotals.PremiumWritten" type="float" caption="Line Total_WV Policyholder Premiums Premium Written">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_KYSurcharge.PremiumWritten" type="float" />
                        <argument op="add" idref="LineSubtotal_KYSurcharge.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <object id="LineSubtotal_KYSurcharge">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="LineSubtotal_KYSurcharge.Premium" caption="" type="float" />
                    <private id="LineSubtotal_KYSurcharge.PremiumChange" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Change" />
                    <private id="LineSubtotal_KYSurcharge.PremiumWritten" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Written" />
                  </object>
                </object>
                <object id="KYMunicipalSubtotals">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="KYMunicipalSubtotals.Premium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_KYMunicipal.Premium" type="float" />
                        <argument op="add" idref="LineSubtotal_KYMunicipal.Premium" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="KYMunicipalSubtotals.PremiumChange" type="float" caption="Line Total_WV Policyholder Premiums Premium Change">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_KYMunicipal.PremiumChange" type="float" />
                        <argument op="add" idref="LineSubtotal_KYMunicipal.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="KYMunicipalSubtotals.PremiumWritten" type="float" caption="Line Total_WV Policyholder Premiums Premium Written">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_KYMunicipal.PremiumWritten" type="float" />
                        <argument op="add" idref="LineSubtotal_KYMunicipal.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <object id="LineSubtotal_KYMunicipal">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="LineSubtotal_KYMunicipal.Premium" caption="" type="float" />
                    <private id="LineSubtotal_KYMunicipal.PremiumChange" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Change" />
                    <private id="LineSubtotal_KYMunicipal.PremiumWritten" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Written" />
                  </object>
                </object>
                <object id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeSubtotals">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeSubtotals.Premium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.Premium" />
                        <argument op="add" idref="LineSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.Premium" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeSubtotals.PremiumChange" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Change">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumChange" />
                        <argument op="add" idref="LineSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeSubtotals.PremiumWritten" type="float" comment="" caption="Line Total_WV Policyholder Premiums Premium Written">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumWritten" />
                        <argument op="add" idref="LineSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <object id="LineSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="LineSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.Premium" caption="" type="float" />
                    <private id="LineSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumChange" type="float" comment="" caption="Line Total_NJ Property Liability Insurance Guaranty Association Surcharge Premiums Premium Change" />
                    <private id="LineSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumWritten" type="float" comment="" caption="Line Total_NJ Property Liability Insurance Guaranty Association Surcharge Premiums Premium Written" />
                  </object>
                </object>
                <object id="FLInsuranceGuarantyAssociationAssessmentSubtotals">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="FLInsuranceGuarantyAssociationAssessmentSubtotals.Premium" caption="" type="float">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.Premium" type="float" />
                        <argument op="add" idref="LineSubtotal_FLInsuranceGuarantyAssociationAssessment.Premium" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="FLInsuranceGuarantyAssociationAssessmentSubtotals.PremiumChange" type="float" comment="">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumChange" type="float" />
                        <argument op="add" idref="LineSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumChange" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <private id="FLInsuranceGuarantyAssociationAssessmentSubtotals.PremiumWritten" type="float" comment="">
                    <value>
                      <calculation>
                        <argument op="eq" idref="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumWritten" type="float" />
                        <argument op="add" idref="LineSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumWritten" type="float" />
                      </calculation>
                    </value>
                  </private>
                  <object id="LineSubtotal_FLInsuranceGuarantyAssociationAssessment">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="LineSubtotal_FLInsuranceGuarantyAssociationAssessment.Premium" caption="" type="float" />
                    <private id="LineSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumChange" type="float" comment="" />
                    <private id="LineSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumWritten" type="float" comment="" />
                  </object>
                </object>
              </object>
            </object>
            <object id="LineSubtotals" abstract="1">
              <object id="RiskSubTotals" abstract="1">
                <object id="RiskTaxSubtotals_NonShredded">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <object id="RiskTotalTaxPremiums">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="RiskTotalTaxPremiums.Subtotal" type="float" comment="">
                      <value>
                        <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Risk">
                          <subtotal idref="RiskWVPolicyholderSurcharge.SubtotalWritten" type="float" subtotalRef="RiskSubtotal_WVPolicyholder.PremiumWritten" validRef="LocationPrivate.StateIsWV" />
                          <subtotal idref="RiskWVPolicyholderSurcharge.SubtotalChange" type="float" subtotalRef="RiskSubtotal_WVPolicyholder.PremiumChange" validRef="LocationPrivate.StateIsWV" />
                          <subtotal idref="RiskWVPolicyholderSurcharge.Subtotal" type="float" subtotalRef="RiskSubtotal_WVPolicyholder.Premium" validRef="LocationPrivate.StateIsWV" />
                          <subtotal idref="RiskKYSurcharge.SubtotalWritten" type="float" subtotalRef="RiskSubtotal_KYSurcharge.PremiumWritten" validRef="LocationPrivate.StateIsKY" />
                          <subtotal idref="RiskKYSurcharge.SubtotalChange" type="float" subtotalRef="RiskSubtotal_KYSurcharge.PremiumChange" validRef="LocationPrivate.StateIsKY" />
                          <subtotal idref="RiskKYSurcharge.Subtotal" type="float" subtotalRef="RiskSubtotal_KYSurcharge.Premium" validRef="LocationPrivate.StateIsKY" />
                          <subtotal idref="RiskKYMunicipalTax.SubtotalWritten" type="float" subtotalRef="RiskSubtotal_KYMunicipal.PremiumWritten" validRef="LocationPrivate.StateIsKY" />
                          <subtotal idref="RiskKYMunicipalTax.SubtotalChange" type="float" subtotalRef="RiskSubtotal_KYMunicipal.PremiumChange" validRef="LocationPrivate.StateIsKY" />
                          <subtotal idref="RiskKYMunicipalTax.Subtotal" type="float" subtotalRef="RiskSubtotal_KYMunicipal.Premium" validRef="LocationPrivate.StateIsKY" />
                          <subtotal idref="RiskFLInsuranceGuarantyAssociationAssessment.SubtotalWritten" type="float" subtotalRef="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumWritten" validRef="LocationPrivate.StateIsFL" />
                          <subtotal idref="RiskFLInsuranceGuarantyAssociationAssessment.SubtotalChange" type="float" subtotalRef="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumChange" validRef="LocationPrivate.StateIsFL" />
                          <subtotal idref="RiskFLInsuranceGuarantyAssociationAssessment.Subtotal" type="float" subtotalRef="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.Premium" validRef="LocationPrivate.StateIsFL" />
                        </iterator>
                      </value>
                    </private>
                  </object>
                  <object id="RiskSubtotal_WVPolicyholder">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="RiskSubtotal_WVPolicyholder.Premium" path="taxAppliedTo[Type=&quot;WVPolicyholder&quot; and Scope=&quot;Risk&quot;]/@premium" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_WV Policyholder Premium" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_WVPolicyholder.PremiumChange" path="taxAppliedTo[Type=&quot;WVPolicyholder&quot; and Scope=&quot;Risk&quot;]/@change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_WV Policyholder Premium Change" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_WVPolicyholder.PremiumWritten" path="taxAppliedTo[Type=&quot;WVPolicyholder&quot; and Scope=&quot;Risk&quot;]/@written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_WV Policyholder Premium Written" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                  </object>
                  <object id="RiskSubtotal_KYMunicipal">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="RiskSubtotal_KYMunicipal.Premium" path="taxAppliedTo[Type=&quot;KYMunicipal&quot; and Scope=&quot;Risk&quot;]/@premium" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_KY Municipal Premium" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_KYMunicipal.PremiumChange" path="taxAppliedTo[Type=&quot;KYMunicipal&quot; and Scope=&quot;Risk&quot;]/@change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_KY Municipal Premium Change" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_KYMunicipal.PremiumWritten" path="taxAppliedTo[Type=&quot;KYMunicipal&quot; and Scope=&quot;Risk&quot;]/@written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_KY Municipal Premium Written" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                  </object>
                  <object id="RiskSubtotal_KYSurcharge">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="RiskSubtotal_KYSurcharge.Premium" path="taxAppliedTo[Type=&quot;KYSurcharge&quot; and Scope=&quot;Risk&quot;]/@premium" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_KY Surcharge Premium" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_KYSurcharge.PremiumChange" path="taxAppliedTo[Type=&quot;KYSurcharge&quot; and Scope=&quot;Risk&quot;]/@change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_KY Surcharge Premium Change" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_KYSurcharge.PremiumWritten" path="taxAppliedTo[Type=&quot;KYSurcharge&quot; and Scope=&quot;Risk&quot;]/@written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_KY Surcharge Premium Written" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                  </object>
                  <object id="RiskSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="RiskSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.Premium" path="taxAppliedTo[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot; and Scope=&quot;Risk&quot;]/@premium" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_NJ Property Liability Insurance Guaranty Association Surcharge Premium" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumChange" path="taxAppliedTo[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot; and Scope=&quot;Risk&quot;]/@change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_NJ Property Liability Insurance Guaranty Association Surcharge Premium Change" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.PremiumWritten" path="taxAppliedTo[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot; and Scope=&quot;Risk&quot;]/@written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_NJ Property Liability Insurance Guaranty Association Surcharge Premium Written" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                  </object>
                  <object id="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <public id="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.Premium" path="taxAppliedTo[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot; and Scope=&quot;Risk&quot;]/@premium" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_FL Insurance Guaranty Association Assessment Premium" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumChange" path="taxAppliedTo[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot; and Scope=&quot;Risk&quot;]/@change" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_FL Insurance Guaranty Association Assessment Premium Change" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                    <public id="RiskSubtotal_FLInsuranceGuarantyAssociationAssessment.PremiumWritten" path="taxAppliedTo[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot; and Scope=&quot;Risk&quot;]/@written" type="float" class="excludeInChangeSummary">
                      <definition>
                        <caption value="Risk Subtotal_FL Insurance Guaranty Association Assessment Premium Written" />
                        <maxLength idref="MaxLength.fValue" />
                        <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                        <readOnly idref="True" />
                      </definition>
                      <nameValues />
                      <rules>
                        <misc>
                          <if>
                            <condition>
                              <comparison compare="eq">
                                <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                                <operand type="int" value="0" />
                              </comparison>
                            </condition>
                            <then value="0" />
                          </if>
                        </misc>
                      </rules>
                    </public>
                  </object>
                </object>
                <object id="RiskTotalPurePremiums" abstract="1">
                  <public id="RiskTotalPurePremiums.PurePremium" path="RiskTotalPurePremiums" type="float" class="excludeInChangeSummary" override="1">
                    <definition>
                      <caption value="Risk Total Pure Premiums Pure Premium" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                  <public id="RiskTotalPurePremiums.PurePremiumChange" path="RiskTotalPurePremiums/@change" type="float" class="excludeInChangeSummary" override="1">
                    <definition>
                      <caption value="Risk Total Pure Premiums Pure Premium Change" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <readOnly idref="True" />
                    </definition>
                    <rules>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.RiskExistsIncludeDeleted" type="boolean" />
                              <operand type="int" value="0" />
                            </comparison>
                          </condition>
                          <then value="0" />
                        </if>
                      </misc>
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <public id="LineOutput.IsReportable" path="IsReportable" type="boolean">
              <definition>
                <caption value="Is Reportable" />
              </definition>
              <rules>
                <default idref="False" />
              </rules>
            </public>
            <public id="LineOutput.IsFinalReport" path="IsFinalReport" type="boolean">
              <definition>
                <caption value="Is Final Report" />
              </definition>
              <rules>
                <default idref="False" />
              </rules>
            </public>
            <public id="LineOutput.TransactionIDWhenAdded" path="TransactionIDWhenAdded" type="string">
              <definition>
                <caption value="Transaction ID When Added" />
              </definition>
            </public>
            <object id="LineOutputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="LineOutputNonShredded.LineNonAvailableDisplay" path="LineNonAvailableDisplay" type="string">
                <definition>
                  <caption value=" " />
                  <readOnly idref="True" />
                  <maxLength value="20" />
                </definition>
                <rules>
                  <value value="(Line unavailable)" />
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineOutput.Type" type="string" />
                            <operand type="string" value="CommercialAuto" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="PolicyInput.PrimaryRatingState" type="string" />
                            <operand type="string" value="MA" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="(Line unavailable with MA)" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="LineOutputNonShredded.CovMiscellaneousIDToCompare" path="CovMiscellaneousIDToCompare" type="string">
                <definition>
                  <caption value="Cov Miscellaneous ID To Compare" />
                  <maxLength idref="MaxLength.LongDescription" />
                </definition>
              </public>
            </object>
          </object>
          <object id="LineInput" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="LineInput.Selected" path="Indicators[Type=&quot;Selected&quot;]/bValue" type="boolean" comment="Do not select the &quot;Rerate entire policy&quot; option on this field.  It will force all lines to exist in the session, even on a monoline policy.  This can only be selected within the CPP Pages manuscript.">
              <definition>
                <caption value="Select" />
                <readOnly>
                  <comparison compare="or">
                    <comparison compare="or">
                      <comparison compare="or">
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="LinePrivate.IsAvailable" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.IsPrimaryLine" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LinePrivate.IsLOBSelectable" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="and">
                        <operand idref="Rules.PolicyIsInForce" type="boolean" />
                        <comparison compare="contains">
                          <operand idref="PolicyOutputNonShredded.SelectedLines" type="string" />
                          <operand idref="LineOutput.Type" type="string" />
                        </comparison>
                      </comparison>
                    </comparison>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsPrimaryLocationStateMA" type="string" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LineOutput.Type" type="string" />
                        <operand type="string" value="CommercialAuto" />
                      </comparison>
                    </comparison>
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LinePrivate.IsAvailable" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LinePrivate.IsPrimaryLine" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LinePrivate.IsLOBSelectable" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LineInput.HonorRates" path="HonorRates" type="boolean">
              <definition>
                <caption value="Honor Current Rates ?" />
              </definition>
              <rules>
                <value idref="PolicyInput.HonorRates" />
              </rules>
            </public>
            <object id="LineInputNonShredded" abstract="1">
              <public id="LineInputNonShredded.LineRemovedMidTerm" path="LineRemovedMidTerm" type="boolean">
                <definition>
                  <caption value="Line Removed Mid Term" />
                </definition>
                <rules>
                  <forceRerate value="1" />
                  <default idref="False" />
                </rules>
              </public>
              <public id="LineInputNonShredded.LineRemovedFlat" path="LineRemovedFlat" type="boolean">
                <definition>
                  <caption value="Line Removed Flat" />
                </definition>
                <rules>
                  <default idref="False" />
                  <forceRerate value="1" />
                </rules>
              </public>
              <public id="LineInputNonShredded.LineRemovedMidTermDate" path="LineRemovedMidTermDate" type="date">
                <definition>
                  <caption value="Line Input Non Shredded Line Removed Mid Term Date" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <forceRerate value="1" />
                </rules>
              </public>
            </object>
          </object>
          <object id="LineCoverages" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="AdditionalInterests" path="coverage[Type=&quot;AdditionalInterests&quot;]">
              <minOccurs value="0" />
              <maxOccurs value="*" />
              <object id="AdditionalInterestsInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="AdditionalInterestsInput.FullyEarnedPremium" path="FullyEarnedPremium" type="boolean">
                  <definition>
                    <caption value="Additional Interests Input Fully Earned Premium" />
                  </definition>
                  <rules>
                    <default idref="False" />
                  </rules>
                </public>
                <public id="AdditionalInterestsInput.ApplyLCM" path="Indicators[Type=&quot;ApplyLCM&quot;]/bValue" type="boolean">
                  <definition>
                    <caption value="Apply LCM" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="AdditionalInterestsInput.ApplyRMF" path="Indicators[Type=&quot;ApplyRMF&quot;]/bValue" type="boolean">
                  <definition>
                    <caption value="Apply RMF" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="AdditionalInterestsInput.BasePremium" path="BasePremium" type="float">
                  <definition>
                    <caption value="Base Premium" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
              </object>
              <object id="AdditionalInterestsOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="AdditionalInterestsOutput.Premium" path="Premium" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Premium" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules />
                </public>
                <public id="AdditionalInterestsOutput.LossCostModifier" path="LossCostModifier" type="float">
                  <definition>
                    <caption value="Loss Cost Modifier" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.Factor" />
                  </definition>
                  <rules />
                </public>
                <public id="AdditionalInterestsOutput.CompositieModifier" path="CompositeModifier" type="float">
                  <definition>
                    <caption value="Composite Modifier" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.Factor" />
                  </definition>
                  <rules />
                </public>
                <public id="AdditionalInterestsOutput.ID" path="@id" type="string">
                  <definition>
                    <caption value="ID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <object id="AdditionalInterestsOutputNonShredded">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="AdditionalInterestsOutputNonShredded.FullyEarnedIndicator" type="boolean" comment="" path="FullyEarnedIndicator">
                    <rules>
                      <default idref="AdditionalInterestsInput.FullyEarnedPremium" />
                    </rules>
                    <definition>
                      <caption value="Fully Earned Indicator" />
                    </definition>
                  </public>
                  <public id="AdditionalInterestsOutputNonShredded.TransactionIDWhenAdded" path="TransactionIDWhenAdded" type="string">
                    <definition>
                      <caption value="Transaction ID When Added" />
                    </definition>
                    <rules>
                      <default idref="PolicyOutputNonShredded.CurrentTransactionID" />
                      <nonRating value="1" />
                    </rules>
                  </public>
                </object>
                <public id="AdditionalInterestsOutput.Indicator" path="Indicator" type="boolean">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default value="1" />
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="AdditionalInterestsOutput.Deleted" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then idref="False" />
                      </if>
                    </misc>
                  </rules>
                </public>
                <public id="AdditionalInterestsOutput.Deleted" path="@deleted" type="boolean">
                  <definition>
                    <caption value="Deleted" />
                  </definition>
                  <rules>
                    <default value="0" />
                  </rules>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="AdditionalInterestsOutput.PremiumChange">
                  <definition>
                    <caption value="Premium Change" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="AdditionalInterestsOutput.PremiumWritten">
                  <definition>
                    <caption value="Premium Written" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <written useShared="0" round="1" roundType="round">
                        <writtenRef idref="AdditionalInterestsOutput.Premium" type="float" infoType="term" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                        <writtenInfo idref="AdditionalInterestsOutputNonShredded.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        <writtenInfo idref="AdditionalInterestsPrivate.IsClearPremium" type="boolean" infoType="clearPremCustom" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                        <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                        <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                        <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                        <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                      </written>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="AdditionalInterestsPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="AdditionalInterestsPrivate.ContextPath" caption="" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="//*[@id='" />
                      <argument op="add" idref="AdditionalInterestsOutput.ID" type="string" />
                      <argument op="add" type="string" value="']" />
                    </calculation>
                  </value>
                </private>
                <private id="AdditionalInterestsPrivate.DeleteObjectRecord" caption="" type="string">
                  <value>
                    <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                      <onFailure value="" />
                      <modifySession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                        <nameValue value="AdditionalInterests" name="objectID" dataType="attribute" />
                        <nameValue idref="AdditionalInterestsPrivate.ContextPath" name="context" dataType="attribute" />
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="AdditionalInterestsPrivate.IsClearPremium" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="AdditionalInterestsOutputNonShredded.FullyEarnedIndicator" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="AdditionalInterestsOutput.Deleted" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
              </object>
            </object>
            <object id="CovMiscellaneous" caption="Misc A-Rated Coverages" path="coverage[Type=&quot;Miscellaneous&quot;]">
              <minOccurs value="0" />
              <maxOccurs value="*" />
              <object id="CovMiscellaneousInput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="CovMiscellaneousInput.Description" path="form[Type=&quot;Description&quot;]/LongDescription" type="string">
                  <definition>
                    <caption value="Explanation" />
                    <maxLength idref="MaxLength.LongDescription" />
                    <formatMask value="richtextarea:rows:5:" />
                  </definition>
                </public>
                <public id="CovMiscellaneousInput.UnitsDivider" path="exposure[Type=&quot;UnitsDivider&quot;]/iValue" type="int">
                  <definition>
                    <caption value="Units Divider" />
                    <formatMask value="????" />
                    <maxLength idref="MaxLength.iValue" />
                  </definition>
                  <rules>
                    <default value="1" />
                    <minimum value="1" />
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.UnitsOfExposureDescription" path="exposure[Type=&quot;UnitsOfExposureDescription&quot;]/Description" type="string">
                  <definition>
                    <caption value="Units Of Exposure Description" />
                    <maxLength idref="MaxLength.Description" />
                  </definition>
                </public>
                <public id="CovMiscellaneousInput.ClassCode" path="classCode[Type=&quot;ManuscriptEnd&quot;]/sValue" type="string">
                  <definition>
                    <caption value="Class Code" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
                <public id="CovMiscellaneousInput.UnitsOfExposureIncluded" path="exposure[Type=&quot;UnitsOfExposureIncluded&quot;]/iValue" type="int">
                  <definition>
                    <caption value="Units Of Exposure Included" />
                    <formatMask idref="FormatMask.Limit" />
                    <maxLength idref="MaxLength.iValue" />
                  </definition>
                  <rules>
                    <minimum value="0" />
                    <default value="0" />
                    <maximum idref="CovMiscellaneousInput.UnitsOfExposureEstimated" />
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.PremiumType" path="exposure[Type=&quot;PremiumType&quot;]/sValue" type="string">
                  <definition>
                    <caption value="Premium Type" />
                    <options>
                      <option value="None" caption="None" default="1" />
                      <option value="Flat" caption="Full Premium" />
                      <option value="Calculated" caption="Calculated Premium" />
                    </options>
                    <maxLength idref="MaxLength.sValue" />
                    <formatMask idref="FormatMask.Radio" />
                  </definition>
                  <rules>
                    <default value="None" />
                    <affects>
                      <reference idref="CovMiscellaneousPrivate.ClearARate" effect="onChange" />
                    </affects>
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.FormNumber" path="form[Type=&quot;Number&quot;]/sValue" type="string">
                  <definition>
                    <caption value="Form Number" />
                    <maxLength idref="MaxLength.sValue" />
                    <formatMask idref="FormatMask.Width20" />
                  </definition>
                </public>
                <public id="CovMiscellaneousInput.FormCaption" path="form[Type=&quot;Caption&quot;]/Description" type="string">
                  <definition>
                    <caption value="Title" />
                    <maxLength idref="MaxLength.Description" />
                  </definition>
                </public>
                <public id="CovMiscellaneousInput.ARate" path="modifier[Type=&quot;ARate&quot;]/fValue" type="float">
                  <definition>
                    <maxLength idref="MaxLength.fValue" />
                    <caption>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CovMiscellaneousInput.PremiumType" type="string" />
                            <operand type="string" value="Flat" />
                          </comparison>
                        </condition>
                        <then value="Premium" />
                        <else value="A Rate" />
                      </if>
                    </caption>
                    <formatMask>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CovMiscellaneousInput.PremiumType" type="string" />
                            <operand type="string" value="Flat" />
                          </comparison>
                        </condition>
                        <then idref="FormatMask.Premium" />
                        <else idref="FormatMask.Factor" />
                      </if>
                    </formatMask>
                  </definition>
                  <worksheet />
                </public>
                <public id="CovMiscellaneousInput.ApplyLCM" path="Indicators[Type=&quot;ApplyLCM&quot;]/bValue" type="boolean">
                  <definition>
                    <caption value="Apply LCM" />
                  </definition>
                  <rules>
                    <default idref="False" />
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.ApplyRMF" path="Indicators[Type=&quot;ApplyRMF&quot;]/bValue" type="boolean">
                  <definition>
                    <caption value="Apply RMF" />
                  </definition>
                  <rules>
                    <default idref="False" />
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.UnderwriterOverride" path="modifier[Type=&quot;UnderwriterOverride&quot;]/fValue" type="float">
                  <definition>
                    <caption value="Underwriter Override" />
                    <formatMask idref="FormatMask.Factor" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <minimum value="0" />
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.UnderwriterOverrideIndicator" path="Indicators[Type=&quot;UnderwriterOverride&quot;]/bValue" type="boolean">
                  <definition>
                    <caption value="Underwriter Override Indicator" />
                  </definition>
                </public>
                <public id="CovMiscellaneousInput.UnitsOfExposure" path="limit[Type=&quot;Standard&quot;]/iValue" type="int">
                  <definition>
                    <formatMask idref="FormatMask.Limit" />
                    <maxLength idref="MaxLength.iValue" />
                    <caption value="Units Of Exposure" />
                  </definition>
                  <rules>
                    <minimum value="0" />
                    <value>
                      <if>
                        <condition>
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="PolicyOutput.Audited" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                        </condition>
                        <then idref="CovMiscellaneousInput.UnitsOfExposureEstimated" />
                        <else idref="CovMiscellaneousInput.UnitsOfExposureEstimated" />
                      </if>
                    </value>
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.UnitsOfExposureAudited" path="limit[Type=&quot;StandardAudited&quot;]/iValue" type="int">
                  <definition>
                    <formatMask idref="FormatMask.Limit" />
                    <maxLength idref="MaxLength.iValue" />
                    <caption value="Units of Exposure (Audited)" />
                  </definition>
                  <rules>
                    <minimum value="0" />
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.UnitsOfExposureEstimated" path="limit[Type=&quot;StandardEstimated&quot;]/iValue" type="int">
                  <definition>
                    <formatMask idref="FormatMask.Limit" />
                    <maxLength idref="MaxLength.iValue" />
                    <caption value="Units of Exposure" />
                  </definition>
                  <rules>
                    <minimum value="0" />
                  </rules>
                </public>
                <public id="CovMiscellaneousInput.FullyEarnedPremium" path="FullyEarnedIndicator" type="boolean">
                  <definition>
                    <caption value="Fully Earned Premium" />
                  </definition>
                </public>
                <public id="CovMiscellaneousInput.FlatChargeIndicator" path="FlatChargeIndicator" type="boolean">
                  <definition>
                    <caption value="Flat Charge" />
                  </definition>
                </public>
              </object>
              <object id="CovMiscellaneousPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="CovMiscellaneousPrivate.SetCovMiscAddMode" type="boolean" comment="" caption="Set Cov Misc Add Mode">
                  <value idref="True" />
                  <affects>
                    <reference idref="CovMiscellaneousOutputNonShredded.InCovMiscAddMode" effect="setValue" />
                  </affects>
                </private>
                <private id="CovMiscellaneousPrivate.SetCovMiscEditMode" type="boolean" comment="" caption="Set Cov Misc Add Mode">
                  <value idref="True" />
                  <affects>
                    <reference idref="CovMiscellaneousOutputNonShredded.InCovMiscEditMode" effect="setValue" />
                  </affects>
                </private>
                <private id="CovMiscellaneousPrivate.ClearLocationEditMode" caption="" type="boolean">
                  <value idref="False" />
                  <affects>
                    <reference idref="CovMiscellaneousOutputNonShredded.InCovMiscEditMode" effect="setValue" />
                  </affects>
                </private>
                <private id="CovMiscellaneousPrivate.ClearLocationAddMode" caption="" type="boolean">
                  <value idref="False" />
                  <affects>
                    <reference idref="CovMiscellaneousOutputNonShredded.InCovMiscAddMode" effect="setValue" />
                  </affects>
                </private>
                <private id="CovMiscellaneousPrivate.NotInCovMiscAddMode" caption="" type="float">
                  <value>
                    <comparison compare="eq">
                      <operand idref="CovMiscellaneousOutputNonShredded.InCovMiscAddMode" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.NotInCovMiscEditMode" caption="" type="float">
                  <value>
                    <comparison compare="eq">
                      <operand idref="CovMiscellaneousOutputNonShredded.InCovMiscEditMode" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.ContextPath" type="string" comment="">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="//*[@id='" />
                      <argument op="add" idref="CovMiscellaneousOutput.CovMiscellaneousId" type="string" />
                      <argument op="add" type="string" value="']" />
                    </calculation>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.ShowDelete" caption="" type="boolean">
                  <value>
                    <comparison compare="or">
                      <operand idref="Rules.PolicyIsQuote" type="float" />
                      <operand idref="Rules.PolicyIsInApplication" type="float" />
                    </comparison>
                  </value>
                  <misc>
                    <if>
                      <condition idref="PolicyAdminPrivate.IsLocked" />
                      <then idref="False" />
                    </if>
                    <if>
                      <condition idref="PolicyPrivate.IsInAudit" />
                      <then idref="False" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                  </misc>
                </private>
                <private id="CovMiscellaneousPrivate.ShowMarkForDelete" caption="" type="boolean">
                  <value>
                    <comparison idref="Rules.PolicyIsNotQuoteOrApplication" type="boolean" />
                  </value>
                  <misc>
                    <if>
                      <condition idref="PolicyAdminPrivate.IsLocked" />
                      <then idref="False" />
                    </if>
                    <if>
                      <condition idref="PolicyPrivate.IsInAudit" />
                      <then idref="False" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="False" />
                    </if>
                  </misc>
                </private>
                <private id="CovMiscellaneousPrivate.AddCaption" caption="" type="string">
                  <value value="Add Manuscrip" />
                </private>
                <private id="CovMiscellaneousPrivate.IsPremiumTypeCalculated" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="CovMiscellaneousInput.PremiumType" type="string" />
                      <operand type="string" value="Calculated" />
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.IsPremiumNeeded" caption="" type="boolean">
                  <value>
                    <comparison compare="or">
                      <comparison compare="eq">
                        <operand idref="CovMiscellaneousPrivate.IsPremiumTypeCalculated" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="CovMiscellaneousPrivate.IsPremiumTypeFlat" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.IsPremiumTypeFlat" caption="" type="boolean" comment="In this instance, Flat means the same as Full premium, not a Flat Charge.">
                  <value>
                    <comparison compare="eq">
                      <operand idref="CovMiscellaneousInput.PremiumType" type="string" />
                      <operand type="string" value="Flat" />
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.CalculatedPremium" caption="" type="float" alwaysRun="1">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="CovMiscellaneousPrivate.IsPremiumTypeCalculated" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq">
                            <calculation>
                              <argument op="eq" idref="CovMiscellaneousInput.UnitsOfExposure" type="int" />
                              <argument op="subtract" idref="CovMiscellaneousInput.UnitsOfExposureIncluded" type="int" />
                            </calculation>
                          </argument>
                          <argument op="divide" idref="CovMiscellaneousInput.UnitsDivider" type="int" />
                          <argument op="multiply">
                            <calculation>
                              <argument op="eq" idref="CovMiscellaneousInput.ARate" type="float" />
                              <argument op="multiply" round="1000" roundType="round" idref="CovMiscellaneousOutput.LossCostModifier" type="float" />
                            </calculation>
                          </argument>
                          <argument op="multiply" idref="CovMiscellaneousOutput.CompositeModifier" type="float" />
                          <argument op="multiply" idref="PolicyOutput.TermFactor" type="float" />
                          <argument op="multiply" round="1" roundType="round" type="float" value="1.000" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <worksheet>
                    <comparison compare="ne">
                      <operand idref="CovMiscellaneousInput.PremiumType" type="string" />
                      <operand type="string" value="Flat" />
                    </comparison>
                    <caption idref="CovMiscellaneousPrivate.PremiumCaptionsRW" />
                    <formatMask idref="FormatMask.Premium" />
                  </worksheet>
                </private>
                <private id="CovMiscellaneousPrivate.FlatPremium" caption="" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="CovMiscellaneousPrivate.IsPremiumTypeFlat" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="CovMiscellaneousInput.ARate" type="float" />
                          <argument op="multiply" round="1000" roundType="round" idref="CovMiscellaneousOutput.LossCostModifier" type="float" />
                          <argument op="multiply" idref="CovMiscellaneousOutputNonShredded.RMF" type="float" />
                          <argument op="multiply" round="1" roundType="round" type="float" value="1.000" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <worksheet>
                    <comparison compare="eq">
                      <operand idref="CovMiscellaneousInput.PremiumType" type="string" />
                      <operand type="string" value="Flat" />
                    </comparison>
                    <caption idref="CovMiscellaneousPrivate.PremiumCaptionsRW" />
                    <formatMask idref="FormatMask.Premium" />
                  </worksheet>
                </private>
                <private id="CovMiscellaneousPrivate.IsFullyEarned" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="CovMiscellaneousInput.FullyEarnedPremium" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.IsNotFullyEarned" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="CovMiscellaneousInput.FullyEarnedPremium" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.DeleteObjectRecord" caption="" type="string">
                  <value>
                    <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                      <onFailure value="" />
                      <modifySession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                        <nameValue value="CovMiscellaneous" name="objectID" dataType="attribute" />
                        <nameValue idref="CovMiscellaneousPrivate.ContextPath" name="context" dataType="attribute" />
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.IsClearPremium" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="CovMiscellaneousInput.FullyEarnedPremium" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="CovMiscellaneousOutput.Deleted" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="CovMiscellaneousPrivate.PremiumCaptionsRW" caption="" type="string">
                  <value value="Premium" />
                  <misc>
                    <if>
                      <condition idref="CovMiscellaneousInput.FlatChargeIndicator" type="boolean" />
                      <then value="Premium [Flat]" />
                    </if>
                    <if>
                      <condition idref="CovMiscellaneousPrivate.IsFullyEarned" type="boolean" />
                      <then value="Premium [Fully Earned]" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <operand idref="CovMiscellaneousPrivate.IsFullyEarned" type="boolean" />
                          <operand idref="CovMiscellaneousInput.FlatChargeIndicator" type="boolean" />
                        </comparison>
                      </condition>
                      <then value="Premium [Flat / Fully Earned]" />
                    </if>
                  </misc>
                </private>
                <private id="CovMiscellaneousPrivate.ClearARate" type="float" comment="" alwaysRun="1">
                  <affects>
                    <reference idref="CovMiscellaneousInput.ARate" effect="setValue" />
                  </affects>
                </private>
                <private id="CovMiscellaneousPrivate.SetIDToCompare" caption="" type="string">
                  <affects>
                    <reference idref="LineOutputNonShredded.CovMiscellaneousIDToCompare" effect="setValue" />
                  </affects>
                  <value idref="CovMiscellaneousOutput.CovMiscellaneousId" />
                </private>
                <private id="CovMiscellaneousPrivate.IsCurrentCoverage" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="LineOutputNonShredded.CovMiscellaneousIDToCompare" type="string" />
                      <operand idref="CovMiscellaneousOutput.CovMiscellaneousId" type="string" />
                    </comparison>
                  </value>
                </private>
              </object>
              <object id="CovMiscellaneousOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="CovMiscellaneousOutput.Premium" type="float" comment="" path="Premium">
                  <definition>
                    <caption value="Premium" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumInput" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="CovMiscellaneousOutput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <operand idref="CovMiscellaneousPrivate.IsFullyEarned" type="boolean" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CovMiscellaneousPrivate.CalculatedPremium" type="float" />
                            <argument op="add" idref="CovMiscellaneousPrivate.FlatPremium" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                    <affects>
                      <reference idref="CovMiscellaneousOutput.StatCodeAnnualStatementLOBCode" effect="postEffect" />
                      <reference idref="CovMiscellaneousOutput.StatCodeClass" effect="postEffect" />
                      <reference idref="CovMiscellaneousOutput.StatCodeSubline" effect="postEffect" />
                    </affects>
                    <misc>
                      <if>
                        <condition idref="CovMiscellaneousPrivate.IsFullyEarned" />
                        <then idref="CovMiscellaneousOutput.PremiumFullyEarned" />
                      </if>
                    </misc>
                  </rules>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption idref="CovMiscellaneousPrivate.PremiumCaptionsRW" />
                    <formatMask idref="FormatMask.Premium" />
                  </worksheet>
                </public>
                <public id="CovMiscellaneousOutput.LossCostModifier" type="float" comment="" path="LossCostModifier">
                  <definition>
                    <caption value="Loss Cost Modifier" />
                    <readOnly idref="True" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.Factor" />
                  </definition>
                  <rules>
                    <default value="1" />
                  </rules>
                </public>
                <public id="CovMiscellaneousOutput.CompositeModifier" type="float" comment="" path="CompositeModifier">
                  <rules>
                    <default value="1" />
                  </rules>
                  <definition>
                    <caption value="Composite Modifier" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.Factor" />
                  </definition>
                </public>
                <public id="CovMiscellaneousOutput.Indicator" type="boolean" comment="" path="Indicator">
                  <rules>
                    <default idref="True" />
                    <misc>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CovMiscellaneousOutput.Deleted" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </condition>
                        <then idref="False" />
                        <else idref="True" />
                      </if>
                    </misc>
                  </rules>
                  <definition>
                    <caption value="Misc Cov Indicator" />
                  </definition>
                </public>
                <public id="CovMiscellaneousOutput.StatCodeSubline" path="statCode[Type=&quot;Subline&quot;]/sValue" type="string" class="StatCode">
                  <definition>
                    <caption value="Stat Code Subline" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
                <public id="CovMiscellaneousOutput.StatCodeAnnualStatementLOBCode" path="statCode[Type=&quot;AnnualStatementLOBCode&quot;]/sValue" type="string" class="StatCode">
                  <definition>
                    <caption value="Stat Code Annual Statement LOB Code" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
                <public id="CovMiscellaneousOutput.StatCodeClass" path="statCode[Type=&quot;Class&quot;]/sValue" type="string" class="StatCode">
                  <definition>
                    <caption value="Stat Code Class" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
                <object id="CovMiscellaneousOutputNonShredded">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="CovMiscellaneousOutputNonShredded.IncreasedLimitFactor" path="modifier[Type=&quot;IncreasedLimitFactor&quot;]/fValue" type="float">
                    <definition>
                      <caption value="ILF" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.Factor" />
                    </definition>
                  </public>
                  <public id="CovMiscellaneousOutputNonShredded.RMF" type="float" comment="" path="modifier[Type=&quot;RMF&quot;]/Factor">
                    <rules />
                    <definition>
                      <caption value="RMF" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.Factor" />
                    </definition>
                  </public>
                  <public id="CovMiscellaneousOutputNonShredded.InCovMiscAddMode" path="InCovMiscAddMode" type="boolean">
                    <definition>
                      <caption value="In Cov Misc Add Mode" />
                    </definition>
                    <rules>
                      <default idref="True" />
                    </rules>
                  </public>
                  <public id="CovMiscellaneousOutputNonShredded.InCovMiscEditMode" path="InCovMiscEditMode" type="boolean">
                    <definition>
                      <caption value="Cov Miscellaneous Output Non Shredded In Cov Misc Edit Mode" />
                    </definition>
                    <rules>
                      <default idref="True" />
                    </rules>
                  </public>
                  <public id="CovMiscellaneousOutputNonShredded.EditCaption" path="EditCaption" type="string">
                    <definition>
                      <caption value="Edit Caption" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                    <rules>
                      <value value="Detail" />
                    </rules>
                  </public>
                  <public id="CovMiscellaneousOutputNonShredded.TransactionIDWhenAdded" path="TransactionIDWhenAdded" type="string">
                    <definition>
                      <caption value="Transaction ID When Added" />
                    </definition>
                    <rules>
                      <default idref="PolicyOutputNonShredded.CurrentTransactionID" />
                      <nonRating value="1" />
                    </rules>
                  </public>
                </object>
                <public id="CovMiscellaneousOutput.CovMiscellaneousId" path="@id" type="string">
                  <definition>
                    <caption value="Cov Miscellaneous Id" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <public id="CovMiscellaneousOutput.Deleted" path="@deleted" type="boolean">
                  <definition>
                    <caption value="Deleted" />
                  </definition>
                  <rules>
                    <default value="0" />
                  </rules>
                </public>
                <public id="CovMiscellaneousOutput.PremiumFullyEarned" type="float" comment="" path="PremiumFE">
                  <definition>
                    <caption value="Premium" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumInput" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="CovMiscellaneousOutput.Indicator" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CovMiscellaneousPrivate.CalculatedPremium" type="float" />
                            <argument op="add" idref="CovMiscellaneousPrivate.FlatPremium" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                    <affects>
                      <reference idref="CovMiscellaneousOutput.StatCodeAnnualStatementLOBCode" effect="postEffect" />
                      <reference idref="CovMiscellaneousOutput.StatCodeClass" effect="postEffect" />
                      <reference idref="CovMiscellaneousOutput.StatCodeSubline" effect="postEffect" />
                    </affects>
                  </rules>
                  <worksheet>
                    <caption idref="CovMiscellaneousPrivate.PremiumCaptionsRW" />
                    <formatMask idref="FormatMask.Premium" />
                  </worksheet>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="CovMiscellaneousOutput.PremiumChange">
                  <definition>
                    <caption value="Premium Change" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="CovMiscellaneousOutput.PremiumWritten">
                  <definition>
                    <caption value="Premium Written" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <written useShared="0" round="1" roundType="round">
                        <writtenRef idref="CovMiscellaneousOutput.Premium" type="float" infoType="term" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                        <writtenInfo idref="CovMiscellaneousInput.FullyEarnedPremium" type="boolean" infoType="fullyEarned" />
                        <writtenInfo idref="CovMiscellaneousInput.FlatChargeIndicator" type="boolean" infoType="flatCharge" />
                        <writtenInfo idref="CovMiscellaneousPrivate.IsClearPremium" type="boolean" infoType="clearPremCustom" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                        <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                        <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                        <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                        <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                      </written>
                    </value>
                  </rules>
                  <worksheet>
                    <caption value="Premium Written" />
                    <formatMask idref="FormatMask.Premium" />
                  </worksheet>
                </public>
              </object>
            </object>
            <object id="LineCoveragesPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private type="float" id="LineCoveragesPrivate.AdditionalInterestsChangeSum">
                <value>
                  <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalInterests">
                    <reference idref="AdditionalInterestsOutput.PremiumChange" type="float" />
                  </iterator>
                </value>
              </private>
              <private type="float" id="LineCoveragesPrivate.AdditionalInterestsWrittenSum">
                <value>
                  <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="AdditionalInterests">
                    <reference idref="AdditionalInterestsOutput.PremiumWritten" type="float" />
                  </iterator>
                </value>
              </private>
              <private type="float" id="LineCoveragesPrivate.CovMiscellaneousChangeSum">
                <value>
                  <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="CovMiscellaneous">
                    <reference idref="CovMiscellaneousOutput.PremiumChange" type="float" />
                  </iterator>
                </value>
              </private>
              <private type="float" id="LineCoveragesPrivate.CovMiscellaneousWrittenSum">
                <value>
                  <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="CovMiscellaneous">
                    <reference idref="CovMiscellaneousOutput.PremiumWritten" type="float" />
                  </iterator>
                </value>
              </private>
            </object>
            <object id="CovPolicyMinimum" abstract="1">
              <object id="CovPolicyMinimumOutput" abstract="1">
                <public id="CovPolicyMinimumOutput.Indicator" path="Indicator" type="boolean" override="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="lt">
                        <operand idref="LinePrivate.LinePremium" type="float" />
                        <operand idref="CovPolicyMinimumPrivate.MinimumPolicyPremiumAmount" type="int" />
                      </comparison>
                    </value>
                  </rules>
                </public>
                <public id="CovPolicyMinimumOutput.Premium" path="Premium" type="float" override="1">
                  <definition>
                    <caption value="Minimum Premium" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.Premium" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="CovPolicyMinimumOutput.StatCodeAnnualStatementLOBCode" effect="postEffect" />
                      <reference idref="CovPolicyMinimumOutput.StatCodeClass" effect="postEffect" />
                      <reference idref="CovPolicyMinimumOutput.StatCodeSubline" effect="postEffect" />
                    </affects>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="CovPolicyMinimumOutput.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                        </condition>
                        <then value="0" />
                        <else>
                          <calculation>
                            <argument op="eq" idref="CovPolicyMinimumPrivate.MinimumPolicyPremiumAmount" type="int" />
                            <argument op="subtract" idref="LinePrivate.LinePremium" type="float" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </rules>
                </public>
                <public id="CovPolicyMinimumOutput.PremiumWritten" path="written" type="float" class="excludeInChangeSummary" override="1" alwaysRun="1" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This will be handled manually within the coverage.">
                  <definition>
                    <caption value="Premium Written" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.Premium" />
                  </definition>
                  <rules>
                    <value>
                      <written useShared="0" round="1" roundType="round">
                        <writtenRef idref="CovPolicyMinimumNonShredded.PremiumWrittenCalc" type="float" infoType="term" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                        <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                        <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                        <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                        <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                        <writtenInfo type="float" value="1.0" infoType="proRate" />
                        <writtenInfo type="int" value="0" infoType="shortRate" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                      </written>
                    </value>
                  </rules>
                  <descriptors>
                    <descriptor code="Minimum" />
                  </descriptors>
                </public>
                <object id="CovPolicyMinimumNonShredded" abstract="1">
                  <public id="CovPolicyMinimumNonShredded.PriorAtCancel" path="PriorAtCancel" type="float">
                    <definition>
                      <caption value="Prior To Cancel" />
                    </definition>
                  </public>
                  <public id="CovPolicyMinimumNonShredded.PremiumWrittenMirror" path="written" type="float">
                    <definition>
                      <caption value="Premium Written Mirror" />
                    </definition>
                  </public>
                  <public id="CovPolicyMinimumNonShredded.PremiumWrittenCalc" path="PremiumWrittenCalc" type="float" class="excludeInChangeSummary" alwaysRun="1">
                    <definition>
                      <caption value="Cov Policy Minimum Non Shredded Premium Written Calc" />
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.Premium" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="or">
                              <comparison compare="or">
                                <comparison compare="lt">
                                  <operand idref="CovPolicyMinimumPrivate.MinimumPolicyPremiumAmount" type="int" />
                                  <operand idref="LinePrivate.LinePremiumWritten" type="float" />
                                </comparison>
                                <operand idref="PolicyPrivate.IsFlatCancel" type="boolean" />
                              </comparison>
                              <operand idref="LineInputNonShredded.LineRemovedFlat" type="boolean" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="CovPolicyMinimumPrivate.MinimumPolicyPremiumAmount" type="int" />
                              <argument op="subtract" idref="LinePrivate.LinePremiumWritten" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                      <misc>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <comparison compare="and">
                                <operand idref="ConstantsPolicyAdminProcessing.IsCancel" type="boolean" />
                                <comparison compare="eq">
                                  <operand idref="PolicyPrivate.IsFlatCancel" type="boolean" />
                                  <operand idref="False" type="int" />
                                </comparison>
                              </comparison>
                              <comparison compare="or">
                                <comparison compare="gt">
                                  <operand idref="CovPolicyMinimumNonShredded.Prior" type="float" />
                                  <operand type="int" value="0" />
                                </comparison>
                                <comparison compare="eq">
                                  <operand idref="CovPolicyMinimumPrivate.RetainPriorMinimumWritten" type="boolean" />
                                  <operand idref="False" type="int" />
                                </comparison>
                              </comparison>
                            </comparison>
                          </condition>
                          <then idref="CovPolicyMinimumPrivate.CancelWrittenPremium" />
                        </if>
                        <if>
                          <condition>
                            <comparison compare="and">
                              <operand idref="ConstantsPolicyAdminProcessing.IsFinalAuditAfterCancel" type="boolean" />
                              <comparison compare="or">
                                <comparison compare="gt">
                                  <operand idref="CovPolicyMinimumNonShredded.Prior" type="float" />
                                  <operand type="int" value="0" />
                                </comparison>
                                <comparison compare="eq">
                                  <operand idref="CovPolicyMinimumPrivate.RetainPriorMinimumWritten" type="boolean" />
                                  <operand idref="False" type="int" />
                                </comparison>
                              </comparison>
                            </comparison>
                          </condition>
                          <then idref="CovPolicyMinimumPrivate.CancelWrittenPremium" />
                        </if>
                        <if>
                          <condition idref="PolicyPrivate.IsCurrentTransactionInformation" />
                          <then idref="CovPolicyMinimumNonShredded.Prior" type="float" />
                        </if>
                      </misc>
                      <minimum>
                        <if>
                          <condition>
                            <comparison compare="or">
                              <comparison compare="or">
                                <comparison compare="or">
                                  <operand idref="PolicyPrivate.IsFlatCancel" type="boolean" />
                                  <comparison compare="eq">
                                    <operand idref="CovPolicyMinimumPrivate.IsCancelNotShortRate" type="boolean" />
                                    <operand idref="True" type="int" />
                                  </comparison>
                                </comparison>
                                <comparison compare="eq">
                                  <operand idref="CovPolicyMinimumPrivate.IsFinalAuditAfterCancelNotShortRate" type="boolean" />
                                  <operand idref="True" type="int" />
                                </comparison>
                              </comparison>
                              <comparison compare="and">
                                <operand idref="PolicyPrivate.IsCurrentTransactionRescind" type="boolean" />
                                <comparison compare="eq">
                                  <operand idref="CovPolicyMinimumNonShredded.PriorTerm" type="float" />
                                  <operand idref="CovPolicyMinimumPrivate.MinimumPolicyPremiumAmount" type="int" />
                                </comparison>
                              </comparison>
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else idref="CovPolicyMinimumPrivate.MinimumCheck" />
                        </if>
                      </minimum>
                      <affects>
                        <reference idref="CovPolicyMinimumPrivate.SetPriorAtCancelCheck" effect="postEffect" />
                      </affects>
                    </rules>
                  </public>
                  <public id="CovPolicyMinimumNonShredded.PriorTerm" path="priorTerm" type="float" comment="DO NOT MODIFY.  This field is referencing the prior term value of this coverage and this value is set by Server.">
                    <definition>
                      <caption value="Cov Policy Minimum Non Shredded Prior Term" />
                    </definition>
                  </public>
                </object>
                <public id="CovPolicyMinimumOutput.StatCodeAnnualStatementLOBCode" path="statCode[Type=&quot;AnnualStatementLOBCode&quot;]/sValue" type="string" class="StatCode" override="1">
                  <definition>
                    <caption value="Stat Code Annual Statement LOB Code" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
                <public id="CovPolicyMinimumOutput.StatCodeClass" path="statCode[Type=&quot;Class&quot;]/sValue" type="string" class="StatCode" override="1">
                  <definition>
                    <caption value="Stat Code Class" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
                <public id="CovPolicyMinimumOutput.StatCodeSubline" path="statCode[Type=&quot;Subline&quot;]/sValue" type="string" class="StatCode" override="1">
                  <definition>
                    <caption value="Stat Code Subline" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
              </object>
              <object id="CovPolicyMinimumPrivate" abstract="1">
                <private id="CovPolicyMinimumPrivate.SetPriorAtCancel" caption="" type="float" alwaysRun="1">
                  <affects>
                    <reference idref="CovPolicyMinimumNonShredded.PriorAtCancel" effect="setValue" />
                  </affects>
                  <value idref="CovPolicyMinimumNonShredded.Prior" />
                </private>
                <private id="CovPolicyMinimumPrivate.CancelProRateFactor" caption="" type="float">
                  <value>
                    <calculation>
                      <argument op="eq" type="int" value="2" />
                      <argument op="subtract" idref="CurrentTransaction.ProrateFactor" type="float" />
                    </calculation>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.CancelWrittenPremium" caption="" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="CovPolicyMinimumPrivate.RetainPriorMinimumWritten" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then idref="CovPolicyMinimumPrivate.CancelWrittenPremiumProrate" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="CovPolicyMinimumPrivate.MinimumPolicyPremiumAmount" type="int" />
                          <argument op="subtract" idref="LinePrivate.LinePremiumWritten" type="float" />
                          <argument op="subtract" idref="LinePrivate.FullyEarnedWrittenSum" type="float" />
                          <argument op="min" idref="CovPolicyMinimumNonShredded.Prior" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.SetPriorAtCancelCheck" caption="" type="float" alwaysRun="1">
                  <value>
                    <if>
                      <condition idref="ConstantsPolicyAdminProcessing.IsCancel" />
                      <then idref="CovPolicyMinimumPrivate.SetPriorAtCancel" />
                    </if>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.MinimumCheck" caption="" type="float">
                  <value>
                    <if>
                      <condition idref="ConstantsPolicyAdminProcessing.IsReinstate" />
                      <then idref="CovPolicyMinimumNonShredded.PriorAtCancel" />
                      <else idref="CovPolicyMinimumNonShredded.Prior" />
                    </if>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.RetainPriorMinimumWritten" caption="" type="boolean">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="CovPolicyMinimumPrivate.IsCancelNotShortRate" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="CovPolicyMinimumPrivate.IsFinalAuditAfterCancelNotShortRate" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="False" />
                      <else>
                        <lookup>
                          <tableRef value="(custom defined)" idref="TableNames.RetainPriorMinimumWritten" />
                          <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                          <fieldRef value="Boolean" />
                          <keyRef idref="PolicyInput.PrimaryRatingState" type="string" name="State" />
                        </lookup>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.CancelWrittenPremiumProrate" caption="" type="float">
                  <value>
                    <calculation>
                      <argument op="eq" idref="CovPolicyMinimumNonShredded.Prior" type="float" />
                      <argument op="multiply" round="1" roundType="round" idref="CovPolicyMinimumPrivate.CancelWrittenPremiumProrateFactorCheck" type="float" />
                    </calculation>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.IsCancelNotShortRate" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="PolicyPrivate.IsCurrentTransactionCancel" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" />
                        <operand type="int" value="1" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.MinimumPolicyPremiumAmount" type="int">
                  <value>
                    <calculation>
                      <argument op="eq" idref="CovPolicyMinimumPrivate.MinimumPolicyPremiumAnnualAmount" type="int" />
                      <argument op="multiply">
                        <calculation>
                          <argument op="eq" idref="PolicyOutput.TermFactor" type="float" />
                          <argument op="min" type="int" value="1" />
                        </calculation>
                      </argument>
                    </calculation>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.IsFinalAuditAfterCancelNotShortRate" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <operand idref="ConstantsPolicyAdminProcessing.IsFinalAuditAfterCancel" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" />
                        <operand type="int" value="1" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.CancelWrittenPremiumProrateFactorCheck" caption="" type="float">
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="ConstantsPolicyAdminProcessing.IsCancel" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="CurrentTransaction.ProrateFactor" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="ConstantsPolicyAdminProcessing.IsFinalAuditAfterCancel" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </condition>
                      <then idref="CovPolicyMinimumPrivate.EarnedPremiumFactor" />
                    </if>
                  </misc>
                </private>
                <private id="CovPolicyMinimumPrivate.EarnedPremiumFactor" caption="" type="float">
                  <value>
                    <calculation>
                      <argument op="eq" type="int" value="1" />
                      <argument op="subtract" idref="WrittenPremiumSharedConfiguration.DaysRemainingFactor" type="float" />
                    </calculation>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.PremiumChangeBackupCalc" type="float" comment="" caption="Cov Policy Minimum Non Shredded Premium Change Backup Calc" path="PremiumChangeBackupCalc">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="CovPolicyMinimumNonShredded.PremiumWrittenMirror" type="float" />
                            <operand type="int" value="0" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="CovPolicyMinimumNonShredded.Prior" type="float" />
                            <operand type="int" value="0" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="CovPolicyMinimumNonShredded.PremiumWrittenMirror" type="float" />
                          <argument op="subtract" idref="CovPolicyMinimumNonShredded.Prior" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="CovPolicyMinimumPrivate.LineRemovedFlat" caption="" type="boolean">
                  <value>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                          <operand type="string" value="Endorse" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LineInputNonShredded.LineRemovedFlat" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </value>
                </private>
              </object>
            </object>
          </object>
          <object id="HonoredManuscripts" path="honoredmanuscripts">
            <minOccurs value="0" />
            <maxOccurs value="52" />
            <object id="HonoredManuscriptsOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="HonoredManuscriptsOutput.State" path="State" type="string">
                <definition>
                  <caption value="State" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="HonoredManuscriptsOutput.RiskManuscriptID" path="RiskManuscriptID" type="string">
                <definition>
                  <caption value="Risk Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="HonoredManuscriptsOutput.RatingManuscriptID" path="RatingManuscriptID" type="string">
                <definition>
                  <caption value="Rating Manuscript ID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="HonoredManuscriptsOutput.ID" path="@id" type="string">
                <definition>
                  <caption value="Honored Manuscript ID" />
                  <maxLength idref="MaxLength.ID" />
                </definition>
              </public>
              <public id="HonoredManuscriptsOutput.RateEffectiveDate" path="RateEffectiveDate" type="date">
                <definition>
                  <caption value="Rate Effective Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
            </object>
            <object id="HonoredManuscriptsPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="HonoredManuscriptsPrivate.SetStateFromState" caption="" type="string" alwaysRun="1">
                <value idref="LocationInput.State" />
                <affects>
                  <reference idref="HonoredManuscriptsOutput.State" effect="setValue" />
                </affects>
              </private>
              <private id="HonoredManuscriptsPrivate.DeleteObjectRecord" caption="" type="string">
                <value>
                  <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                    <onFailure value="" />
                    <modifySession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="HonoredManuscripts" name="objectID" dataType="attribute" />
                      <nameValue idref="HonoredManuscriptsPrivate.ContextPath" name="context" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="HonoredManuscriptsPrivate.ContextPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="HonoredManuscriptsOutput.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="HonoredManuscriptsPrivate.SetManuscriptIDs" caption="" type="string" alwaysRun="1">
                <value>
                  <iterator type="string" scope="first" action="sum" idref="Risk">
                    <reference idref="RiskManuScript.SetRatingManuscriptID" type="string" />
                    <where>
                      <comparison compare="eq">
                        <operand idref="RiskOutputNonShredded.RiskState" type="string" />
                        <operand idref="HonoredManuscriptsOutput.State" type="string" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
            </object>
          </object>
          <object id="ExperienceRating" path="lineExperienceRating">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="ExperienceRatingInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="ExperienceRatingInput.NumberYearsLossInformation" path="exposure[Type=&quot;NumberYearsLossInformation&quot;]/iValue" type="int">
                <definition>
                  <caption value="Number Years Loss Information" />
                  <maxLength idref="MaxLength.iValue" />
                  <options>
                    <option value="1" caption="1" />
                    <option value="2" caption="2" />
                    <option value="3" caption="3" />
                  </options>
                  <formatMask idref="FormatMask.BlankOption" />
                </definition>
                <rules>
                  <default value="3" />
                </rules>
              </public>
              <public id="ExperienceRatingInput.AnyLosses" path="Indicators[Type=&quot;AnyLosses&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any Losses?" />
                  <options>
                    <option value="0" caption="No" />
                    <option value="1" caption="Yes" />
                  </options>
                </definition>
              </public>
              <public id="ExperienceRatingInput.NumberOfLossesEqualOrGreaterThanMSL" path="exposure[Type=&quot;NumberOfLossesEqualOrGreaterThanMSL&quot;]/iValue" type="int">
                <definition>
                  <caption value="Number Of Losses Equal Or Greater Than MSL" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
                <rules>
                  <minimum value="0" />
                  <maximum value="99" />
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="ExperienceRatingInput.AnyLosses" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="0" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="ExperienceRatingInput.CombinedAmtAllLossesBelowMSL" path="exposure[Type=&quot;CombinedAmtAllLossesBelowMSL&quot;]/fValue" type="float">
                <definition>
                  <caption value="Enter the combined amount of all losses below MSL" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
                <rules>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="ExperienceRatingInput.AnyLosses" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </condition>
                      <then value="0" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="ExperienceRatingInput.DateLossRunsCreated" path="exposure[Type=&quot;LossRunsEndDate&quot;]/dValue" type="date">
                <definition>
                  <caption value="Loss Runs End Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
                <rules>
                  <default>
                    <session sessionValue="date" />
                  </default>
                </rules>
              </public>
              <public id="ExperienceRatingInput.ApplyExperienceRatingFactor" path="Indicators[Type=&quot;ApplyExperienceRatingFactor&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Apply calculated factor?" />
                </definition>
                <rules>
                  <default idref="False" />
                </rules>
              </public>
              <public id="ExperienceRatingInput.ExperienceRatingOverride" path="Indicators[Type=&quot;ExperienceRatingOverride&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Overrides" />
                </definition>
                <rules>
                  <default idref="False" />
                </rules>
              </public>
            </object>
            <object id="ExperienceRatingOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="ExperienceRatingOutput.MaximumSingleLoss" path="exposure[Type=&quot;MaximumSingleLoss&quot;]/fValue" type="float">
                <definition>
                  <caption value="Maximum Single Loss" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.Limit" />
                  <readOnly idref="True" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.ExpectedLossRatio" path="exposure[Type=&quot;ExpectedLossRatio&quot;]/fValue" type="float">
                <definition>
                  <caption value="Expected Loss Ratio" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.ExpectedExperienceRatio" path="exposure[Type=&quot;ExpectedExperienceRatio&quot;]/fValue" type="float">
                <definition>
                  <caption value="Expected Experience Ratio" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.CompanySubjectLossCost" path="exposure[Type=&quot;CompanySubjectLossCost&quot;]/fValue" type="float">
                <definition>
                  <caption value="Company Subject Loss Cost" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.LossesSubjectToExperienceMod" path="exposure[Type=&quot;LossesSubjectToExperienceMod&quot;]/fValue" type="float">
                <definition>
                  <caption value="Experience Rating Output Losses Subject To Experience Mod" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.TotalIncludableLosses" path="exposure[Type=&quot;TotalIncludableLosses&quot;]/fValue" type="float">
                <definition>
                  <caption value="Total Includable Losses" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.ActualExperienceRatio" path="exposure[Type=&quot;ActualExperienceRatio&quot;]/fValue" type="float">
                <definition>
                  <caption value="Actual Experience Ratio" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.CredibilityFactor" path="exposure[Type=&quot;CredibilityFactor&quot;]/fValue" type="float">
                <definition>
                  <caption value="Credibility Factor" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExperienceRatingOutput.ExperienceModificationFactor" path="ExperienceModificationFactor" type="float">
                <definition>
                  <caption value="Experience Modification Factor" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.FactorDisplay" />
                </definition>
                <rules>
                  <default value="1.000" />
                </rules>
              </public>
              <object id="ExperienceRatingOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="ExperienceRatingOutputNonShredded.ExpRatingPageHeader" path="ExpRatingPageHeader" type="string">
                  <definition>
                    <caption value="Exp Rating Page Header" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" idref="LineOutput.Type" type="string" />
                        <argument op="add" type="string" value=" Experience Rating" />
                      </calculation>
                    </value>
                  </rules>
                </public>
              </object>
            </object>
            <object id="ExperienceRatingPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="ExperienceRatingPrivate.AnyLossesTrue" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="ExperienceRatingInput.AnyLosses" type="boolean" />
                    <operand type="int" value="1" />
                  </comparison>
                </value>
              </private>
              <private id="ExperienceRatingPrivate.ShowLossInformation" caption="" type="boolean">
                <value>
                  <comparison idref="ExperienceRatingPrivate.AnyLossesTrue" type="boolean" />
                </value>
              </private>
              <private id="ExperienceRatingPrivate.CalculateExperienceFactor" caption="" type="float" />
              <object id="ExperienceRatingManuscript">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="ExperienceRatingManuscript.ManuScriptID" type="string" comment="" path="ManuScriptID">
                  <definition>
                    <caption value="Experience Rating ManuscriptID" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="LineInput.HonorRates" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="ExperienceRatingManuscript.ManuScriptID" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </comparison>
                        </condition>
                        <then idref="ExperienceRatingManuscript.ManuScriptID" />
                        <else idref="ExperienceRatingManuscript.ManuScriptIDBroker" />
                      </if>
                    </value>
                  </rules>
                </public>
                <private id="ExperienceRatingManuscript.ManuScriptIDBroker" type="string" comment="" caption="Experience Rating  Manuscript ID Broker">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="ne">
                          <operand idref="ExperienceRatingManuscript.ManuScriptIDBrokerByCarrier" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </condition>
                      <then idref="ExperienceRatingManuscript.ManuScriptIDBrokerByCarrier" />
                      <else idref="ExperienceRatingManuscript.ManuScriptIDBrokerByNonCarrier" />
                    </if>
                  </value>
                </private>
                <private id="ExperienceRatingManuscript.LineOfBusinessKeyByCarrier" type="string">
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="Carrier" />
                      <argument op="add" idref="LineOutput.Type" type="string" />
                    </calculation>
                  </value>
                </private>
                <private id="ExperienceRatingManuscript.ManuScriptIDBrokerByCarrier" type="string" comment="" caption="Line Manu Script Manu Script ID Broker">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="ExperienceRatingManuscript.LineOfBusinessKeyByCarrier" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="ExperienceRatingManuscript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="ExperienceRatingManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="ExperienceRatingManuscript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="ExperienceRatingManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="ExperienceRatingManuscript.RateEffectiveDateBroker" type="date" caption="temp">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/keys/key[@name=&quot;effectiveDateNew&quot;]/@value">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="LineManuScript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="LineManuScript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="LineManuScript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="LineManuScript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="ExperienceRatingManuscript.RateEffectiveDate" type="date" caption="temp">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="LineInput.HonorRates" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="LineManuScript.HonoredRateEffectiveDate" type="date" />
                              <operand type="string" value="1899-12-30" />
                            </comparison>
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LineManuScript.HonoredRateEffectiveDate" type="date" />
                            <operand type="int" value="0" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineManuScript.HonoredRateEffectiveDate" />
                      <else idref="LineManuScript.RateEffectiveDateBroker" />
                    </if>
                  </value>
                </private>
                <private id="ExperienceRatingManuscript.ManuScriptIDBrokerByNonCarrier" type="string" comment="" caption="Experience Rating Manuscript Manu Script ID Broker">
                  <value>
                    <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="" />
                      <nameValues>
                        <nameValue value="" name="keys" dataType="element">
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="lob" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="ExperienceRatingManuscript.LineOfBusinessKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue value="state" name="name" dataType="attribute" />
                            <nameValue value="=" name="operator" dataType="attribute" />
                            <nameValue idref="ExperienceRatingManuscript.StateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="key" dataType="element">
                            <nameValue idref="ExperienceRatingManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="&lt;=" name="operator" dataType="attribute" />
                            <nameValue idref="ExperienceRatingManuscript.EffectiveDateKey" name="value" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue idref="ExperienceRatingManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="sort" dataType="element">
                            <nameValue value="version" name="name" dataType="attribute" />
                            <nameValue value="descending" name="direction" dataType="attribute" />
                          </nameValue>
                        </nameValue>
                      </nameValues>
                    </request>
                  </value>
                </private>
                <private id="ExperienceRatingManuscript.EffectiveDateKeyName" caption="" type="string">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                          <operand type="string" value="Renew" />
                        </comparison>
                      </condition>
                      <then idref="ManuScriptKeys.effectiveDateRenewal" />
                      <else idref="ManuScriptKeys.effectiveDateNew" />
                    </if>
                  </value>
                </private>
                <private id="ExperienceRatingManuscript.EffectiveDateKey" caption="" type="string">
                  <value idref="PolicyInput.EffectiveDate" />
                </private>
                <private id="ExperienceRatingManuscript.StateKey" caption="" type="string">
                  <value idref="PolicyInput.PrimaryRatingState" />
                </private>
                <private id="ExperienceRatingManuscript.LineOfBusinessKey" caption="" type="string">
                  <value idref="LineOutput.Type" />
                </private>
              </object>
              <private id="ExperienceRatingPrivate.ShowCalculate" caption="" type="boolean">
                <value>
                  <comparison idref="True" type="int" />
                </value>
                <misc>
                  <if>
                    <condition idref="PolicyAdminPrivate.IsLocked" />
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="ExperienceRatingPrivate.CalculateExperienceFactorCheck" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="is">
                        <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                        <operand type="string" value="New,Renew,Rewrite,Restart" />
                      </comparison>
                    </condition>
                    <then idref="ExperienceRatingPrivate.CalculateExperienceFactor" />
                  </if>
                </value>
              </private>
              <private id="ExperienceRatingPrivate.AllowExperienceRating" caption="" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="ExperienceRatingPrivate.CalculateExperienceFactorCheck" effect="preEffect" />
                </affects>
              </private>
            </object>
          </object>
          <object id="LineUnderwriting" path="lineUnderwriting">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="LineUnderwritingInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
            <object id="LineUnderwritingOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
            <object id="LineUnderwritingPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="TaxesSurcharges" path="">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="LineKYMunicipalTax">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineKYMunicipalTaxOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineKYMunicipalTaxOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;KYMunicipalTax&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="KY Municipal Tax" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineKYMunicipalTaxOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineKYMunicipalTaxOutput.Change" path="lineStateTaxSurcharge[Type=&quot;KYMunicipalTax&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line KY Municipal Tax Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineKYMunicipalTaxOutput.Written" path="lineStateTaxSurcharge[Type=&quot;KYMunicipalTax&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line KY Municipal Tax Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineKYMunicipalTaxOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineKYMunicipalTaxOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;KYMunicipalTax&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line KY Municipal Tax Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="KY" />
                  </rules>
                </public>
                <public id="LineKYMunicipalTaxOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;KYMunicipalTax&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <value idref="LineKYMunicipalTaxPrivate.Indicator" />
                    <default idref="False" />
                  </rules>
                </public>
              </object>
              <object id="LineKYMunicipalTaxPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineKYMunicipalTaxPrivate.Indicator" caption="" type="boolean" alwaysRun="1">
                  <value>
                    <comparison compare="gt">
                      <operand idref="LineKYMunicipalTaxOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="LineKYMunicipalTaxPrivate.KYPremiumWritten" caption="" type="float">
                  <value>
                    <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Location">
                      <reference idref="LocationPrivateKYTax.MunicipalTaxTotalWritten" type="float" />
                      <subtotal idref="LocationPrivateKYTax.MunicipalTaxTotalChange" type="float" subtotalRef="LineKYMunicipalTaxOutput.Change" />
                      <subtotal idref="LocationPrivateKYTax.MunicipalTaxTotal" type="float" subtotalRef="LineKYMunicipalTaxOutput.Amount" />
                      <customQuery idref="AccountPrivate.IsAnyLocationKYXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="LineKYMunicipalTaxPrivate.TotalWritten" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="AccountPrivate.IsAnyLocationKY" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LineKYMunicipalTaxPrivate.ClearAmounts" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineKYMunicipalTaxPrivate.KYPremiumWritten" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineKYMunicipalTaxOutput.Written" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total Written" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineKYMunicipalTaxPrivate.Total" caption="" type="float">
                  <value idref="LineKYMunicipalTaxOutput.Amount" />
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineKYMunicipalTaxPrivate.KYPremium" caption="" type="float" />
                <private id="LineKYMunicipalTaxPrivate.TotalChange" caption="" type="float">
                  <value idref="LineKYMunicipalTaxOutput.Change" />
                </private>
                <private id="LineKYMunicipalTaxPrivate.ClearAmounts" caption="" type="float" path="ClearAmounts">
                  <value value="0" />
                  <affects>
                    <reference idref="LineKYMunicipalTaxOutput.Amount" effect="setValue" />
                    <reference idref="LineKYMunicipalTaxOutput.Change" effect="setValue" />
                    <reference idref="LineKYMunicipalTaxOutput.Written" effect="setValue" />
                  </affects>
                </private>
                <private id="LineKYMunicipalTaxPrivate.TaxAvailableForCurrentLine" caption="" type="boolean">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="TableNames.TaxAvailablePerLOB" />
                      <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="string" value="KYMunicipalTax" name="Tax" />
                      <keyRef idref="LineOutput.Type" type="string" name="LOB" />
                    </lookup>
                  </value>
                </private>
              </object>
              <object id="LineKYMunicipalTax_Config" path="lineStateTaxSurcharge[Type=&quot;KYMunicipalTax&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineKYMunicipalTaxOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineKYMunicipalTaxOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line KY Municipal Tax Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineKYMunicipalTaxOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line KY Municipal Tax Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineKYMunicipalTaxOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineKYMunicipalTaxOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line KY Municipal Tax Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineKYMunicipalTaxOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineKYPremiumSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineKYPremiumSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineKYPremiumSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;KYPremiumSurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="KY Premium Surcharge" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineKYPremiumSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineKYPremiumSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;KYPremiumSurcharge&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line KY Premium Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineKYPremiumSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;KYPremiumSurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line KY Premium Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineKYPremiumSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineKYPremiumSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;KYPremiumSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line KY Premium Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="KY" />
                  </rules>
                </public>
                <public id="LineKYPremiumSurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;KYPremiumSurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value idref="LineKYPremiumSurchargePrivate.Indicator" />
                  </rules>
                </public>
              </object>
              <object id="LineKYPremiumSurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineKYPremiumSurchargePrivate.KYPremium" caption="" type="float">
                  <value idref="KYSurchargeSubtotals.Premium" />
                </private>
                <private id="LineKYPremiumSurchargePrivate.ManuScriptID" caption="" type="string">
                  <value>
                    <iterator type="string" scope="first" action="sum" includeDeleted="1" idref="Location">
                      <reference idref="LocationTaxManuscript.ManuScriptID" type="string" />
                      <customQuery idref="AccountPrivate.IsAnyLocationKYXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="LineKYPremiumSurchargePrivate.Percent" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="LineKYPremiumSurchargePrivate.TableName" />
                      <manuscriptName idref="LineKYPremiumSurchargePrivate.ManuScriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="string" value="Surcharge" name="Type" />
                    </lookup>
                  </value>
                </private>
                <private id="LineKYPremiumSurchargePrivate.TableName" caption="" type="string">
                  <value value="KYSurcharge" />
                </private>
                <private id="LineKYPremiumSurchargePrivate.Total" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="AccountPrivate.IsAnyLocationKY" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.StopLineRating" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                          <operand idref="PolicyInput.KYSurchargeExemption" type="boolean" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineKYPremiumSurchargePrivate.KYPremium" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineKYPremiumSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineKYPremiumSurchargeOutput.Amount" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineKYPremiumSurchargePrivate.Indicator" caption="" type="boolean" alwaysRun="1">
                  <value>
                    <comparison compare="gt">
                      <operand idref="LineKYPremiumSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="LineKYPremiumSurchargePrivate.TotalChange" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="AccountPrivate.IsAnyLocationKY" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.StopLineRating" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                          <operand idref="PolicyInput.KYSurchargeExemption" type="boolean" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineKYPremiumSurchargePrivate.KYPremiumChange" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineKYPremiumSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineKYPremiumSurchargeOutput.Change" effect="setValue" />
                  </affects>
                </private>
                <private id="LineKYPremiumSurchargePrivate.TotalWritten" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="AccountPrivate.IsAnyLocationKYIncludeDeleted" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.StopLineRating" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                          <operand idref="PolicyInput.KYSurchargeExemption" type="boolean" />
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineKYPremiumSurchargePrivate.KYPremiumWritten" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineKYPremiumSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineKYPremiumSurchargeOutput.Written" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total Written" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineKYPremiumSurchargePrivate.KYPremiumChange" caption="" type="float">
                  <value idref="KYSurchargeSubtotals.PremiumChange" />
                </private>
                <private id="LineKYPremiumSurchargePrivate.KYPremiumWritten" caption="" type="float">
                  <value idref="KYSurchargeSubtotals.PremiumWritten" />
                </private>
                <private id="LineKYPremiumSurchargePrivate.TaxAvailableForCurrentLine" caption="" type="boolean">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="TableNames.TaxAvailablePerLOB" />
                      <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="string" value="KYPremiumSurcharge" name="Tax" />
                      <keyRef idref="LineOutput.Type" type="string" name="LOB" />
                    </lookup>
                  </value>
                </private>
              </object>
              <object id="LineKYPremiumSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;KYPremiumSurcharge&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineKYPremiumSurchargeOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineKYPremiumSurchargeOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line KY Premium Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineKYPremiumSurchargeOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line KY Premium Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineKYPremiumSurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineKYPremiumSurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line KY Premium Surcharge Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineKYPremiumSurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineWVPolicyholderSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineWVPolicyholderSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineWVPolicyholderSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;WVPolicyholderSurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="WV Policyholder Surcharge" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineWVPolicyholderSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineWVPolicyholderSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;WVPolicyholderSurcharge&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line WV Policyholder Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineWVPolicyholderSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;WVPolicyholderSurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line WV Policyholder Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineWVPolicyholderSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineWVPolicyholderSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;WVPolicyholderSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line WV Policyholder Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="WV" />
                  </rules>
                </public>
                <public id="LineWVPolicyholderSurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;WVPolicyholderSurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value idref="LineWVPolicyholderSurchargePrivate.Indicator" />
                  </rules>
                </public>
              </object>
              <object id="LineWVPolicyholderSurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineWVPolicyholderSurchargePrivate.ManuScriptID" caption="" type="string">
                  <value>
                    <iterator type="string" scope="first" action="sum" idref="Location">
                      <reference idref="LocationTaxManuscript.ManuScriptID" type="string" />
                      <customQuery idref="AccountPrivate.IsAnyLocationWVXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.Percent" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="LineWVPolicyholderSurchargePrivate.TableName" />
                      <manuscriptName idref="LineWVPolicyholderSurchargePrivate.ManuScriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="string" value="PolicyholderSurcharge" name="TaxFeeSurcharge" />
                      <keyRef idref="LineOutput.Type" type="string" name="Line" />
                    </lookup>
                  </value>
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.TableName" caption="" type="string">
                  <value value="TaxFeeSurchargeValue" />
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.Total" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineWVPolicyholderSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineWVPolicyholderSurchargePrivate.WVPremium" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineWVPolicyholderSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineWVPolicyholderSurchargeOutput.Amount" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.WVPremium" caption="" type="float">
                  <value idref="WVPolicyholderSubtotals.Premium" />
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.Indicator" caption="" type="boolean" alwaysRun="1">
                  <value>
                    <comparison compare="gt">
                      <operand idref="LineWVPolicyholderSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.TotalChange" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineWVPolicyholderSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineWVPolicyholderSurchargePrivate.WVPremiumChange" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineWVPolicyholderSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineWVPolicyholderSurchargeOutput.Change" effect="setValue" />
                  </affects>
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.TotalWritten" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineWVPolicyholderSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineWVPolicyholderSurchargePrivate.WVPremiumWritten" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineWVPolicyholderSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineWVPolicyholderSurchargeOutput.Written" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total Written" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.WVPremiumChange" caption="" type="float">
                  <value idref="WVPolicyholderSubtotals.PremiumChange" />
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.WVPremiumWritten" caption="" type="float">
                  <value idref="WVPolicyholderSubtotals.PremiumWritten" />
                </private>
                <private id="LineWVPolicyholderSurchargePrivate.IsAvailable" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AccountPrivate.IsAnyLocationWV" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
              </object>
              <object id="LineWVPolicyholderSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;WVPolicyholderSurcharge&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineWVPolicyholderSurchargeOutput_Config" path="" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineWVPolicyholderSurchargeOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line WV Policyholder Surcharge 2 Output Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineWVPolicyholderSurchargeOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line WV Policyholder Surcharge 2 Output Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineWVPolicyholderSurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineWVPolicyholderSurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Written Calc" />
                    </definition>
                    <rules>
                      <value idref="LineWVPolicyholderSurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="NJ Property Liability Insurance Guaranty Association Surcharge Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot;]/@change" type="float">
                  <definition>
                    <caption value="NJ Property Liability Insurance Guaranty Association Surcharge Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line NJ Property Liability Insurance Guaranty Association Surcharge Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line NJ Property Liability Insurance Guaranty Association Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="NJ" />
                  </rules>
                </public>
                <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.Indicator" />
                  </rules>
                </public>
              </object>
              <object id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.Indicator" caption="" type="boolean" alwaysRun="1">
                  <value>
                    <comparison compare="gt">
                      <operand idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.IsAvailable" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AccountPrivate.IsAnyLocationNJ" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.ManuScriptID" caption="" type="string">
                  <value>
                    <iterator type="string" scope="first" action="sum" idref="Location">
                      <reference idref="LocationTaxManuscript.ManuScriptID" type="string" />
                      <customQuery idref="AccountPrivate.IsAnyLocationNJXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.Percent" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.TableName" />
                      <manuscriptName idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.ManuScriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="string" value="NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge" name="TaxFeeSurcharge" />
                      <keyRef idref="LineOutput.Type" type="string" name="Line" />
                    </lookup>
                  </value>
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.TableName" caption="" type="string">
                  <value value="NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge" />
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.Total" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.NJPremium" type="float" />
                          <argument op="multiply" round="1" roundType="round" idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.TotalChange" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.NJPremiumChange" type="float" />
                          <argument op="multiply" round="1" roundType="round" idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Change" effect="setValue" />
                  </affects>
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.TotalWritten" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.NJPremiumWritten" type="float" />
                          <argument op="multiply" round="1" roundType="round" idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Written" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total Written" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.NJPremium" caption="" type="float">
                  <value idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeSubtotals.Premium" />
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.NJPremiumChange" caption="" type="float">
                  <value idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeSubtotals.PremiumChange" />
                </private>
                <private id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate.NJPremiumWritten" caption="" type="float">
                  <value idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeSubtotals.PremiumWritten" />
                </private>
              </object>
              <object id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line NJ Property Liability Insurance Guaranty Association Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line NJ Property Liability Insurance Guaranty Association Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line NJ Property Liability Insurance Guaranty Association Surcharge Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineMNFirefighterReliefFundSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineMNFirefighterReliefFundSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineMNFirefighterReliefFundSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;MNFirefighterReliefFundSurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="Line MN Firefighter Relief Fund Surcharge Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineMNFirefighterReliefFundSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineMNFirefighterReliefFundSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;MNFirefighterReliefFundSurcharge&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line MN Firefighter Relief Fund Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMNFirefighterReliefFundSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;MNFirefighterReliefFundSurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line MN Firefighter Relief Fund Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineMNFirefighterReliefFundSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineMNFirefighterReliefFundSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;MNFirefighterReliefFundSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line MN Firefighter Relief Fund Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="MN" />
                  </rules>
                </public>
                <public id="LineMNFirefighterReliefFundSurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;MNFirefighterReliefFundSurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <value idref="LineMNFirefighterReliefFundSurchargePrivate.Indicator" />
                    <default idref="False" />
                  </rules>
                </public>
              </object>
              <object id="LineMNFirefighterReliefFundSurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineMNFirefighterReliefFundSurchargePrivate.Indicator" caption="" type="boolean" alwaysRun="1">
                  <value>
                    <comparison compare="gt">
                      <operand idref="LineMNFirefighterReliefFundSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="LineMNFirefighterReliefFundSurchargePrivate.IsAvailable" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AccountPrivate.IsAnyLocationMN" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="LineMNFirefighterReliefFundSurchargePrivate.ManuScriptID" caption="" type="string">
                  <value>
                    <iterator type="string" scope="first" action="sum" idref="Location">
                      <reference idref="LocationTaxManuscript.ManuScriptID" type="string" />
                      <customQuery idref="AccountPrivate.IsAnyLocationMNXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="LineMNFirefighterReliefFundSurchargePrivate.MNPremium" caption="" type="float" />
                <private id="LineMNFirefighterReliefFundSurchargePrivate.MNPremiumChange" caption="" type="float" />
                <private id="LineMNFirefighterReliefFundSurchargePrivate.MNPremiumWritten" caption="" type="float" />
                <private id="LineMNFirefighterReliefFundSurchargePrivate.Percent" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="LineMNFirefighterReliefFundSurchargePrivate.TableName" />
                      <manuscriptName idref="LineMNFirefighterReliefFundSurchargePrivate.ManuScriptID" />
                      <fieldRef value="Value" />
                      <keyRef type="string" value="MNFirefighterReliefFundSurcharge" name="TaxFeeSurcharge" />
                      <keyRef idref="LineOutput.Type" type="string" name="Line" />
                    </lookup>
                  </value>
                </private>
                <private id="LineMNFirefighterReliefFundSurchargePrivate.TableName" caption="" type="string">
                  <value value="MNFirefighterReliefFundSurcharge" />
                </private>
                <private id="LineMNFirefighterReliefFundSurchargePrivate.Total" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineMNFirefighterReliefFundSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineMNFirefighterReliefFundSurchargePrivate.MNPremium" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineMNFirefighterReliefFundSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineMNFirefighterReliefFundSurchargeOutput.Amount" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineMNFirefighterReliefFundSurchargePrivate.TotalChange" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineMNFirefighterReliefFundSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineMNFirefighterReliefFundSurchargePrivate.MNPremiumChange" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineMNFirefighterReliefFundSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineMNFirefighterReliefFundSurchargeOutput.Change" effect="setValue" />
                  </affects>
                </private>
                <private id="LineMNFirefighterReliefFundSurchargePrivate.TotalWritten" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineMNFirefighterReliefFundSurchargePrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineMNFirefighterReliefFundSurchargePrivate.MNPremiumWritten" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineMNFirefighterReliefFundSurchargePrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineMNFirefighterReliefFundSurchargeOutput.Written" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total Written" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
              </object>
              <object id="LineMNFirefighterReliefFundSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;MNFirefighterReliefFundSurcharge&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineMNFirefighterReliefFundSurchargeOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineMNFirefighterReliefFundSurchargeOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line MN Firefighter Relief Fund Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineMNFirefighterReliefFundSurchargeOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line MN Firefighter Relief Fund Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineMNFirefighterReliefFundSurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineMNFirefighterReliefFundSurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line MN Firefighter Relief Fund Surcharge Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineMNFirefighterReliefFundSurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineNYMotorVehLawEnforcementFee">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineNYMotorVehLawEnforcementFeeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineNYMotorVehLawEnforcementFeeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;NYMotorVehLawEnforcementFee&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="Line NY Motor Veh Law Enforcement Fee Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineNYMotorVehLawEnforcementFeeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;NYMotorVehLawEnforcementFee&quot;]/change" type="float">
                  <definition>
                    <caption value="Line NY Motor Veh Law Enforcement Fee Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineNYMotorVehLawEnforcementFeeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;NYMotorVehLawEnforcementFee&quot;]/@written" type="float">
                  <definition>
                    <caption value="NY Motor Veh Law Enforcement Fee Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineNYMotorVehLawEnforcementFeeOutput_Config.Written" />
                  </rules>
                </public>
                <public id="LineNYMotorVehLawEnforcementFeeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;NYMotorVehLawEnforcementFee&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line NY Motor Veh Law Enforcement Fee Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="NY" />
                  </rules>
                </public>
              </object>
              <object id="LineNYMotorVehLawEnforcementFeePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineNYMotorVehLawEnforcementFeePrivate.FullyEarned" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineNYMotorVehLawEnforcementFeePrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
              </object>
              <object id="LineNYMotorVehLawEnforcementFee_Config" path="lineStateTaxSurcharge[Type=&quot;NYMotorVehLawEnforcementFee&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineNYMotorVehLawEnforcementFeeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineNYMotorVehLawEnforcementFeeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line NY Motor Veh Law Enforcement Fee Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineNYMotorVehLawEnforcementFeeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineNYMotorVehLawEnforcementFeeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineNYMotorVehLawEnforcementFeeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line NY Motor Veh Law Enforcement Fee Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineNYMotorVehLawEnforcementFeeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line NY Motor Veh Law Enforcement Fee Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineNYMotorVehLawEnforcementFeeOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineNYMotorVehLawEnforcementFeePrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineNYMotorVehLawEnforcementFeeOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Line NY Motor Veh Law Enforcement Fee Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineNYMotorVehLawEnforcementFeeOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineNYMotorVehLawEnforcementFeeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line NY Motor Veh Law Enforcement Fee Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineNYMotorVehLawEnforcementFeeOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineNYMotorVehLawEnforcementFeeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineNYMotorVehLawEnforcementFeePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineCAAutomobileAssessmentCharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineCAAutomobileAssessmentChargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineCAAutomobileAssessmentChargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;CAAutomobileAssessmentCharge&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="Line CA Automobile Assessment Charge Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineCAAutomobileAssessmentChargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;CAAutomobileAssessmentCharge&quot;]/change" type="float">
                  <definition>
                    <caption value="Line CA Automobile Assessment Charge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineCAAutomobileAssessmentChargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;CAAutomobileAssessmentCharge&quot;]/@written" type="float">
                  <definition>
                    <caption value="CA Automobile Assessment Charge Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineCAAutomobileAssessmentChargeOutput_Config.Written" />
                  </rules>
                </public>
                <public id="LineCAAutomobileAssessmentChargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;CAAutomobileAssessmentCharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line CA Automobile Assessment Charge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="CA" />
                  </rules>
                </public>
              </object>
              <object id="LineCAAutomobileAssessmentChargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineCAAutomobileAssessmentChargePrivate.FullyEarned" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineCAAutomobileAssessmentChargePrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
              </object>
              <object id="LineCAAutomobileAssessmentCharge_Config" path="lineStateTaxSurcharge[Type=&quot;CAAutomobileAssessmentCharge&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineCAAutomobileAssessmentChargeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineCAAutomobileAssessmentChargeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line CA Automobile Assessment Charge Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineCAAutomobileAssessmentChargeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineCAAutomobileAssessmentChargeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineCAAutomobileAssessmentChargeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line CA Automobile Assessment Charge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineCAAutomobileAssessmentChargeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line CA Automobile Assessment Charge Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineCAAutomobileAssessmentChargeOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineCAAutomobileAssessmentChargePrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineCAAutomobileAssessmentChargeOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Line CA Automobile Assessment Charge Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineCAAutomobileAssessmentChargeOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineCAAutomobileAssessmentChargeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line CA Automobile Assessment Charge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineCAAutomobileAssessmentChargeOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineCAAutomobileAssessmentChargeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineCAAutomobileAssessmentChargePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineCOAutoTheftPreventionAuthoritySurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineCOAutoTheftPreventionAuthoritySurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;COAutoTheftPreventionAuthoritySurcharge&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="CO Auto Theft Prevention Authority Surcharge Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;COAutoTheftPreventionAuthoritySurcharge&quot;]/change" type="float">
                  <definition>
                    <caption value="Line CO Auto Theft Prevention Authority Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;COAutoTheftPreventionAuthoritySurcharge&quot;]/@written" type="float">
                  <definition>
                    <caption value="CO Auto Theft Prevention Authority Surcharge Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Written" />
                  </rules>
                </public>
                <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;COAutoTheftPreventionAuthoritySurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line CO Auto Theft Prevention Authority Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="CO" />
                  </rules>
                </public>
              </object>
              <object id="LineCOAutoTheftPreventionAuthoritySurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineCOAutoTheftPreventionAuthoritySurchargePrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineCOAutoTheftPreventionAuthoritySurchargePrivate.FullyEarned" caption="" type="boolean">
                  <value value="1" />
                </private>
              </object>
              <object id="LineCOAutoTheftPreventionAuthoritySurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;COAutoTheftPreventionAuthoritySurcharge&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line CO Auto Theft Prevention Authority Surcharge Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line CO Auto Theft Prevention Authority Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line CO Auto Theft Prevention Authority Surcharge Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineCOAutoTheftPreventionAuthoritySurchargePrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Line CO Auto Theft Prevention Authority Surcharge Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line CO Auto Theft Prevention Authority Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineCOAutoTheftPreventionAuthoritySurchargePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineFLEmergencyManagementPreparednessFundSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineFLEmergencyManagementPreparednessFundSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;FLEmergencyManagementPreparednessFundSurcharge&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="FL Emergency Management Preparedness Fund Surcharge Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <worksheet>
                    <caption value="Surcharge" />
                  </worksheet>
                </public>
                <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;FLEmergencyManagementPreparednessFundSurcharge&quot;]/change" type="float">
                  <definition>
                    <caption value="FL Emergency Management Preparedness Fund Surcharge Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;FLEmergencyManagementPreparednessFundSurcharge&quot;]/@written" type="float">
                  <definition>
                    <caption value="FL Emergency Management Preparedness Fund Surcharge Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Written" />
                  </rules>
                </public>
                <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;FLEmergencyManagementPreparednessFundSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line FL Emergency Management Preparedness Fund Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="FL" />
                  </rules>
                </public>
              </object>
              <object id="LineFLEmergencyManagementPreparednessFundSurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineFLEmergencyManagementPreparednessFundSurchargePrivate.FullyEarned" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineFLEmergencyManagementPreparednessFundSurchargePrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
              </object>
              <object id="LineFLEmergencyManagementPreparednessFundSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;FLEmergencyManagementPreparednessFundSurcharge&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line FL Emergency Management Preparedness Fund Surcharge Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line FL Emergency Management Preparedness Fund Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line FL Emergency Management Preparedness Fund Surcharge Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineFLEmergencyManagementPreparednessFundSurchargePrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Line FL Emergency Management Preparedness Fund Surcharge Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line FL Emergency Management Preparedness Fund Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineFLEmergencyManagementPreparednessFundSurchargePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineTXAutomobileTheftPreventionFee">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineTXAutomobileTheftPreventionFeeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineTXAutomobileTheftPreventionFeeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;TXAutomobileTheftPreventionFee&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="Line TX Automobile Theft Prevention Fee Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineTXAutomobileTheftPreventionFeeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;TXAutomobileTheftPreventionFee&quot;]/change" type="float">
                  <definition>
                    <caption value="Line TX Automobile Theft Prevention Fee Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineTXAutomobileTheftPreventionFeeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;TXAutomobileTheftPreventionFee&quot;]/@written" type="float">
                  <definition>
                    <caption value="TX Automobile Theft Prevention Fee Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineTXAutomobileTheftPreventionFeeOutput_Config.Written" />
                  </rules>
                </public>
                <public id="LineTXAutomobileTheftPreventionFeeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;TXAutomobileTheftPreventionFee&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line TX Automobile Theft Prevention Fee Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="TX" />
                  </rules>
                </public>
              </object>
              <object id="LineTXAutomobileTheftPreventionFeePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineTXAutomobileTheftPreventionFeePrivate.FullyEarned" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineTXAutomobileTheftPreventionFeePrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
              </object>
              <object id="LineTXAutomobileTheftPreventionFee_Config" path="lineStateTaxSurcharge[Type=&quot;TXAutomobileTheftPreventionFee&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineTXAutomobileTheftPreventionFeeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineTXAutomobileTheftPreventionFeeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line TX Automobile Theft Prevention Fee Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineTXAutomobileTheftPreventionFeeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineTXAutomobileTheftPreventionFeeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineTXAutomobileTheftPreventionFeeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line TX Automobile Theft Prevention Fee Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineTXAutomobileTheftPreventionFeeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line TX Automobile Theft Prevention Fee Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineTXAutomobileTheftPreventionFeeOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineTXAutomobileTheftPreventionFeePrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineTXAutomobileTheftPreventionFeeOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Line TX Automobile Theft Prevention Fee Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineTXAutomobileTheftPreventionFeeOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineTXAutomobileTheftPreventionFeeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line TX Automobile Theft Prevention Fee Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineTXAutomobileTheftPreventionFeeOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineTXAutomobileTheftPreventionFeeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineTXAutomobileTheftPreventionFeePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineNYFireInsSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineNYFireInsSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineNYFireInsSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;NYFireInsSurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="NY Premium Surcharge" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineNYFireInsSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineNYFireInsSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;NYFireInsSurcharge&quot;]/@change" type="float">
                  <definition>
                    <caption value="NY Premium Surcharge Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineNYFireInsSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;NYFireInsSurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line NY Premium Surcharge Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineNYFireInsSurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineNYFireInsSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;NYFireInsSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line NY Fire Ins Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="NY" />
                  </rules>
                </public>
                <public id="LineNYFireInsSurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;NYFireInsSurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineNYFireInsSurchargeOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineNYFireInsSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;NYFireInsSurcharge&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineNYFireInsSurchargeOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineNYFireInsSurchargeOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line NY Fire Ins Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineNYFireInsSurchargeOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line NY Fire Ins Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineNYFireInsSurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineNYFireInsSurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line NY Fire Ins Surcharge Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineNYFireInsSurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineFLHurricaneCatastropheFund">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineFLHurricaneCatastropheFundOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineFLHurricaneCatastropheFundOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;FLHurricaneCatastropheFund&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="FL Hurricane Catastrophe Fund Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLHurricaneCatastropheFundOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineFLHurricaneCatastropheFundOutput.Change" path="lineStateTaxSurcharge[Type=&quot;FLHurricaneCatastropheFund&quot;]/@change" type="float">
                  <definition>
                    <caption value="FL Hurricane Catastrophe Fund Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineFLHurricaneCatastropheFundOutput.Written" path="lineStateTaxSurcharge[Type=&quot;FLHurricaneCatastropheFund&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="FL Hurricane Catastrophe Fund Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLHurricaneCatastropheFundOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineFLHurricaneCatastropheFundOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;FLHurricaneCatastropheFund&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line FL Hurricane Catastrophe Fund Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="FL" />
                  </rules>
                </public>
                <public id="LineFLHurricaneCatastropheFundOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;FLHurricaneCatastropheFund&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineFLHurricaneCatastropheFundOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineFLHurricaneCatastropheFund_Config" path="lineStateTaxSurcharge[Type=&quot;FLHurricaneCatastropheFund&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineFLHurricaneCatastropheFundOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineFLHurricaneCatastropheFundOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line FL Hurricane Catastrophe Fund Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineFLHurricaneCatastropheFundOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line FL Hurricane Catastrophe Fund Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineFLHurricaneCatastropheFundOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineFLHurricaneCatastropheFundOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line FL Hurricane Catastrophe Fund Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineFLHurricaneCatastropheFundOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineFLStateFireMarshalRegulatoryAssessment">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineFLStateFireMarshalRegulatoryAssessmentOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;FLStateFireMarshalRegulatoryAssessment&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="FL State Fire Marshal Regulatory Assessment Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLStateFireMarshalRegulatoryAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput.Change" path="lineStateTaxSurcharge[Type=&quot;FLStateFireMarshalRegulatoryAssessment&quot;]/@change" type="float">
                  <definition>
                    <caption value="FL State Fire Marshal Regulatory Assessment Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput.Written" path="lineStateTaxSurcharge[Type=&quot;FLStateFireMarshalRegulatoryAssessment&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="FL State Fire Marshal Regulatory Assessment Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLStateFireMarshalRegulatoryAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;FLStateFireMarshalRegulatoryAssessment&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line FL State Fire Marshal Regulatory Assessment Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="FL" />
                  </rules>
                </public>
                <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;FLStateFireMarshalRegulatoryAssessment&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineFLStateFireMarshalRegulatoryAssessmentOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineFLStateFireMarshalRegulatoryAssessment_Config" path="lineStateTaxSurcharge[Type=&quot;FLStateFireMarshalRegulatoryAssessment&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineFLStateFireMarshalRegulatoryAssessmentOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line FL State Fire Marshal Regulatory Assessment Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line FL State Fire Marshal Regulatory Assessment Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineFLStateFireMarshalRegulatoryAssessmentOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineFLStateFireMarshalRegulatoryAssessmentOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line FL State Fire Marshal Regulatory Assessment Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineFLStateFireMarshalRegulatoryAssessmentOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineMNFireSafetySurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineMNFireSafetySurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineMNFireSafetySurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;MNFireSafetySurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="Line MN Fire Safety Surcharge Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineMNFireSafetySurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineMNFireSafetySurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;MNFireSafetySurcharge&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line MN Fire Safety Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMNFireSafetySurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;MNFireSafetySurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line MN Fire Safety Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineMNFireSafetySurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineMNFireSafetySurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;MNFireSafetySurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line MN Fire Safety Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="MN" />
                  </rules>
                </public>
                <public id="LineMNFireSafetySurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;MNFireSafetySurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineMNFireSafetySurchargeOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineMNFireSafetySurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;MNFireSafetySurcharge&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineMNFireSafetySurchargeOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineMNFireSafetySurchargeOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line MN Fire Safety Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineMNFireSafetySurchargeOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line MN Fire Safety Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineMNFireSafetySurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineMNFireSafetySurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line MN Fire Safety Surcharge Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineMNFireSafetySurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessment">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;FLCitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="Line FL Citizens Surcharge Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Change" path="lineStateTaxSurcharge[Type=&quot;FLCitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line FL Citizens Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Written" path="lineStateTaxSurcharge[Type=&quot;FLCitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line FL Citizens Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;FLCitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line FL Citizens Property Insurance Corporation Emergency Assessment Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="FL" />
                  </rules>
                </public>
                <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;FLCitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                    <default idref="False" />
                  </rules>
                </public>
              </object>
              <object id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessment_Config" path="lineStateTaxSurcharge[Type=&quot;FLCitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line FL Citizens Property Insurance Corporation Emergency Assessment Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line FL Citizens Property Insurance Corporation Emergency Assessment Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line FL Citizens Property Insurance Corporation Emergency Assessment Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessment">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;LACitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Change" path="lineStateTaxSurcharge[Type=&quot;LACitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/@change" type="float">
                  <definition>
                    <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Written" path="lineStateTaxSurcharge[Type=&quot;LACitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;LACitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line LA Citizens Property Insurance Corporation Emergency Assessment Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="LA" />
                  </rules>
                </public>
                <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;LACitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessment_Config" path="lineStateTaxSurcharge[Type=&quot;LACitizensPropertyInsuranceCorporationEmergencyAssessment&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line LA Citizens Property Insurance Corporation Emergency Assessment Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line LA Citizens Property Insurance Corporation Emergency Assessment Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line LA Citizens Property Insurance Corporation Emergency Assessment Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineMIMCCASurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineMIMCCASurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineMIMCCASurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;MIMCCASurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineMIMCCASurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineMIMCCASurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;MIMCCASurcharge&quot;]/change" type="float">
                  <definition>
                    <caption value="Line MIMCCA Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMIMCCASurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;MIMCCASurcharge&quot;]/written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation." alwaysRun="1">
                  <definition>
                    <caption value="Line MIMCCA Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value>
                      <written useShared="0" round="1" roundType="round">
                        <writtenRef idref="LineMIMCCASurchargeOutput.Amount" type="float" infoType="term" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                        <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                        <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                        <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                        <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                        <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                      </written>
                    </value>
                    <affects>
                      <reference idref="LineMIMCCASurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                  <descriptors>
                    <descriptor code="Minimum" />
                  </descriptors>
                </public>
                <public id="LineMIMCCASurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;MIMCCASurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line MIMCCA Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="MI" />
                  </rules>
                </public>
                <public id="LineMIMCCASurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;MIMCCASurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineMIMCCASurchargeOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
            </object>
            <object id="LineMEFireInvestigationPreventionTax">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineMEFireInvestigationPreventionTaxOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineMEFireInvestigationPreventionTaxOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;MEFireInvestigationPreventionTax&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="ME Fire Investigation Prevention Tax" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineMEFireInvestigationPreventionTaxOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineMEFireInvestigationPreventionTaxOutput.Change" path="lineStateTaxSurcharge[Type=&quot;MEFireInvestigationPreventionTax&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line ME Fire Investigation Prevention Tax Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMEFireInvestigationPreventionTaxOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;MEFireInvestigationPreventionTax&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line ME Fire Investigation Prevention Tax Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="ME" />
                  </rules>
                </public>
                <public id="LineMEFireInvestigationPreventionTaxOutput.Written" path="lineStateTaxSurcharge[Type=&quot;MEFireInvestigationPreventionTax&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line ME Fire Investigation Prevention Tax Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineMEFireInvestigationPreventionTaxOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineMEFireInvestigationPreventionTaxOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;MEFireInvestigationPreventionTax&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineMEFireInvestigationPreventionTaxOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineMEFireInvestigationPreventionTax_Config" path="lineStateTaxSurcharge[Type=&quot;MEFireInvestigationPreventionTax&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineMEFireInvestigationPreventionTaxOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineMEFireInvestigationPreventionTaxOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line ME Fire Investigation Prevention Tax Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineMEFireInvestigationPreventionTaxOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line ME Fire Investigation Prevention Tax Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineMEFireInvestigationPreventionTaxOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineMEFireInvestigationPreventionTaxOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line ME Fire Investigation Prevention Tax Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineMEFireInvestigationPreventionTaxOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineWAStateRegulatorySurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineWAStateRegulatorySurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineWAStateRegulatorySurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;WAStateRegulatorySurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="WA State Regulatory Surcharge" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineWAStateRegulatorySurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineWAStateRegulatorySurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;WAStateRegulatorySurcharge&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line WA State Regulatory Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineWAStateRegulatorySurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;WAStateRegulatorySurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line WA State Regulatory Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="WA" />
                  </rules>
                </public>
                <public id="LineWAStateRegulatorySurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;WAStateRegulatorySurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line WA State Regulatory Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineWAStateRegulatorySurchargeOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineWAStateRegulatorySurchargeOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;WAStateRegulatorySurcharge&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineWAStateRegulatorySurchargeOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                  </rules>
                </public>
              </object>
              <object id="LineWAStateRegulatorySurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;WAStateRegulatorySurcharge&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineWAStateRegulatorySurchargeOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineWAStateRegulatorySurchargeOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line WA State Regulatory Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineWAStateRegulatorySurchargeOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line WA State Regulatory Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineWAStateRegulatorySurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineWAStateRegulatorySurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line WA State Regulatory Surcharge Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineWAStateRegulatorySurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineCASeismicSafetyAccountAssessment">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineCASeismicSafetyAccountAssessmentOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineCASeismicSafetyAccountAssessmentOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;CASeismicSafetyAccountAssessment&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="Line CA Seismic Safety Account Assessment Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineCASeismicSafetyAccountAssessmentOutput.Change" path="lineStateTaxSurcharge[Type=&quot;CASeismicSafetyAccountAssessment&quot;]/change" type="float">
                  <definition>
                    <caption value="Line CA Seismic Safety Account Assessment Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineCASeismicSafetyAccountAssessmentOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;CASeismicSafetyAccountAssessment&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line CA Seismic Safety Account Assessment Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="CA" />
                  </rules>
                </public>
                <public id="LineCASeismicSafetyAccountAssessmentOutput.Written" path="lineStateTaxSurcharge[Type=&quot;CASeismicSafetyAccountAssessment&quot;]/@written" type="float">
                  <definition>
                    <caption value="Line CA Seismic Safety Account Assessment Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineCASeismicSafetyAccountAssessmentOutput_Config.Written" />
                  </rules>
                </public>
              </object>
              <object id="LineCASeismicSafetyAccountAssessmentPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineCASeismicSafetyAccountAssessmentPrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineCASeismicSafetyAccountAssessmentPrivate.FullyEarned" caption="" type="boolean">
                  <value value="1" />
                </private>
              </object>
              <object id="LineCASeismicSafetyAccountAssessment_Config" path="lineStateTaxSurcharge[Type=&quot;CASeismicSafetyAccountAssessment&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineCASeismicSafetyAccountAssessmentOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineCASeismicSafetyAccountAssessmentOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line CA Seismic Safety Account Assessment Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineCASeismicSafetyAccountAssessmentOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineCASeismicSafetyAccountAssessmentOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineCASeismicSafetyAccountAssessmentOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line CA Seismic Safety Account Assessment Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineCASeismicSafetyAccountAssessmentOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line CA Seismic Safety Account Assessment Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineCASeismicSafetyAccountAssessmentOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineCASeismicSafetyAccountAssessmentPrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineCASeismicSafetyAccountAssessmentOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Line CA Seismic Safety Account Assessment Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineCASeismicSafetyAccountAssessmentOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineCASeismicSafetyAccountAssessmentOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line CA Seismic Safety Account Assessment Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineCASeismicSafetyAccountAssessmentOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineCASeismicSafetyAccountAssessmentOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineCASeismicSafetyAccountAssessmentPrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineAZTheftProtectionAssessment">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineAZTheftProtectionAssessmentOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineAZTheftProtectionAssessmentOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;AZTheftProtectionAssessment&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="Line AZ Theft Protection Assessment Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineAZTheftProtectionAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineAZTheftProtectionAssessmentOutput.Change" path="lineStateTaxSurcharge[Type=&quot;AZTheftProtectionAssessment&quot;]/change" type="float">
                  <definition>
                    <caption value="Line AZ Theft Protection Assessment Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineAZTheftProtectionAssessmentOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;AZTheftProtectionAssessment&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line AZ Theft Protection Assessment Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="AZ" />
                  </rules>
                </public>
                <public id="LineAZTheftProtectionAssessmentOutput.Written" path="lineStateTaxSurcharge[Type=&quot;AZTheftProtectionAssessment&quot;]/written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line AZ Theft Protection Assessment Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value>
                      <written useShared="0" round="100" roundType="round">
                        <writtenRef idref="LineAZTheftProtectionAssessmentOutput.Amount" type="float" infoType="term" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                        <writtenInfo idref="LineAZTheftProtectionAssessmentPrivate.FullyEarned" type="boolean" infoType="fullyEarned" />
                        <writtenInfo idref="LineAZTheftProtectionAssessmentPrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                        <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                        <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                        <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                        <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                        <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                        <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                        <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                      </written>
                    </value>
                    <affects>
                      <reference idref="LineAZTheftProtectionAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                  <descriptors>
                    <descriptor code="Minimum" />
                  </descriptors>
                </public>
                <public id="LineAZTheftProtectionAssessmentOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;AZTheftProtectionAssessment&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <value>
                      <comparison compare="gt">
                        <operand idref="LineAZTheftProtectionAssessmentOutput.Amount" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                    </value>
                    <default idref="False" />
                  </rules>
                </public>
              </object>
              <object id="LineAZTheftProtectionAssessmentPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineAZTheftProtectionAssessmentPrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineAZTheftProtectionAssessmentPrivate.FullyEarned" caption="" type="boolean">
                  <value value="0" />
                </private>
              </object>
            </object>
            <object id="LineMNAutomobileTheftPreventionSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineMNAutomobileTheftPreventionSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineMNAutomobileTheftPreventionSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;MNAutomobileTheftPreventionSurcharge&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="Line MN Automobile Theft Prevention Surcharge Output Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMNAutomobileTheftPreventionSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;MNAutomobileTheftPreventionSurcharge&quot;]/change" type="float">
                  <definition>
                    <caption value="Line MN Automobile Theft Prevention Surcharge Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMNAutomobileTheftPreventionSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;MNAutomobileTheftPreventionSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line MN Automobile Theft Prevention Surcharge Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="MN" />
                  </rules>
                </public>
                <public id="LineMNAutomobileTheftPreventionSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;MNAutomobileTheftPreventionSurcharge&quot;]/@written" type="float">
                  <definition>
                    <caption value="Line MN Automobile Theft Prevention Surcharge Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Written" />
                  </rules>
                </public>
              </object>
              <object id="LineMNAutomobileTheftPreventionSurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineMNAutomobileTheftPreventionSurchargePrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineMNAutomobileTheftPreventionSurchargePrivate.FullyEarned" caption="" type="boolean">
                  <value value="1" />
                </private>
              </object>
              <object id="LineMNAutomobileTheftPreventionSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;MNAutomobileTheftPreventionSurcharge&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineMNAutomobileTheftPreventionSurchargeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line MN Automobile Theft Prevention Surcharge Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineMNAutomobileTheftPreventionSurchargeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line MN Automobile Theft Prevention Surcharge Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineMNAutomobileTheftPreventionSurchargeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line MN Automobile Theft Prevention Surcharge Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineMNAutomobileTheftPreventionSurchargePrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Line MN Automobile Theft Prevention Surcharge Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineMNAutomobileTheftPreventionSurchargeOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line MN Automobile Theft Prevention Surcharge Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineMNAutomobileTheftPreventionSurchargeOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineMNAutomobileTheftPreventionSurchargeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineMNAutomobileTheftPreventionSurchargePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineNCCommercialAutoLossRecoupmentSurcharge">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineNCCommercialAutoLossRecoupmentSurchargeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;NCCommercialAutoLossRecoupmentSurcharge&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;NCCommercialAutoLossRecoupmentSurcharge&quot;]/change" type="float">
                  <definition>
                    <caption value="Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;NCCommercialAutoLossRecoupmentSurcharge&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="NC" />
                  </rules>
                </public>
                <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;NCCommercialAutoLossRecoupmentSurcharge&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <object id="LineNCCommercialAutoLossRecoupmentSurchargeOutNonShredded">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                </object>
              </object>
              <object id="LineNCCommercialAutoLossRecoupmentSurchargePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineNCCommercialAutoLossRecoupmentSurchargePrivate.FlatCharge" caption="" type="boolean">
                  <value value="0" />
                </private>
                <private id="LineNCCommercialAutoLossRecoupmentSurchargePrivate.FullyEarned" caption="" type="boolean">
                  <value value="0" />
                </private>
              </object>
              <object id="LineNCCommercialAutoLossRecoupmentSurcharge_Config" path="lineStateTaxSurcharge[Type=&quot;NCCommercialAutoLossRecoupmentSurcharge&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineNCCommercialAutoLossRecoupmentSurchargePrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Indicator" path="Indicator" type="boolean" alwaysRun="1">
                    <definition>
                      <caption value="Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineNCCommercialAutoLossRecoupmentSurchargePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineNCCommercialAutoLossRecoupmentSurchargeOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineMIAutomobileTheftPreventionAuthorityAssessment">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;MIAutomobileTheftPreventionAuthorityAssessment&quot;]/fValue" type="float" class="Premium">
                  <definition>
                    <caption value="Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Change" path="lineStateTaxSurcharge[Type=&quot;MIAutomobileTheftPreventionAuthorityAssessment&quot;]/change" type="float">
                  <definition>
                    <caption value="Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;MIAutomobileTheftPreventionAuthorityAssessment&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="MI" />
                  </rules>
                </public>
                <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Written" path="lineStateTaxSurcharge[Type=&quot;MIAutomobileTheftPreventionAuthorityAssessment&quot;]/@written" type="float">
                  <definition>
                    <caption value="Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Written" />
                  </rules>
                </public>
              </object>
              <object id="LineMIAutomobileTheftPreventionAuthorityAssessmentPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineMIAutomobileTheftPreventionAuthorityAssessmentPrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineMIAutomobileTheftPreventionAuthorityAssessmentPrivate.FullyEarned" caption="" type="boolean" />
              </object>
              <object id="LineMIAutomobileTheftPreventionAuthorityAssessment_Config" path="lineStateTaxSurcharge[Type=&quot;MIAutomobileTheftPreventionAuthorityAssessment&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="and">
                          <operand idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Indicator" type="boolean" />
                          <operand idref="LineMIAutomobileTheftPreventionAuthorityAssessmentPrivate.FullyEarned" type="boolean" />
                        </comparison>
                      </value>
                    </rules>
                  </public>
                  <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Indicator" path="Indicator" type="boolean">
                    <definition>
                      <caption value="Indicator" />
                    </definition>
                    <rules>
                      <value>
                        <comparison compare="ne">
                          <operand idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                      </value>
                      <default idref="False" />
                    </rules>
                  </public>
                  <public id="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineMIAutomobileTheftPreventionAuthorityAssessmentPrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineFLInsuranceGuarantyAssociationAssessment">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineFLInsuranceGuarantyAssociationAssessmentOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="FL Insurance Guaranty Association Assessment" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
                <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput.Change" path="lineStateTaxSurcharge[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line FL Insurance Guaranty Association Assessment Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput.Indicator" path="lineStateTaxSurcharge[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot;]/Indicator" type="boolean" alwaysRun="1">
                  <definition>
                    <caption value="Indicator" />
                  </definition>
                  <rules>
                    <default idref="False" />
                    <value idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Indicator" />
                  </rules>
                </public>
                <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line FL Insurance Guaranty Association Assessment Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="FL" />
                  </rules>
                </public>
                <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput.Written" path="lineStateTaxSurcharge[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line FL Insurance Guaranty Association Assessment Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <affects>
                      <reference idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
              </object>
              <object id="LineFLInsuranceGuarantyAssociationAssessmentPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Indicator" caption="" type="boolean" alwaysRun="1">
                  <value>
                    <comparison compare="gt">
                      <operand idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.IsAvailable" caption="" type="boolean">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AccountPrivate.IsAnyLocationFL" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </value>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.ManuScriptID" caption="" type="string">
                  <value>
                    <iterator type="string" scope="first" action="sum" idref="Location">
                      <reference idref="LocationTaxManuscript.ManuScriptID" type="string" />
                      <customQuery idref="AccountPrivate.IsAnyLocationFLXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Percent" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.TableName" />
                      <manuscriptName idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.ManuScriptID" />
                      <fieldRef value="Value" />
                      <onFailure value="0" />
                      <keyRef type="string" value="FLInsuranceGuarantyAssociationAssessment" name="TaxFeeSurcharge" />
                      <keyRef idref="LineOutput.Type" type="string" name="Line" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Assessment Rate" />
                  </worksheet>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.TableName" caption="" type="string">
                  <value value="TaxFeeSurchargeValue" />
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Total" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.FLPremium" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Amount" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.TotalChange" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.FLPremiumChange" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Change" effect="setValue" />
                  </affects>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.TotalWritten" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.IsAvailable" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.FLPremiumWritten" type="float" />
                          <argument op="multiply" round="100" roundType="round" idref="LineFLInsuranceGuarantyAssociationAssessmentPrivate.Percent" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Written" effect="setValue" />
                  </affects>
                  <worksheet>
                    <comparison idref="True" type="int" />
                    <caption value="Total Written" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.FLPremium" caption="" type="float">
                  <value idref="FLInsuranceGuarantyAssociationAssessmentSubtotals.Premium" />
                  <worksheet suppress="1">
                    <caption value="Premium Subtotal" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.FLPremiumChange" caption="" type="float">
                  <value idref="FLInsuranceGuarantyAssociationAssessmentSubtotals.PremiumChange" />
                </private>
                <private id="LineFLInsuranceGuarantyAssociationAssessmentPrivate.FLPremiumWritten" caption="" type="float">
                  <value idref="FLInsuranceGuarantyAssociationAssessmentSubtotals.PremiumWritten" />
                  <worksheet suppress="1">
                    <caption value="Premium Written Subtotal" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
              </object>
              <object id="LineFLInsuranceGuarantyAssociationAssessment_Config" path="lineStateTaxSurcharge[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot;]" caption=" ">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineFLInsuranceGuarantyAssociationAssessmentOutput_Config" caption=" ">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput_Config.Change" path="change" type="float" comment=" ">
                    <definition>
                      <caption value="Line FL Insurance Guaranty Association Assessment Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput_Config.Written" path="written" type="float" comment="Short rate set to zero to make sure the written config does not try to return premium during cancel.  This returned amount will be handled manually within the calculation.">
                    <definition>
                      <caption value="Line FL Insurance Guaranty Association Assessment Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineFLInsuranceGuarantyAssociationAssessmentOutput_Config.WrittenCalcPlaceHolder" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FullyEarnedDefault" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.FlatChargeDefault" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="CurrentTransaction.EffectiveDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo type="float" value="1.0" infoType="proRate" />
                          <writtenInfo type="int" value="0" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                  <public id="LineFLInsuranceGuarantyAssociationAssessmentOutput_Config.WrittenCalcPlaceHolder" path="WrittenCalcPlaceHolder" type="float">
                    <definition>
                      <caption value="Line FL Insurance Guaranty Association Assessment Output_ Config Written Calc Place Holder" />
                    </definition>
                    <rules>
                      <value idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Written" />
                    </rules>
                  </public>
                </object>
              </object>
            </object>
            <object id="LineCOHazardMitigationFee">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LineCOHazardMitigationFeeOutput">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LineCOHazardMitigationFeeOutput.Amount" path="lineStateTaxSurcharge[Type=&quot;COHazardMitigationFee&quot;]/fValue" type="float" class="Premium" alwaysRun="1">
                  <definition>
                    <caption value="CO Hazard Mitigation Fee Amount" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineCOHazardMitigationFeePrivate.Total" />
                    <affects>
                      <reference idref="LineCOHazardMitigationFeeOutput_Config.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                  <worksheet>
                    <caption value="Amount" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </public>
                <public id="LineCOHazardMitigationFeeOutput.Change" path="lineStateTaxSurcharge[Type=&quot;COHazardMitigationFee&quot;]/@change" type="float">
                  <definition>
                    <caption value="Line CO Hazard Mitigation Fee Output Change" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                </public>
                <public id="LineCOHazardMitigationFeeOutput.TaxState" path="lineStateTaxSurcharge[Type=&quot;COHazardMitigationFee&quot;]/TaxState" type="string">
                  <definition>
                    <caption value="Line CO Hazard Mitigation Fee Output Tax State" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <default value="CO" />
                  </rules>
                </public>
                <public id="LineCOHazardMitigationFeeOutput.Written" path="lineStateTaxSurcharge[Type=&quot;COHazardMitigationFee&quot;]/@written" type="float" alwaysRun="1">
                  <definition>
                    <caption value="Line CO Hazard Mitigation Fee Output Written" />
                    <readOnly idref="True" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                    <maxLength idref="MaxLength.fValue" />
                  </definition>
                  <rules>
                    <value idref="LineCOHazardMitigationFeeOutput_Config.Written" />
                    <affects>
                      <reference idref="LineCOHazardMitigationFeeOutput_Config.Indicator" effect="postEffect" />
                    </affects>
                  </rules>
                </public>
              </object>
              <object id="LineCOHazardMitigationFeePrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LineCOHazardMitigationFeePrivate.FlatCharge" caption="" type="boolean">
                  <value value="1" />
                </private>
                <private id="LineCOHazardMitigationFeePrivate.FullyEarned" caption="" type="boolean">
                  <value>
                    <iterator type="boolean" scope="first" action="count" includeDeleted="1" idref="Location">
                      <where>
                        <comparison compare="and">
                          <operand idref="LocationPrivate.StateIsCO" type="boolean" />
                          <comparison compare="ne">
                            <operand idref="LocationPrivate.DateLocationAdded" type="date" />
                            <operand idref="LocationPrivate.DateLocationRemoved" type="date" />
                          </comparison>
                        </comparison>
                      </where>
                    </iterator>
                  </value>
                </private>
                <private id="LineCOHazardMitigationFeePrivate.Fee" caption="" type="float">
                  <value>
                    <lookup>
                      <tableRef value="(custom defined)" idref="LineCOHazardMitigationFeePrivate.TableName" />
                      <manuscriptName idref="LineCOHazardMitigationFeePrivate.ManuScriptID" />
                      <fieldRef value="Value" />
                      <onFailure value="0" />
                      <keyRef type="string" value="Fee" name="Type" />
                    </lookup>
                  </value>
                  <worksheet>
                    <caption value="Fee" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineCOHazardMitigationFeePrivate.Total" caption="" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="AccountPrivate.IsAnyLocationCO" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LinePrivate.StopLineRating" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LineInputNonShredded.LineRemovedMidTerm" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineCOHazardMitigationFeePrivate.Fee" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <affects>
                    <reference idref="LineCOHazardMitigationFeeOutput.Amount" effect="setValue" />
                  </affects>
                  <worksheet>
                    <caption value="Total" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                </private>
                <private id="LineCOHazardMitigationFeePrivate.TotalChange" caption="" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="AccountPrivate.IsAnyLocationCOIncludeDeleted" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineCOHazardMitigationFeeOutput_Config.Change" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                </private>
                <private id="LineCOHazardMitigationFeePrivate.TotalWritten" caption="" type="float">
                  <value>
                    <if>
                      <condition>
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="AccountPrivate.IsAnyLocationCOIncludeDeleted" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LinePrivate.StopLineRating" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="0" />
                      <else>
                        <calculation>
                          <argument op="eq" idref="LineCOHazardMitigationFeeOutput.Written" type="float" />
                        </calculation>
                      </else>
                    </if>
                  </value>
                  <worksheet>
                    <caption value="Total Written" />
                    <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                  </worksheet>
                  <affects>
                    <reference idref="LineCOHazardMitigationFeeOutput_Config.Written" effect="postEffect" />
                  </affects>
                </private>
                <private id="LineCOHazardMitigationFeePrivate.TableName" caption="" type="string">
                  <value value="COHazardMitigationFee" />
                </private>
                <private id="LineCOHazardMitigationFeePrivate.ManuScriptID" caption="" type="string" alwaysRun="1">
                  <value>
                    <iterator type="string" scope="first" action="sum" includeDeleted="1" idref="Location">
                      <reference idref="LocationTaxManuscript.ManuScriptID" type="string" />
                      <customQuery idref="AccountPrivate.IsAnyLocationCOXPath" />
                    </iterator>
                  </value>
                </private>
                <private id="LineCOHazardMitigationFeePrivate.Indicator" caption="" type="boolean">
                  <value>
                    <comparison compare="gt">
                      <operand idref="LineCOHazardMitigationFeeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </private>
              </object>
              <object id="LineCOHazardMitigationFee_Config" path="lineStateTaxSurcharge[Type=&quot;COHazardMitigationFee&quot;]">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="LineCOHazardMitigationFeeOutput_Config">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="LineCOHazardMitigationFeeOutput_Config.Amount" path="fValue" type="float">
                    <definition>
                      <caption value="Line CO Hazard Mitigation Fee Output_ Config Amount" />
                    </definition>
                    <rules>
                      <value>
                        <if>
                          <condition>
                            <comparison compare="eq">
                              <operand idref="LineCOHazardMitigationFeeOutput_Config.Indicator" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </condition>
                          <then value="0" />
                          <else>
                            <calculation>
                              <argument op="eq" idref="LineCOHazardMitigationFeeOutput.Amount" type="float" />
                            </calculation>
                          </else>
                        </if>
                      </value>
                    </rules>
                  </public>
                  <public id="LineCOHazardMitigationFeeOutput_Config.Change" path="change" type="float">
                    <definition>
                      <caption value="Line CO Hazard Mitigation Fee Output_ Config Change" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                  </public>
                  <public id="LineCOHazardMitigationFeeOutput_Config.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
                    <definition>
                      <caption value="Line CO Hazard Mitigation Fee Output_ Config Fully Earned Indicator" />
                    </definition>
                    <rules>
                      <value idref="LineCOHazardMitigationFeePrivate.FullyEarned" />
                    </rules>
                  </public>
                  <public id="LineCOHazardMitigationFeeOutput_Config.Indicator" path="Indicator" type="boolean" alwaysRun="1">
                    <definition>
                      <caption value="Line CO Hazard Mitigation Fee Output_ Config Indicator" />
                    </definition>
                    <rules>
                      <default idref="False" />
                      <value idref="LineCOHazardMitigationFeePrivate.Indicator" />
                    </rules>
                  </public>
                  <public id="LineCOHazardMitigationFeeOutput_Config.Written" path="written" type="float">
                    <definition>
                      <caption value="Line CO Hazard Mitigation Fee Output_ Config Written" />
                      <readOnly idref="True" />
                      <formatMask idref="FormatMask.PremiumPenniesDisplay" />
                      <maxLength idref="MaxLength.fValue" />
                    </definition>
                    <rules>
                      <value>
                        <written useShared="0" round="100" roundType="round">
                          <writtenRef idref="LineCOHazardMitigationFeeOutput_Config.Amount" type="float" infoType="term" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.MinimumPremiumDefault" type="int" infoType="minimum" />
                          <writtenInfo idref="LineCOHazardMitigationFeeOutput_Config.FullyEarnedIndicator" type="boolean" infoType="fullyEarned" />
                          <writtenInfo idref="LineCOHazardMitigationFeePrivate.FlatCharge" type="boolean" infoType="flatCharge" />
                          <writtenInfo type="int" value="1" infoType="clearPremIfDeleted" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorTermPath" type="string" infoType="priorTerm" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.PriorWrittenPath" type="string" infoType="priorWritten" useXPath="1" />
                          <writtenRefPath idref="WrittenPremiumSharedConfiguration.ChangePath" type="string" infoType="charge" useXPath="1" />
                          <writtenRef idref="PolicyInput.EffectiveDate" type="date" infoType="effDate" />
                          <writtenRef idref="PolicyInput.ExpirationDate" type="date" infoType="exDate" />
                          <writtenRef idref="WrittenPremiumSharedConfiguration.CurrentTransEffDate" type="date" infoType="transDate" />
                          <writtenRef idref="ConstantsPolicyAdminProcessing.ProRateType" type="int" infoType="proRateType" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" infoType="shortRate" />
                          <writtenInfo idref="WrittenPremiumSharedConfiguration.ProrateRoundingFactor" type="int" infoType="precision" />
                        </written>
                      </value>
                    </rules>
                    <descriptors>
                      <descriptor code="Minimum" />
                    </descriptors>
                  </public>
                </object>
              </object>
            </object>
          </object>
        </object>
        <object id="Forms">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="FormsPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="PencilEditFooter">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="PencilEditFooter.ManuscriptID" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="FormsPencilEditFooter" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PencilEditFooter.ModelCollection" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="FormsPencilEditFooter" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PencilEditFooter.ViewModel" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="FormsPencilEditFooter" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PencilEditFooter.View" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="View" />
                    <keyRef type="string" value="FormsPencilEditFooter" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
            <private id="FormsPrivate.ChangeSummaryEnabled" caption="" type="boolean">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.PolicyFormsSetup" />
                  <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="ChangeSummaryEnabled" name="Key" />
                </lookup>
              </value>
            </private>
          </object>
          <object id="FormsTransactionSummary" path="formsTransactionSummary">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="FormsTransactionSummaryInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
            <object id="FormsTransactionSummaryOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="FormsTransactionSummaryOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="FormsTransactionSummaryOutputNonShredded.FormsTransactionSummaryID" path="@id" type="string">
                  <definition>
                    <caption value="Forms Transaction Summary ID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
              </object>
            </object>
            <object id="FormsTransactionSummaryPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="FormsTransactionSummaryPrivate.DeleteFormsTransactionSummary" caption="" type="string">
                <value>
                  <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="FormsTransactionSummary" name="objectID" dataType="attribute" />
                      <nameValue idref="FormsTransactionSummaryPrivate.ContextPath" name="context" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="FormsTransactionSummaryPrivate.ContextPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="FormsTransactionSummaryOutputNonShredded.FormsTransactionSummaryID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
            </object>
          </object>
        </object>
        <object id="Reinsurance" path="reinsurance">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="ReinsuranceInput" path="">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="ReinsuranceInput.AggregateLimit" path="AggregateLimit" type="int">
              <definition>
                <caption value="Aggregate Limit" />
                <maxLength idref="MaxLength.iValue" />
              </definition>
            </public>
            <public id="ReinsuranceInput.CertificatePolicyNumber" path="CertificatePolicyNumber" type="string">
              <definition>
                <caption value="Certificate/Policy Number" />
                <maxLength idref="MaxLength.sValue" />
                <formatMask idref="FormatMask.Width10" />
              </definition>
            </public>
            <public id="ReinsuranceInput.CommissionRate" path="CommissionRate" type="float">
              <definition>
                <caption value="Commission Rate" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="ReinsuranceInput.Location" path="Location" type="string">
              <definition>
                <caption value="Location" />
                <maxLength idref="MaxLength.sValue" />
                <formatMask idref="FormatMask.Width40" />
              </definition>
            </public>
            <public id="ReinsuranceInput.OccurrenceLimit" path="OccurrenceLimit" type="int">
              <definition>
                <caption value="Occurrence Limit" />
                <maxLength idref="MaxLength.iValue" />
              </definition>
            </public>
            <public id="ReinsuranceInput.PercentCeded" path="PercentCeded" type="float">
              <definition>
                <caption value="Percent Ceded" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="ReinsuranceInput.PercentLoss" path="PercentLoss" type="float">
              <definition>
                <caption value="Percent Loss" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="ReinsuranceInput.ReinsuranceCompany" path="Company" type="string">
              <definition>
                <caption value="Company Name" />
                <maxLength idref="MaxLength.sValue" />
                <formatMask idref="FormatMask.Width40" />
              </definition>
            </public>
            <public id="ReinsuranceInput.ReinsuranceCompanyNumber" path="CompanyNumber" type="string">
              <definition>
                <caption value="Company Number" />
                <maxLength idref="MaxLength.sValue" />
                <formatMask idref="FormatMask.Width15" />
              </definition>
            </public>
            <public id="ReinsuranceInput.ReinsuranceEffectiveDate" path="EffectiveDate" type="date">
              <definition>
                <caption value="Effective Date" />
                <maxLength idref="MaxLength.Date" />
              </definition>
              <rules>
                <default idref="PolicyInput.EffectiveDate" />
              </rules>
            </public>
            <public id="ReinsuranceInput.ReinsuranceExpirationDate" path="ExpirationDate" type="date">
              <definition>
                <caption value="Expiration Date" />
                <maxLength idref="MaxLength.Date" />
              </definition>
              <rules>
                <default idref="PolicyInput.ExpirationDate" />
              </rules>
            </public>
            <public id="ReinsuranceInput.Type" path="Type" type="string">
              <definition>
                <caption value="Type" />
                <options>
                  <option value="Excess" caption="Excess" />
                  <option value="ProRata" caption="Pro-Rata" />
                </options>
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <default value="Excess" />
              </rules>
            </public>
            <public id="ReinsuranceInput.AutoFac" path="AutoFac" type="string">
              <definition>
                <caption value="AutoFac" />
                <options>
                  <option value="No" caption="No" />
                  <option value="Yes" caption="Yes" />
                </options>
              </definition>
              <rules>
                <default value="No" />
              </rules>
            </public>
            <public id="ReinsuranceInput.WrittenPremiumPercent" path="WrittenPremiumPercent" type="float">
              <definition>
                <caption value="Written Premium %" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition idref="ReinsurancePrivate.AutoFacNo" />
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="ReinsuranceInput.WrittenPremiumAmount" path="WrittenPremiumAmount" type="float">
              <definition>
                <caption value="Written Premium Amount" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition idref="ReinsurancePrivate.AutoFacNo" />
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
          </object>
          <object id="ReinsuranceOutput" path="">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="ReinsuranceOutput.ID" path="@id" type="string">
              <definition>
                <caption value="ID" />
                <maxLength idref="MaxLength.ID" />
              </definition>
            </public>
            <object id="ReinsuranceOutputNonShredded" path="">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="ReinsuranceOutputNonShredded.EditCaption" path="EditCaption" type="string">
                <definition>
                  <caption value="Edit Caption" />
                  <maxLength value="5" />
                </definition>
                <rules>
                  <value value="Detail" />
                </rules>
              </public>
              <public id="ReinsuranceOutputNonShredded.ReinsuranceAddMode" type="boolean" path="ReinsuranceAddMode">
                <rules>
                  <default idref="True" />
                </rules>
                <definition>
                  <caption value="Reinsurance Add Mode" />
                </definition>
              </public>
              <public id="ReinsuranceOutputNonShredded.ReinsuranceCaption" path="ReinsuranceCaption" type="string">
                <definition>
                  <caption value=" " />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="Reinsurer #" />
                      <argument op="add" idref="ReinsurancePrivate.CurrentIteration" type="int" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="ReinsuranceOutputNonShredded.ReinsuranceDialogMode" type="boolean" path="ReinsuranceDialogMode">
                <rules>
                  <default idref="True" />
                </rules>
                <definition>
                  <caption value="Reinsurance Dialog Mode" />
                </definition>
              </public>
            </object>
          </object>
          <object id="ReinsurancePrivate" path="">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="ReinsurancePrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="ReinsuranceOutput.ID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="ReinsurancePrivate.CurrentIteration" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="current" idref="Reinsurance" />
              </value>
            </private>
            <private id="ReinsurancePrivate.IsInReinsuranceDialogMode" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="ReinsuranceOutputNonShredded.ReinsuranceDialogMode" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </value>
            </private>
            <private id="ReinsurancePrivate.IsNotInReinsuranceAddMode" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="ReinsuranceOutputNonShredded.ReinsuranceAddMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="ReinsurancePrivate.IsNotInReinsuranceDialogMode" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="ReinsuranceOutputNonShredded.ReinsuranceDialogMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="ReinsurancePrivate.ReinsuranceCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Reinsurance" />
              </value>
            </private>
            <private id="ReinsurancePrivate.SetOnReinsuranceAdd" caption="" type="boolean" alwaysRun="1">
              <affects>
                <reference idref="ReinsurancePrivate.SetReinsuranceDialogModeTrue" effect="postEffect" />
                <reference idref="ReinsurancePrivate.SetReinsuranceAddModeTrue" effect="postEffect" />
              </affects>
            </private>
            <private id="ReinsurancePrivate.SetReinsuranceAddModeFalse" caption="" type="boolean" alwaysRun="1">
              <value idref="False" />
              <affects>
                <reference idref="ReinsuranceOutputNonShredded.ReinsuranceAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="ReinsurancePrivate.SetReinsuranceAddModeTrue" caption="" type="boolean" alwaysRun="1">
              <value idref="True" />
              <affects>
                <reference idref="ReinsuranceOutputNonShredded.ReinsuranceAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="ReinsurancePrivate.SetReinsuranceDialogModeFalse" caption="" type="boolean" alwaysRun="1">
              <value idref="False" />
              <affects>
                <reference idref="ReinsuranceOutputNonShredded.ReinsuranceDialogMode" effect="setValue" />
              </affects>
            </private>
            <private id="ReinsurancePrivate.SetReinsuranceDialogModeTrue" caption="" type="boolean" alwaysRun="1">
              <value idref="True" />
              <affects>
                <reference idref="ReinsuranceOutputNonShredded.ReinsuranceDialogMode" effect="setValue" />
              </affects>
            </private>
            <object id="Reinsurance_Page">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="Reinsurance_Page.CollapseDescription" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" idref="ReinsuranceOutputNonShredded.ReinsuranceCaption" type="string" />
                    <argument op="add" type="string" value="  (" />
                    <argument op="add" idref="ReinsuranceInput.ReinsuranceCompany" type="string" />
                    <argument op="add" type="string" value=")" />
                  </calculation>
                </value>
              </private>
            </object>
            <private id="ReinsurancePrivate.ShowDelete" caption="" type="boolean">
              <value idref="True" />
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyPrivate.IsInAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="ReinsurancePrivate.ShowAdd" caption="" type="boolean">
              <value idref="True" />
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="ReinsurancePrivate.AutoFacNo" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="ReinsuranceInput.AutoFac" type="string" />
                  <operand type="string" value="No" />
                </comparison>
              </value>
            </private>
            <private id="ReinsurancePrivate.AutoFacYes" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="ReinsuranceInput.AutoFac" type="string" />
                  <operand type="string" value="Yes" />
                </comparison>
              </value>
            </private>
          </object>
        </object>
        <object id="AllCoveragesInitialize" path="//coverage">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="AllCoveragesInitializeOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AllCoveragesInitializeOutput.Premium" path="Premium" type="float">
              <definition>
                <caption value="All Coverages Initialize Output Premium" />
                <readOnly idref="True" />
                <formatMask idref="FormatMask.Premium" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
              <rules>
                <default value="0" />
              </rules>
            </public>
            <public id="AllCoveragesInitializeOutput.Type" path="Type" type="string">
              <definition>
                <caption value="All Coverages Initialize Output Type" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.Type" />
              </definition>
            </public>
            <public id="AllCoveragesInitializeOutput.PremiumFE" path="PremiumFE" type="float">
              <definition>
                <caption value="All Coverages Initialize Output Premium FE" />
                <readOnly idref="True" />
                <formatMask idref="FormatMask.Premium" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
              <rules>
                <default value="0" />
              </rules>
            </public>
            <public id="AllCoveragesInitializeOutput.Written" path="written" type="float">
              <definition>
                <caption value="Written" />
              </definition>
            </public>
            <public id="AllCoveragesInitializeOutput.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean">
              <definition>
                <caption value="Fully Earned Indicator" />
              </definition>
            </public>
            <public id="AllCoveragesInitializeOutput.Prior" path="prior" type="float">
              <definition>
                <caption value="Prior" />
              </definition>
            </public>
            <public id="AllCoveragesInitializeOutput.Deleted" path="@deleted" type="boolean">
              <definition>
                <caption value="Deleted" />
              </definition>
            </public>
            <public id="AllCoveragesInitializeOutput.Change" path="change" type="float">
              <definition>
                <caption value="Change" />
              </definition>
            </public>
            <public id="AllCoveragesInitializeOutput.ID" path="@id" type="string">
              <definition>
                <caption value="ID" />
              </definition>
            </public>
          </object>
          <object id="AllCoveragesInitializePrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AllCoveragesInitializePrivate.SetPremiumToZero" type="float" comment="" caption="All Coverages Initialize Private Set Premium To Zero">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="AllCoveragesInitializeOutput.FullyEarnedIndicator" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="AllCoveragesInitializePrivate.SetPremiumToZeroNonFullyEarned" />
                </if>
              </value>
              <affects>
                <reference idref="AllCoveragesInitializeOutput.Type" effect="preEffect" />
              </affects>
            </private>
            <private id="AllCoveragesInitializePrivate.SetPremiumToZeroFullyEarned" type="float" comment="" caption="All Coverages Initialize Private Set Premium To Zero">
              <value value="0" />
              <affects>
                <reference idref="AllCoveragesInitializePrivate.FullyEarnedDeleteCheck" effect="postEffect" />
              </affects>
            </private>
            <private id="AllCoveragesInitializePrivate.SetPremiumToZeroNonFullyEarned" type="float" comment="" caption="All Coverages Initialize Private Set Premium To Zero">
              <value value="0" />
              <affects>
                <reference idref="AllCoveragesInitializeOutput.Premium" effect="setValue" />
                <reference idref="AllCoveragesInitializeOutput.PremiumFE" effect="setValue" />
                <reference idref="AllCoveragesInitializeOutput.Written" effect="setValue" />
              </affects>
            </private>
            <private id="AllCoveragesInitializePrivate.FullyEarnedDeleteCheck" type="float" comment="" caption="All Coverages Initialize Private Set Premium To Zero">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="AllCoveragesInitializeOutput.Prior" type="float" />
                        <operand type="int" value="0" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="AllCoveragesInitializeOutput.Deleted" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="AllCoveragesInitializePrivate.FullyEarnedDeleteReset" />
                </if>
              </value>
            </private>
            <private id="AllCoveragesInitializePrivate.FullyEarnedDeleteReset" type="float" comment="" caption="All Coverages Initialize Private Set Premium To Zero">
              <affects>
                <reference idref="AllCoveragesInitializeOutput.Premium" effect="setValue" />
                <reference idref="AllCoveragesInitializeOutput.PremiumFE" effect="setValue" />
                <reference idref="AllCoveragesInitializeOutput.Written" effect="setValue" />
                <reference idref="AllCoveragesInitializeOutput.Change" effect="setValue" />
                <reference idref="AllCoveragesInitializeOutput.FullyEarnedIndicator" effect="setValue" />
              </affects>
              <value value="0" />
            </private>
          </object>
          <nameValues schemaExclude="1" />
        </object>
        <object id="PolicyUnderwriting" path="policyUnderwriting">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="CommercialGeneralLiabilityHistory" path="priorInsurance[Type=&quot;GeneralLiability&quot;]">
            <minOccurs value="0" />
            <maxOccurs value="5" />
            <object id="CommercialGeneralLiabilityHistoryInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="CommercialGeneralLiabilityHistoryInput.BIAggregateLimit" path="priorInsuranceHistory[Type=&quot;BIAggregateLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Bodily Injury Aggregate" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.BIOccurrenceLimit" path="priorInsuranceHistory[Type=&quot;BIOccurrenceLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Bodily Injury Occurrence" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.CarrierName" path="CarrierName" type="string">
                <definition>
                  <caption value="Carrier" />
                  <maxLength idref="MaxLength.Name" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.CombinedSingleLimit" path="priorInsuranceHistory[Type=&quot;CombinedSingleLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Combined Single Limit" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.EachOccurrenceLimit" path="priorInsuranceHistory[Type=&quot;EachOccurrenceLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Each Occurrence" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.EffectiveDate" path="EffectiveDate" type="date">
                <definition>
                  <caption value="Effective Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.ExpirationDate" path="ExpirationDate" type="date">
                <definition>
                  <caption value="Expiration Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.FireDamageLimit" path="priorInsuranceHistory[Type=&quot;FireDamageLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Fire Damage" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.GeneralAggregateLimit" path="priorInsuranceHistory[Type=&quot;GeneralAggregateLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="General Aggregate" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.MedicalExpenseLimit" path="priorInsuranceHistory[Type=&quot;MedicalExpenseLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Medical Expense" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.ModificationFactor" path="ModificationFactor" type="float">
                <definition>
                  <caption value="Modification Factor" />
                  <maxLength idref="MaxLength.Factor" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.PDAggregateLimit" path="priorInsuranceHistory[Type=&quot;PDAggregateLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Property Damage Aggregate" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.PDOccurrenceLimit" path="priorInsuranceHistory[Type=&quot;PDOccurrenceLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Property Damage Occurrence" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.PersonalAdvertisingInjuryLimit" path="priorInsuranceHistory[Type=&quot;PersonalAdvertisingInjuryLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Personal &amp; Adv Inj" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.PolicyNumber" path="PolicyNumber" type="string">
                <definition>
                  <caption value="Policy Number" />
                  <maxLength idref="MaxLength.PolicyNumber" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.PolicyType" path="PolicyType" type="string">
                <definition>
                  <caption value="Policy Type" />
                  <options>
                    <option value="ClaimsMade" caption="Claims Made" />
                    <option value="Occurrence" caption="Occurrence" />
                  </options>
                  <formatMask idref="FormatMask.BlankOption" />
                  <maxLength idref="MaxLength.Type" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.ProductsCompletedOpsLimit" path="priorInsuranceHistory[Type=&quot;ProductsCompletedOpsLimit&quot; and Scope=&quot;GeneralLiability&quot;]/iValue" type="int">
                <definition>
                  <caption value="Products Comp Op Aggregate" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.RetroDate" path="priorInsuranceHistory[Type=&quot;RetroDate&quot; and Scope=&quot;GeneralLiability&quot;]/dValue" type="date">
                <definition>
                  <caption value="Retro Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.TotalPremium" path="TotalPremium" type="float">
                <definition>
                  <caption value="Total Premium" />
                  <maxLength idref="MaxLength.Premium" />
                </definition>
              </public>
              <public id="CommercialGeneralLiabilityHistoryInput.Premium" path="Premium" type="float">
                <definition>
                  <caption value="Premium" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumInput" />
                </definition>
              </public>
            </object>
            <object id="CommercialGeneralLiabilityHistoryOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="CommercialGeneralLiabilityHistoryOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="CommercialGeneralLiabilityHistoryOutputNonShredded.CurrentNumber" path="CurrentNumber" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value=" " />
                    <maxLength idref="MaxLength.sValue" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" type="string" value="#" />
                        <argument op="add" idref="CommercialGeneralLiabilityHistoryPrivate.CurrentIteration" type="int" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="CommercialGeneralLiabilityHistoryOutputNonShredded.ID" path="@id" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="ID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <public id="CommercialGeneralLiabilityHistoryOutputNonShredded.InAddMode" path="InAddMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Add Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="CommercialGeneralLiabilityHistoryOutputNonShredded.InEditMode" path="InEditMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Edit Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
              </object>
            </object>
            <object id="CommercialGeneralLiabilityHistoryPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialGeneralLiabilityHistoryPrivate.ClearAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="CommercialGeneralLiabilityHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.ClearEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="CommercialGeneralLiabilityHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.ContextPath" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="CommercialGeneralLiabilityHistoryOutputNonShredded.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.CurrentIteration" caption="" type="int" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <iterator type="int" scope="all" action="current" idref="CommercialGeneralLiabilityHistory" />
                </value>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.NotInAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="CommercialGeneralLiabilityHistoryOutputNonShredded.InAddMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.NotInEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="CommercialGeneralLiabilityHistoryOutputNonShredded.InEditMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.SetAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="CommercialGeneralLiabilityHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.SetEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="CommercialGeneralLiabilityHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialGeneralLiabilityHistoryPrivate.ShowOKButton" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="ne">
                    <operand idref="CommercialGeneralLiabilityHistoryInput.CarrierName" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </value>
              </private>
            </object>
          </object>
          <object id="CommercialAutoHistory" path="priorInsurance[Type=&quot;CommercialAuto&quot;]">
            <minOccurs value="0" />
            <maxOccurs value="5" />
            <object id="CommercialAutoHistoryPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialAutoHistoryPrivate.ClearAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="CommercialAutoHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialAutoHistoryPrivate.ClearEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="CommercialAutoHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialAutoHistoryPrivate.ContextPath" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="CommercialAutoHistoryOutputNonShredded.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="CommercialAutoHistoryPrivate.CurrentIteration" caption="" type="int" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <iterator type="int" scope="all" action="current" idref="CommercialAutoHistory" />
                </value>
              </private>
              <private id="CommercialAutoHistoryPrivate.NotInAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="CommercialAutoHistoryOutputNonShredded.InAddMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="CommercialAutoHistoryPrivate.NotInEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="CommercialAutoHistoryOutputNonShredded.InEditMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="CommercialAutoHistoryPrivate.SetAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="CommercialAutoHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialAutoHistoryPrivate.SetEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="CommercialAutoHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialAutoHistoryPrivate.ShowOKButton" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="ne">
                    <operand idref="CommercialAutoHistoryInput.CarrierName" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </value>
              </private>
            </object>
            <object id="CommercialAutoHistoryInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="CommercialAutoHistoryInput.BIPerAccidentLimit" path="priorInsuranceHistory[Type=&quot;BIPerAccidentLimit&quot; and Scope=&quot;CommercialAuto&quot;]/iValue" type="int">
                <definition>
                  <caption value="Bodily Injury Ea Accident" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.BIPerPersonLimit" path="priorInsuranceHistory[Type=&quot;BIPerPersonLimit&quot; and Scope=&quot;CommercialAuto&quot;]/iValue" type="int">
                <definition>
                  <caption value="Bodily Injury Ea Person" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.CarrierName" path="CarrierName" type="string">
                <definition>
                  <caption value="Carrier" />
                  <maxLength idref="MaxLength.Name" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.CombinedSingleLimit" path="priorInsuranceHistory[Type=&quot;CombinedSingleLimit&quot; and Scope=&quot;CommercialAuto&quot;]/iValue" type="int">
                <definition>
                  <caption value="Combined Single Limit" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.EffectiveDate" path="EffectiveDate" type="date">
                <definition>
                  <caption value="Effective Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.ExpirationDate" path="ExpirationDate" type="date">
                <definition>
                  <caption value="Expiration Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.FireDamageLimit" path="priorInsuranceHistory[Type=&quot;FireDamageLimit&quot; and Scope=&quot;CommercialAuto&quot;]/iValue" type="int">
                <definition>
                  <caption value="Fire Damage Limit" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.ModificationFactor" path="ModificationFactor" type="float">
                <definition>
                  <caption value="Modification Factor" />
                  <maxLength idref="MaxLength.Factor" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.PDLimit" path="priorInsuranceHistory[Type=&quot;PDLimit&quot; and Scope=&quot;CommercialAuto&quot;]/iValue" type="int">
                <definition>
                  <caption value="Property Damage" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.PolicyNumber" path="PolicyNumber" type="string">
                <definition>
                  <caption value="Policy Number" />
                  <maxLength idref="MaxLength.PolicyNumber" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.PolicyType" path="PolicyType" type="string">
                <definition>
                  <caption value="Policy Type" />
                  <maxLength idref="MaxLength.Type" />
                  <formatMask value="###############" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.RetroDate" path="priorInsuranceHistory[Type=&quot;RetroDate&quot; and Scope=&quot;CommercialAuto&quot;]/dValue" type="date">
                <definition>
                  <caption value="Retro Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.TotalPremium" path="TotalPremium" type="float">
                <definition>
                  <caption value="Total Premium" />
                  <maxLength idref="MaxLength.Premium" />
                </definition>
              </public>
              <public id="CommercialAutoHistoryInput.Premium" path="Premium" type="float">
                <definition>
                  <caption value="Premium" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumInput" />
                </definition>
              </public>
            </object>
            <object id="CommercialAutoHistoryOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="CommercialAutoHistoryOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="CommercialAutoHistoryOutputNonShredded.CurrentNumber" path="CurrentNumber" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value=" " />
                    <maxLength idref="MaxLength.sValue" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" type="string" value="#" />
                        <argument op="add" idref="CommercialAutoHistoryPrivate.CurrentIteration" type="int" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="CommercialAutoHistoryOutputNonShredded.ID" path="@id" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="ID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <public id="CommercialAutoHistoryOutputNonShredded.InAddMode" path="InAddMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Add Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="CommercialAutoHistoryOutputNonShredded.InEditMode" path="InEditMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Edit Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
              </object>
            </object>
          </object>
          <object id="PolicyUnderwritingPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="PolicyUnderwritingPrivate.ClearCommercialAutoHistoryEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="sum" idref="CommercialAutoHistory">
                  <reference idref="CommercialAutoHistoryPrivate.ClearAddMode" type="boolean" />
                  <reference idref="CommercialAutoHistoryPrivate.ClearEditMode" type="boolean" />
                </iterator>
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.ClearCommercialGeneralLiabilityHistoryEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="sum" idref="CommercialGeneralLiabilityHistory">
                  <reference idref="CommercialGeneralLiabilityHistoryPrivate.ClearAddMode" type="boolean" />
                  <reference idref="CommercialGeneralLiabilityHistoryPrivate.ClearEditMode" type="boolean" />
                </iterator>
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.ClearCommercialPropertyHistoryEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="sum" idref="CommercialPropertyHistory">
                  <reference idref="CommercialPropertyHistoryPrivate.ClearAddMode" type="boolean" />
                  <reference idref="CommercialPropertyHistoryPrivate.ClearEditMode" type="boolean" />
                </iterator>
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.ClearOtherInsuranceHistoryEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="sum" idref="OtherInsuranceHistory">
                  <reference idref="OtherInsuranceHistoryPrivate.ClearAddMode" type="boolean" />
                  <reference idref="OtherInsuranceHistoryPrivate.ClearEditMode" type="boolean" />
                </iterator>
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.ClearUnderwritingLossHistoryEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="sum" idref="UnderwritingLossHistory">
                  <reference idref="UnderwritingLossHistoryPrivate.ClearAddMode" type="boolean" />
                  <reference idref="UnderwritingLossHistoryPrivate.ClearEditMode" type="boolean" />
                </iterator>
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.LossCount" caption="" type="int" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="int" scope="all" action="count" idref="UnderwritingLossHistory" />
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.LossExists" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <comparison compare="gt">
                  <operand idref="PolicyUnderwritingPrivate.LossCount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.ShowDeleteButtons" caption="" type="boolean">
              <value idref="True" />
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="PolicyUnderwritingPrivate.ShowAddButtons" caption="" type="boolean">
              <value idref="True" />
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="PolicyUnderwritingPrivate.CommercialGeneralLiabilityHistoryCount" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="CommercialGeneralLiabilityHistory" />
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.CommercialAutoHistoryCount" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="CommercialAutoHistory" />
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.CommercialPropertyHistoryCount" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="CommercialPropertyHistory" />
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.OtherInsuranceHistoryCount" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="OtherInsuranceHistory" />
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.UnderwritingLossHistoryCount" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="UnderwritingLossHistory" />
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.ClearPolicyUnderwritingAdditionalInterestEditMode" caption="" type="boolean">
              <value>
                <iterator type="boolean" scope="all" action="sum" idref="PolicyUnderwritingAdditionalInterest">
                  <reference idref="PolicyUnderwritingAdditionalInterestPrivate.ClearAddMode" type="boolean" />
                  <reference idref="PolicyUnderwritingAdditionalInterestPrivate.ClearEditMode" type="boolean" />
                </iterator>
              </value>
            </private>
            <private id="PolicyUnderwritingPrivate.PolicyUnderwritingAdditionalInterestCount" caption="" type="boolean">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="PolicyUnderwritingAdditionalInterest" />
              </value>
            </private>
          </object>
          <object id="CommercialPropertyHistory" path="priorInsurance[Type=&quot;Property&quot;]">
            <minOccurs value="0" />
            <maxOccurs value="5" />
            <object id="CommercialPropertyHistoryInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="CommercialPropertyHistoryInput.BuildingLimit" path="priorInsuranceHistory[Type=&quot;BuildingLimit&quot; and Scope=&quot;Property&quot;]/iValue" type="int">
                <definition>
                  <caption value="Building Amt" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.CarrierName" path="CarrierName" type="string">
                <definition>
                  <caption value="Carrier" />
                  <maxLength idref="MaxLength.Name" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.EffectiveDate" path="EffectiveDate" type="date">
                <definition>
                  <caption value="Effective Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.ExpirationDate" path="ExpirationDate" type="date">
                <definition>
                  <caption value="Expiration Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.ModificationFactor" path="ModificationFactor" type="float">
                <definition>
                  <caption value="Modification Factor" />
                  <maxLength idref="MaxLength.Factor" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.PersonalPropertyLimit" path="priorInsuranceHistory[Type=&quot;PersonalPropertyLimit&quot; and Scope=&quot;Property&quot;]/iValue" type="int">
                <definition>
                  <caption value="Pers Prop Amt" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.PolicyNumber" path="PolicyNumber" type="string">
                <definition>
                  <caption value="Policy Number" />
                  <maxLength idref="MaxLength.PolicyNumber" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.PolicyType" path="PolicyType" type="string">
                <definition>
                  <caption value="Policy Type" />
                  <formatMask value="###############" />
                  <maxLength idref="MaxLength.Type" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.TotalPremium" path="TotalPremium" type="float">
                <definition>
                  <caption value="Total Premium" />
                  <maxLength idref="MaxLength.Premium" />
                </definition>
              </public>
              <public id="CommercialPropertyHistoryInput.Premium" path="Premium" type="float">
                <definition>
                  <caption value="Premium" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumInput" />
                </definition>
              </public>
            </object>
            <object id="CommercialPropertyHistoryOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="CommercialPropertyHistoryOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="CommercialPropertyHistoryOutputNonShredded.CurrentNumber" path="CurrentNumber" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value=" " />
                    <maxLength idref="MaxLength.sValue" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" type="string" value="#" />
                        <argument op="add" idref="CommercialPropertyHistoryPrivate.CurrentIteration" type="int" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="CommercialPropertyHistoryOutputNonShredded.ID" path="@id" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="ID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <public id="CommercialPropertyHistoryOutputNonShredded.InAddMode" path="InAddMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Add Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="CommercialPropertyHistoryOutputNonShredded.InEditMode" path="InEditMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Edit Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
              </object>
            </object>
            <object id="CommercialPropertyHistoryPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialPropertyHistoryPrivate.ClearAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="CommercialPropertyHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialPropertyHistoryPrivate.ClearEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="CommercialPropertyHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialPropertyHistoryPrivate.ContextPath" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="CommercialPropertyHistoryOutputNonShredded.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="CommercialPropertyHistoryPrivate.CurrentIteration" caption="" type="int" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <iterator type="int" scope="all" action="current" idref="CommercialPropertyHistory" />
                </value>
              </private>
              <private id="CommercialPropertyHistoryPrivate.NotInAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="CommercialPropertyHistoryOutputNonShredded.InAddMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="CommercialPropertyHistoryPrivate.NotInEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="CommercialPropertyHistoryOutputNonShredded.InEditMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="CommercialPropertyHistoryPrivate.SetAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="CommercialPropertyHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialPropertyHistoryPrivate.SetEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="CommercialPropertyHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="CommercialPropertyHistoryPrivate.ShowOKButton" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="ne">
                    <operand idref="CommercialPropertyHistoryInput.CarrierName" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </value>
              </private>
            </object>
          </object>
          <object id="OtherInsuranceHistory" path="priorInsurance[Type=&quot;OtherInsurance&quot;]">
            <minOccurs value="0" />
            <maxOccurs value="5" />
            <object id="OtherInsuranceHistoryInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="OtherInsuranceHistoryInput.CarrierName" path="CarrierName" type="string">
                <definition>
                  <caption value="Carrier" />
                  <maxLength idref="MaxLength.Name" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.EffectiveDate" path="EffectiveDate" type="date">
                <definition>
                  <caption value="Effective Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.ExpirationDate" path="ExpirationDate" type="date">
                <definition>
                  <caption value="Expiration Date" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.Limit" path="priorInsuranceHistory[Type=&quot;Limit&quot; and Scope=&quot;OtherInsurance&quot;]/iValue" type="int">
                <definition>
                  <caption value="Limit" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.ModificationFactor" path="ModificationFactor" type="float">
                <definition>
                  <caption value="Modification Factor" />
                  <maxLength idref="MaxLength.Factor" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.PolicyNumber" path="PolicyNumber" type="string">
                <definition>
                  <caption value="Policy Number" />
                  <maxLength idref="MaxLength.PolicyNumber" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.PolicyType" path="PolicyType" type="string">
                <definition>
                  <caption value="Policy Type" />
                  <formatMask value="###############" />
                  <maxLength idref="MaxLength.Type" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.TotalPremium" path="TotalPremium" type="float">
                <definition>
                  <caption value="Total Premium" />
                  <maxLength idref="MaxLength.Premium" />
                </definition>
              </public>
              <public id="OtherInsuranceHistoryInput.Premium" path="Premium" type="float">
                <definition>
                  <caption value="Premium" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumInput" />
                </definition>
              </public>
            </object>
            <object id="OtherInsuranceHistoryOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="OtherInsuranceHistoryOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="OtherInsuranceHistoryOutputNonShredded.CurrentNumber" path="CurrentNumber" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value=" " />
                    <maxLength idref="MaxLength.sValue" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" type="string" value="#" />
                        <argument op="add" idref="OtherInsuranceHistoryPrivate.CurrentIteration" type="int" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="OtherInsuranceHistoryOutputNonShredded.ID" path="@id" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="ID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <public id="OtherInsuranceHistoryOutputNonShredded.InAddMode" path="InAddMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Add Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="OtherInsuranceHistoryOutputNonShredded.InEditMode" path="InEditMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Edit Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
              </object>
            </object>
            <object id="OtherInsuranceHistoryPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="OtherInsuranceHistoryPrivate.ClearAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="OtherInsuranceHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="OtherInsuranceHistoryPrivate.ClearEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="OtherInsuranceHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="OtherInsuranceHistoryPrivate.ContextPath" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="OtherInsuranceHistoryOutputNonShredded.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="OtherInsuranceHistoryPrivate.CurrentIteration" caption="" type="int" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <iterator type="int" scope="all" action="current" idref="OtherInsuranceHistory" />
                </value>
              </private>
              <private id="OtherInsuranceHistoryPrivate.NotInAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="OtherInsuranceHistoryOutputNonShredded.InAddMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="OtherInsuranceHistoryPrivate.NotInEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="OtherInsuranceHistoryOutputNonShredded.InEditMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="OtherInsuranceHistoryPrivate.SetAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="OtherInsuranceHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="OtherInsuranceHistoryPrivate.SetEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="OtherInsuranceHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="OtherInsuranceHistoryPrivate.ShowOKButton" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="ne">
                    <operand idref="OtherInsuranceHistoryInput.CarrierName" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </value>
              </private>
            </object>
          </object>
          <object id="UnderwritingLossHistory" path="lossHistory">
            <minOccurs value="0" />
            <maxOccurs value="5" />
            <object id="UnderwritingLossHistoryInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="UnderwritingLossHistoryInput.AmountPaid" path="AmountPaid" type="int">
                <definition>
                  <caption value="Amount Paid" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.AmountReserved" path="AmountReserved" type="int">
                <definition>
                  <caption value="Amount Reserved" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.ClaimStatus" path="ClaimStatus" type="string">
                <definition>
                  <caption value="Claim Status" />
                  <formatMask value="blankOption:Open/Closed" />
                  <options>
                    <option value="Open" caption="Open" />
                    <option value="Closed" caption="Closed" />
                  </options>
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <corrections>
                  <correction operation="bestMatch" condition="incorrect" laxity="high" message="Original Value #{uncorrected} was changed to match an item in the list with #{corrected}." />
                </corrections>
              </public>
              <public id="UnderwritingLossHistoryInput.DateOfClaim" path="DateOfClaim" type="date">
                <definition>
                  <caption value="Date of Claim" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.DateOfOccurrence" path="DateOfOccurrence" type="date">
                <definition>
                  <caption value="Date of Occurrence" />
                  <maxLength idref="MaxLength.Date" />
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.LossLineOfBusiness" path="LossLineOfBusiness" type="string">
                <definition>
                  <caption value="Line" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.LossSummaryAttached" path="LossSummaryAttached" type="boolean">
                <definition>
                  <caption value="Summary Attached" />
                  <formatMask value="blankOption:Yes/No" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.TypeDescriptionOccurrence" path="TypeDescriptionOccurrence" type="string">
                <definition>
                  <caption value="Type/Description of Occurrence or Claim" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.ClaimOpen" path="ClaimOpen" type="string">
                <definition>
                  <caption value="Claim Open Y/N" />
                  <options>
                    <option value="Yes" caption="Yes" />
                    <option value="No" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.BlankOption" />
                </definition>
              </public>
              <public id="UnderwritingLossHistoryInput.Subrogation" path="Subrogation" type="string">
                <definition>
                  <caption value="Subrogation Y/N" />
                  <formatMask idref="FormatMask.BlankOption" />
                  <options>
                    <option value="Yes" caption="Yes" />
                    <option value="No" caption="No" />
                  </options>
                </definition>
              </public>
            </object>
            <object id="UnderwritingLossHistoryOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="UnderwritingLossHistoryOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="UnderwritingLossHistoryOutputNonShredded.CurrentNumber" path="CurrentNumber" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value=" " />
                    <maxLength idref="MaxLength.sValue" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" type="string" value="#" />
                        <argument op="add" idref="UnderwritingLossHistoryPrivate.CurrentIteration" type="int" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="UnderwritingLossHistoryOutputNonShredded.ID" path="@id" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="ID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <public id="UnderwritingLossHistoryOutputNonShredded.InAddMode" path="InAddMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Add Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="UnderwritingLossHistoryOutputNonShredded.InEditMode" path="InEditMode" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                  <definition>
                    <caption value="In Edit Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
              </object>
            </object>
            <object id="UnderwritingLossHistoryPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="UnderwritingLossHistoryPrivate.ClearAddMode" caption="" type="boolean">
                <value idref="False" />
                <affects>
                  <reference idref="UnderwritingLossHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="UnderwritingLossHistoryPrivate.ClearEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="False" />
                <affects>
                  <reference idref="UnderwritingLossHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="UnderwritingLossHistoryPrivate.ContextPath" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="UnderwritingLossHistoryOutputNonShredded.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="UnderwritingLossHistoryPrivate.CurrentIteration" caption="" type="int" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <iterator type="int" scope="all" action="current" idref="UnderwritingLossHistory" />
                </value>
              </private>
              <private id="UnderwritingLossHistoryPrivate.NotInAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="UnderwritingLossHistoryOutputNonShredded.InAddMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="UnderwritingLossHistoryPrivate.NotInEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="eq">
                    <operand idref="UnderwritingLossHistoryOutputNonShredded.InEditMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="UnderwritingLossHistoryPrivate.SetAddMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="UnderwritingLossHistoryOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="UnderwritingLossHistoryPrivate.SetEditMode" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value idref="True" />
                <affects>
                  <reference idref="UnderwritingLossHistoryOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="UnderwritingLossHistoryPrivate.ShowOKButton" caption="" type="boolean" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
                <value>
                  <comparison compare="ne">
                    <operand idref="UnderwritingLossHistoryInput.LossLineOfBusiness" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </value>
              </private>
            </object>
          </object>
          <object id="PolicyUnderwritingInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="ApplicantContact">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="ApplicantContact.WebsiteAddress" path="underwriting[Type=&quot;WebsiteAddress&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="Website Address" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.NumberMembersManagers" path="underwriting[Type=&quot;NumberMembersManagers&quot; and Scope=&quot;ApplicantContact&quot;]/iValue" type="int">
                <definition>
                  <caption value="No. of Members and Managers" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="ApplicantContact.CreditBureauName" path="underwriting[Type=&quot;CreditBureauName&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="CR Bureau Name" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.IDNumber" path="underwriting[Type=&quot;IDNumber&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="ID Number" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.InspectionContactName" path="underwriting[Type=&quot;InspectionContactName&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="Inspection Contact" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.InspectionContactPhone" path="underwriting[Type=&quot;InspectionContactPhone&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="Phone (A/C, No)" />
                  <maxLength idref="MaxLength.sValue" />
                  <formatMask idref="FormatMask.PhoneFax" />
                </definition>
              </public>
              <public id="ApplicantContact.InspectionContactEmail" path="underwriting[Type=&quot;InspectionContactEmail&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="E-Mail Address" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.AccountingContactName" path="underwriting[Type=&quot;AccountingContactName&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="Accounting Records Contact" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.AccountingContactPhone" path="underwriting[Type=&quot;AccountingContactPhone&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="Phone (A/C, No)" />
                  <formatMask idref="FormatMask.PhoneFax" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.AccountingContactEmail" path="underwriting[Type=&quot;AccountingContactEmail&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="E-Mail Address" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="ApplicantContact.NoticeGivenToApplicant" path="underwriting[Type=&quot;NoticeGivenToApplicant&quot; and Scope=&quot;ApplicantContact&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Copy of the Notice of Information Practices (Privacy) has been given to the Applicant." />
                  <formatMask idref="FormatMask.BlankOption" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                </definition>
              </public>
              <object id="ContactInformation" path="contactInformation">
                <minOccurs value="1" />
                <maxOccurs value="*" />
                <object id="ContactInformationInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ContactInformationInput.ContactName" path="ContactName" type="string">
                    <definition>
                      <caption value="Contact Name" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="ContactInformationInput.ContactType" path="ContactType" type="string">
                    <definition>
                      <caption value="Contact Type" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="ContactInformationInput.PrimaryEmail" path="PrimaryEmail" type="string">
                    <definition>
                      <caption value="Primary E-mail Address" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="ContactInformationInput.PrimaryPhoneNumber" path="PrimaryPhoneNumber" type="string">
                    <definition>
                      <caption value="Primary Phone #" />
                      <formatMask idref="FormatMask.PhoneFax" />
                    </definition>
                  </public>
                  <public id="ContactInformationInput.PrimaryPhoneType" path="PrimaryPhoneType" type="string">
                    <definition>
                      <caption value="Type" />
                      <options>
                        <option value="Home" caption="Home" />
                        <option value="Business" caption="Bus" />
                        <option value="Cell" caption="Cell" />
                      </options>
                      <formatMask idref="FormatMask.BlankOption" />
                    </definition>
                  </public>
                  <public id="ContactInformationInput.SecondaryEmail" path="SecondaryEmail" type="string">
                    <definition>
                      <caption value="Secondary E-mail Address" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="ContactInformationInput.SecondaryPhoneNumber" path="SecondaryPhoneNumber" type="string">
                    <definition>
                      <caption value="Secondary Phone #" />
                      <formatMask idref="FormatMask.PhoneFax" />
                    </definition>
                  </public>
                  <public id="ContactInformationInput.SecondaryPhoneType" path="SecondaryPhoneType" type="string">
                    <definition>
                      <caption value="Type" />
                      <options>
                        <option value="Home" caption="Home" />
                        <option value="Business" caption="Bus" />
                        <option value="Cell" caption="Cell" />
                      </options>
                      <formatMask idref="FormatMask.BlankOption" />
                    </definition>
                  </public>
                </object>
              </object>
              <public id="ApplicantContact.GLCode" path="underwriting[Type=&quot;GLCode&quot; and Scope=&quot;ApplicantContact&quot;]/sValue" type="string">
                <definition>
                  <caption value="GL Code" />
                  <maxLength value="12" />
                </definition>
              </public>
              <private id="ApplicantContact.HideNumberMembersManagers" caption="" type="boolean">
                <value>
                  <comparison compare="ne">
                    <operand idref="AccountInput.EntityType" type="string" />
                    <operand type="string" value="LLC" />
                  </comparison>
                </value>
              </private>
            </object>
            <object id="GeneralPolicyInformation">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="GeneralPolicyInformation.DescriptionOperations" path="underwriting[Type=&quot;DescriptionOperations&quot; and Scope=&quot;GeneralInfo&quot;]/LongDescription" type="string">
                <definition>
                  <caption value="Nature of Business/Description of Operations by Premise(s)" />
                  <formatMask idref="FormatMask.TextArea2100" />
                  <maxLength idref="MaxLength.LongDescription" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.SubsidiaryAnotherEntity" path="underwriting[Type=&quot;SubsidiaryAnotherEntity&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Is the applicant a subsidiary of another entity?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.SubsidiaryCompanies" path="underwriting[Type=&quot;SubsidiaryCompanies&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Does the applicant have any subsidiaries?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.FormalSafetyProgram" path="underwriting[Type=&quot;FormalSafetyProgram&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Is a formal safety program in operation?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.FlammablesExplosivesChemicals" path="underwriting[Type=&quot;FlammablesExplosivesChemicals&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any exposure to flammables, explosives, chemicals?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.CatastrophicExposures" path="underwriting[Type=&quot;CatastrophicExposures&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any catastrophe exposure?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.InsuranceWithCompany" path="underwriting[Type=&quot;InsuranceWithCompany&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any other insurance with this company?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.DeclinedCancelledNonRenewed" path="underwriting[Type=&quot;DeclinedCancelledNonRenewed&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any policy or coverage declined, cancelled or non-renewed during the prior three (3) years for any premises or operations?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.DiscriminationSexualAbuseNegligentHiring" path="underwriting[Type=&quot;DiscriminationSexualAbuseNegligentHiring&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any past losses or claims relating to sexual abuse or molestation allegations, discrimination or negligent hiring?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.ConvictedArson" path="underwriting[Type=&quot;ConvictedArson&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="During the last five years (ten in RI), has any applicant been indicted for or convicted of any degree of the crime of fraud, bribery, arson or any other arson-related crime in connection with this or any other property?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.UncorrectedCodeViolations" path="underwriting[Type=&quot;UncorrectedCodeViolations&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any uncorrected fire and/or safety code violations?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.BankruptciesTaxCreditLiens" path="underwriting[Type=&quot;BankruptciesTaxCreditLiens&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any bankruptcies, tax or credit liens against the applicant in the past 5 years?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.BusinessPlacedInTrust" path="underwriting[Type=&quot;BusinessPlacedInTrust&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Has business been placed in a trust?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.NameOfTrust" path="underwriting[Type=&quot;NameOfTrust&quot; and Scope=&quot;GeneralInfo&quot;]/sValue" type="string">
                <definition>
                  <caption value="If yes, name of trust:" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.GeneralRemarksProcessingInstructions" path="underwriting[Type=&quot;GeneralRemarksProcessingInstructions&quot; and Scope=&quot;GeneralInfo&quot;]/LongDescription" type="string">
                <definition>
                  <caption value="Remarks/Processing Instructions" />
                  <formatMask idref="FormatMask.TextArea2100" />
                  <maxLength idref="MaxLength.LongDescription" />
                </definition>
              </public>
              <object id="BusinessPlacedInTrust" path="businessPlacedInTrust">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="BusinessPlacedInTrustInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="BusinessPlacedInTrustInput.NameOfTrust" path="NameOfTrust" type="string">
                    <definition>
                      <caption value="Name Of Trust" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                    <rules>
                      <default idref="GeneralPolicyInformation.NameOfTrust" />
                    </rules>
                  </public>
                </object>
              </object>
              <object id="DeclinedCancelledNonRenewed" path="declinedCancelledNonRenewed">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="DeclinedCancelledNonRenewedInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="DeclinedCancelledNonRenewedInput.AgentNoLongerRepresentsCarrier" path="AgentNoLongerRepresentsCarrier" type="boolean">
                    <definition>
                      <caption value="Agent No Longer Represents Carrier" />
                    </definition>
                  </public>
                  <public id="DeclinedCancelledNonRenewedInput.ConditionCorrected" path="ConditionCorrected" type="boolean">
                    <definition>
                      <caption value="Condition Corrected" />
                    </definition>
                  </public>
                  <public id="DeclinedCancelledNonRenewedInput.ConditionCorrectedDescription" path="ConditionCorrectedDescription" type="string">
                    <definition>
                      <caption value="Description" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="DeclinedCancelledNonRenewedInput.NonPayment" path="NonPayment" type="boolean">
                    <definition>
                      <caption value="Non-Payment" />
                    </definition>
                  </public>
                  <public id="DeclinedCancelledNonRenewedInput.NonRenewal" path="NonRenewal" type="boolean">
                    <definition>
                      <caption value="Non-Renewal" />
                    </definition>
                  </public>
                  <public id="DeclinedCancelledNonRenewedInput.Other" path="Other" type="boolean">
                    <definition>
                      <caption value="Other" />
                    </definition>
                  </public>
                  <public id="DeclinedCancelledNonRenewedInput.OtherDescription" path="OtherDescription" type="string">
                    <definition>
                      <caption value="Description" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="DeclinedCancelledNonRenewedInput.Underwriting" path="Underwriting" type="boolean">
                    <definition>
                      <caption value="Underwriting" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="ForeclosureRepossessionBankruptcy" path="foreclosureRepossessionBankruptcy">
                <minOccurs value="0" />
                <maxOccurs value="*" />
                <object id="ForeclosureRepossessionBankruptcyInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ForeclosureRepossessionBankruptcyInput.Explanation" path="Explanation" type="string">
                    <definition>
                      <caption value="Explanation" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="ForeclosureRepossessionBankruptcyInput.OccurrenceDate" path="OccurrenceDate" type="date">
                    <definition>
                      <caption value="Occurrence Date" />
                      <formatMask idref="FormatMask.Date" />
                      <maxLength idref="MaxLength.Date" />
                    </definition>
                  </public>
                  <public id="ForeclosureRepossessionBankruptcyInput.Resolution" path="Resolution" type="string">
                    <definition>
                      <caption value="Resolution" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="ForeclosureRepossessionBankruptcyInput.ResolutionDate" path="ResolutionDate" type="date">
                    <definition>
                      <caption value="Resolution Date" />
                      <maxLength idref="MaxLength.Date" />
                      <formatMask idref="FormatMask.Date" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="FormalSafetyProgram" path="formalSafetyProgram">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="FormalSafetyProgramInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="FormalSafetyProgramInput.MonthlyMeetings" path="MonthlyMeetings" type="boolean">
                    <definition>
                      <caption value="Monthly Meetings" />
                    </definition>
                  </public>
                  <public id="FormalSafetyProgramInput.OSHA" path="OSHA" type="boolean">
                    <definition>
                      <caption value="OSHA" />
                    </definition>
                  </public>
                  <public id="FormalSafetyProgramInput.Other" path="Other" type="boolean">
                    <definition>
                      <caption value="Other" />
                    </definition>
                  </public>
                  <public id="FormalSafetyProgramInput.OtherDescription" path="OtherDescription" type="string">
                    <definition>
                      <caption value="Description" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="FormalSafetyProgramInput.SafetyManual" path="SafetyManual" type="boolean">
                    <definition>
                      <caption value="Safety Manual" />
                    </definition>
                  </public>
                  <public id="FormalSafetyProgramInput.SafetyPosition" path="SafetyPosition" type="boolean">
                    <definition>
                      <caption value="Safety Position" />
                    </definition>
                  </public>
                </object>
              </object>
              <public id="GeneralPolicyInformation.ForeclosureRepossessionBankruptcy" path="underwriting[Type=&quot;ForeclosureRepossessionBankruptcy&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Has applicant had a foreclosure, repossession, bankruptcy or filed for bankruptcy during the last five (5) years?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.ForeignOperations" path="underwriting[Type=&quot;ForeignOperations&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Any foreign operations, foreign products distributed in USA, or US products sold/distributed in foreign countries?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.JudgementOrLien" path="underwriting[Type=&quot;JudgementOrLien&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Has applicant had a judgement or lien during the last five (5) years?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <public id="GeneralPolicyInformation.OtherBusinessVentures" path="underwriting[Type=&quot;OtherBusinessVentures&quot; and Scope=&quot;GeneralInfo&quot;]/bValue" type="boolean">
                <definition>
                  <caption value="Does applicant have other business ventures for which coverage is not requested?" />
                  <options>
                    <option value="1" caption="Yes" />
                    <option value="0" caption="No" />
                  </options>
                  <formatMask idref="FormatMask.Radio" />
                </definition>
              </public>
              <object id="InsuranceWithCompany" path="insuranceWithCompany">
                <minOccurs value="0" />
                <maxOccurs value="*" />
                <object id="InsuranceWithCompanyInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="InsuranceWithCompanyInput.LineOfBusiness" path="LineOfBusiness" type="string">
                    <definition>
                      <caption value="Line Of Business" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="InsuranceWithCompanyInput.PolicyNumber" path="PolicyNumber" type="string">
                    <definition>
                      <caption value="Policy Number" />
                      <maxLength idref="MaxLength.PolicyNumber" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="JudgementOrLien" path="judgementOrLien">
                <minOccurs value="0" />
                <maxOccurs value="*" />
                <object id="JudgementOrLienInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="JudgementOrLienInput.Explanation" path="Explanation" type="string">
                    <definition>
                      <caption value="Explanation" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="JudgementOrLienInput.OccurrenceDate" path="OccurrenceDate" type="date">
                    <definition>
                      <caption value="Occurrence Date" />
                      <formatMask idref="FormatMask.Date" />
                      <maxLength idref="MaxLength.Date" />
                    </definition>
                  </public>
                  <public id="JudgementOrLienInput.Resolution" path="Resolution" type="string">
                    <definition>
                      <caption value="Resolution" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="JudgementOrLienInput.ResolutionDate" path="ResolutionDate" type="date">
                    <definition>
                      <caption value="Resolution Date" />
                      <maxLength idref="MaxLength.Date" />
                      <formatMask idref="FormatMask.Date" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="NatureOfBusiness" path="natureOfBusiness">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="NatureOfBusinessInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="NatureOfBusinessInput.Apartments" path="Apartments" type="boolean">
                    <definition>
                      <caption value="Apartments" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.Condominiums" path="Condominiums" type="boolean">
                    <definition>
                      <caption value="Condominiums" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.Contractor" path="Contractor" type="boolean">
                    <definition>
                      <caption value="Contractor" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.DateBusinessStarted" path="DateBusinessStarted" type="date">
                    <definition>
                      <caption value="Date Business Started" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.DescriptionOperationsOtherNamedInsureds" path="DescriptionOperationsOtherNamedInsureds" type="string">
                    <definition>
                      <caption value="Description of Operations of Other Named Insureds" />
                      <formatMask idref="FormatMask.TextArea2100" />
                      <maxLength idref="MaxLength.LongDescription" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.DescriptionPrimaryOperations" path="DescriptionPrimaryOperations" type="string">
                    <definition>
                      <caption value="Description of Primary Operations" />
                      <formatMask idref="FormatMask.TextArea2100" />
                      <maxLength idref="MaxLength.LongDescription" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.InstallationServiceRepairWorkPercent" path="InstallationServiceRepairWorkPercent" type="float">
                    <definition>
                      <caption value="Installation, Service or Repair Work %" />
                      <maxLength idref="MaxLength.Mods" />
                    </definition>
                    <rules>
                      <minimum value="0" />
                      <maximum value="100" />
                    </rules>
                  </public>
                  <public id="NatureOfBusinessInput.Institutional" path="Institutional" type="boolean">
                    <definition>
                      <caption value="Institutional" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.Manufacturing" path="Manufacturing" type="boolean">
                    <definition>
                      <caption value="Manufacturing" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.Office" path="Office" type="boolean">
                    <definition>
                      <caption value="Office" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.OffPremisesInstallationServiceRepairPercent" path="OffPremisesInstallationServiceRepairPercent" type="float">
                    <definition>
                      <caption value="Off Premises Installation, Service or Repair Work %" />
                      <maxLength idref="MaxLength.Mods" />
                    </definition>
                    <rules>
                      <minimum value="0" />
                      <maximum value="100" />
                    </rules>
                  </public>
                  <public id="NatureOfBusinessInput.Restaurant" path="Restaurant" type="boolean">
                    <definition>
                      <caption value="Restaurant" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.Retail" path="Retail" type="boolean">
                    <definition>
                      <caption value="Retail" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.RetailStoresServiceOperationsTotalSales" path="RetailStoresServiceOperationsTotalSales" type="float">
                    <definition>
                      <caption value="Retail  Stores or Service Operations % of Total Sales" />
                      <maxLength idref="MaxLength.Mods" />
                    </definition>
                    <rules>
                      <minimum value="0" />
                      <maximum value="100" />
                    </rules>
                  </public>
                  <public id="NatureOfBusinessInput.Service" path="Service" type="boolean">
                    <definition>
                      <caption value="Service" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.Wholesale" path="Wholesale" type="boolean">
                    <definition>
                      <caption value="Wholesale" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.Other" path="Other" type="boolean">
                    <definition>
                      <caption value="Other" />
                    </definition>
                  </public>
                  <public id="NatureOfBusinessInput.OtherDescription" path="OtherDescription" type="string">
                    <definition>
                      <caption value="Description" />
                      <maxLength value="40" />
                    </definition>
                  </public>
                </object>
                <object id="NatureOfBusinessPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="NatureOfBusinessPrivate.HideOtherDescription" caption="" type="boolean">
                    <value>
                      <comparison compare="eq">
                        <operand idref="NatureOfBusinessInput.Other" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </value>
                  </private>
                </object>
              </object>
              <object id="SubsidiaryAnotherEntity" path="subsidiaryAnotherEntity">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="SubsidiaryAnotherEntityInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="SubsidiaryAnotherEntityInput.ParentCompanyName" path="ParentCompanyName" type="string">
                    <definition>
                      <caption value="Parent Company Name" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="SubsidiaryAnotherEntityInput.PercentOwned" path="PercentOwned" type="int">
                    <definition>
                      <caption value="% Owned" />
                      <maxLength value="3" />
                    </definition>
                    <rules>
                      <minimum value="0" />
                      <maximum value="100" />
                    </rules>
                  </public>
                  <public id="SubsidiaryAnotherEntityInput.RelationshipDescription" path="RelationshipDescription" type="string">
                    <definition>
                      <caption value="Relationship Description" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="SubsidiaryCompanies" path="subsidiaryCompanies">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <object id="SubsidiaryCompaniesInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="SubsidiaryCompaniesInput.PercentOwned" path="PercentOwned" type="int">
                    <definition>
                      <caption value="% Owned" />
                      <maxLength value="3" />
                    </definition>
                    <rules>
                      <minimum value="0" />
                      <maximum value="100" />
                    </rules>
                  </public>
                  <public id="SubsidiaryCompaniesInput.RelationshipDescription" path="RelationshipDescription" type="string">
                    <definition>
                      <caption value="Relationship Description" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="SubsidiaryCompaniesInput.SubsidiaryCompanyName" path="SubsidiaryCompanyName" type="string">
                    <definition>
                      <caption value="Subsidiary Company Name" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                </object>
              </object>
              <object id="UncorrectedCodeViolations" path="uncorrectedCodeViolations">
                <minOccurs value="0" />
                <maxOccurs value="*" />
                <object id="UncorrectedCodeViolationsInput">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="UncorrectedCodeViolationsInput.Explanation" path="Explanation" type="string">
                    <definition>
                      <caption value="Explanation" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="UncorrectedCodeViolationsInput.OccurrenceDate" path="OccurrenceDate" type="date">
                    <definition>
                      <caption value="Occurrence Date" />
                      <formatMask idref="FormatMask.Date" />
                      <maxLength idref="MaxLength.Date" />
                    </definition>
                  </public>
                  <public id="UncorrectedCodeViolationsInput.Resolution" path="Resolution" type="string">
                    <definition>
                      <caption value="Resolution" />
                      <maxLength idref="MaxLength.sValue" />
                    </definition>
                  </public>
                  <public id="UncorrectedCodeViolationsInput.ResolutionDate" path="ResolutionDate" type="date">
                    <definition>
                      <caption value="Resolution Date" />
                      <maxLength idref="MaxLength.Date" />
                      <formatMask idref="FormatMask.Date" />
                    </definition>
                  </public>
                </object>
              </object>
            </object>
            <object id="UnderwritingLossInformation">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="UnderwritingLossInformation.GeneralRemarksProcessingInstructions" path="underwriting[Type=&quot;Remarks&quot; and Scope=&quot;LossHistory&quot;]/LongDescription" type="string">
                <definition>
                  <caption value="Remarks (Note: Fidelity requires a five year loss history)" />
                  <formatMask idref="FormatMask.TextArea2100" />
                  <maxLength idref="MaxLength.LongDescription" />
                </definition>
              </public>
              <public id="UnderwritingLossInformation.TotalLosses" path="underwriting[Type=&quot;TotalLosses&quot; and Scope=&quot;LossHistory&quot;]/fValue" type="float">
                <definition>
                  <caption value="Total Losses" />
                  <formatMask idref="FormatMask.Premium" />
                  <maxLength idref="MaxLength.Premium" />
                </definition>
                <rules>
                  <default value="0" />
                </rules>
              </public>
            </object>
          </object>
          <object id="PolicyUnderwritingAdditionalInterest" path="policyUnderwritingAdditionalInterest">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <object id="PolicyUnderwritingAdditionalInterestInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="PolicyUnderwritingAdditionalInterestInput.Address1" path="address/Address1" type="string">
                <definition>
                  <caption value="Address 1" />
                  <maxLength idref="MaxLength.Address" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Address2" path="address/Address2" type="string">
                <definition>
                  <caption value="Address 2" />
                  <maxLength idref="MaxLength.Address" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Aircraft" path="Aircraft" type="string">
                <definition>
                  <caption value="Aircraft" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Airport" path="Airport" type="string">
                <definition>
                  <caption value="Airport" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Boat" path="Boat" type="string">
                <definition>
                  <caption value="Boat" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Building" path="Building" type="string">
                <definition>
                  <caption value="Building" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Certificate" path="Certificate" type="boolean">
                <definition>
                  <caption value="Certificate" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.City" path="address/City" type="string">
                <definition>
                  <caption value="City" />
                  <maxLength idref="MaxLength.City" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.EmailAddress" path="EmailAddress" type="string">
                <definition>
                  <caption value="E-mail Address" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.FaxNumber" path="FaxNumber" type="string">
                <definition>
                  <caption value="Fax (A/C, No)" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Interest" path="Interest" type="string">
                <definition>
                  <caption value="Interest" />
                  <formatMask idref="FormatMask.BlankOption" />
                  <options>
                    <option value="AdditionalInsured" caption="Additional Insured" />
                    <option value="BreachOfWarranty" caption="Breach Of Warranty" />
                    <option value="CoOwner" caption="Co-Owner" />
                    <option value="EmployeeAsLessor" caption="Employee As Lessor" />
                    <option value="LeasebackOwner" caption="Leaseback Owner" />
                    <option value="Lienholder" caption="Lienholder" />
                    <option value="LossPayee" caption="Loss Payee" />
                    <option value="Mortgagee" caption="Mortgagee" />
                    <option value="Owner" caption="Owner" />
                    <option value="Registrant" caption="Registrant" />
                    <option value="Trustee" caption="Trustee" />
                    <option value="Other" caption="Other" />
                  </options>
                </definition>
                <corrections>
                  <correction operation="bestMatch" condition="incorrect" laxity="high" message="Original Value #{uncorrected} was changed to match an item in the list with #{corrected}." />
                </corrections>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.InterestEndDate" path="InterestEndDate" type="date">
                <definition>
                  <caption value="Interest End Date" />
                  <formatMask idref="FormatMask.Date" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Item" path="Item" type="string">
                <definition>
                  <caption value="Item" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.ItemClass" path="ItemClass" type="string">
                <definition>
                  <caption value="Item Class" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.ItemDescription" path="ItemDescription" type="string">
                <definition>
                  <caption value="Item Description" />
                  <maxLength value="20" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.LienAmount" path="LienAmount" type="int">
                <definition>
                  <caption value="Lien Amount" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Location" path="Location" type="string">
                <definition>
                  <caption value="Location" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Name" path="Name" type="string">
                <definition>
                  <caption value="Name" />
                  <maxLength idref="MaxLength.Name" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.PhoneNumber" path="PhoneNumber" type="string">
                <definition>
                  <caption value="Phone (A/C, No, Ext)" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Policy" path="Policy" type="boolean">
                <definition>
                  <caption value="Policy" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Rank" path="Rank" type="string">
                <definition>
                  <caption value="Rank" />
                  <maxLength value="3" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.ReasonForInterest" path="ReasonForInterest" type="string">
                <definition>
                  <caption value="Reason For Interest" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.ReferenceLoanNumber" path="ReferenceLoanNumber" type="string">
                <definition>
                  <caption value="Reference/Loan #" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.SendBill" path="SendBill" type="boolean">
                <definition>
                  <caption value="Send Bill" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.State" path="address/State" type="string">
                <definition>
                  <caption value="State" />
                  <maxLength idref="MaxLength.State" />
                  <options idref="StateAbbreviations" name="State" />
                  <formatMask idref="FormatMask.BlankOption" />
                </definition>
                <corrections>
                  <correction operation="bestMatch" condition="incorrect" laxity="high" message="Original Value #{uncorrected} was changed to match an item in the list with #{corrected}." />
                </corrections>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.Vehicle" path="Vehicle" type="string">
                <definition>
                  <caption value="Vehicle" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.ZipCode" path="address/ZipCode" type="string">
                <definition>
                  <caption value="Zip Code" />
                  <maxLength idref="MaxLength.Zip" />
                  <formatMask idref="FormatMask.Zipcode" />
                </definition>
              </public>
              <public id="PolicyUnderwritingAdditionalInterestInput.OtherInterestDescription" path="OtherInterestDescription" type="string">
                <definition>
                  <caption value="Other Description" />
                  <maxLength idref="MaxLength.Name" />
                </definition>
              </public>
            </object>
            <object id="PolicyUnderwritingAdditionalInterestOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="PolicyUnderwritingAdditionalInterestOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="PolicyUnderwritingAdditionalInterestOutputNonShredded.CurrentNumber" path="CurrentNumber" type="string">
                  <definition>
                    <caption value="Policy Underwriting Additional Interest Output Non Shredded Current Number" />
                    <maxLength idref="MaxLength.sValue" />
                    <readOnly idref="True" />
                  </definition>
                  <rules>
                    <value>
                      <calculation>
                        <argument op="eq" type="string" value="#" />
                        <argument op="add" idref="PolicyUnderwritingAdditionalInterestPrivate.CurrentIteration" type="int" />
                      </calculation>
                    </value>
                  </rules>
                </public>
                <public id="PolicyUnderwritingAdditionalInterestOutputNonShredded.EvidenceCaption" path="EvidenceCaption" type="string">
                  <definition>
                    <caption value="Evidence" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="PolicyUnderwritingAdditionalInterestOutputNonShredded.ID" path="ID" type="string">
                  <definition>
                    <caption value="Policy Underwriting Additional Interest Output Non ShreddedID" />
                    <maxLength idref="MaxLength.ID" />
                  </definition>
                </public>
                <public id="PolicyUnderwritingAdditionalInterestOutputNonShredded.InAddMode" path="InAddMode" type="boolean">
                  <definition>
                    <caption value="Policy Underwriting Additional Interest Output Non Shredded In Add Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="PolicyUnderwritingAdditionalInterestOutputNonShredded.InEditMode" path="InEditMode" type="boolean">
                  <definition>
                    <caption value="Policy Underwriting Additional Interest Output Non Shredded In Edit Mode" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
              </object>
            </object>
            <object id="PolicyUnderwritingAdditionalInterestPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="PolicyUnderwritingAdditionalInterestPrivate.ClearAddMode" caption="" type="boolean" path="ClearAddMode">
                <value idref="False" />
                <affects>
                  <reference idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.ClearEditMode" caption="" type="boolean" path="ClearEditMode">
                <value idref="False" />
                <affects>
                  <reference idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.ContextPath" caption="" type="string" path="ContextPath">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="//*[@id='" />
                    <argument op="add" idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.ID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.CurrentIteration" caption="" type="int" path="CurrentIteration">
                <value>
                  <iterator type="int" scope="all" action="current" idref="PolicyUnderwritingAdditionalInterest" />
                </value>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.NotInAddMode" caption="" type="boolean" path="NotInAddMode">
                <value>
                  <comparison compare="eq">
                    <operand idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.InAddMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.NotInEditMode" caption="" type="boolean" path="NotInEditMode">
                <value>
                  <comparison compare="eq">
                    <operand idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.InEditMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.SetAddMode" caption="" type="boolean" path="SetAddMode">
                <value idref="True" />
                <affects>
                  <reference idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.InAddMode" effect="setValue" />
                </affects>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.SetEditMode" caption="" type="boolean" path="SetEditMode">
                <value idref="True" />
                <affects>
                  <reference idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.InEditMode" effect="setValue" />
                </affects>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.ShowOKButton" caption="" type="boolean" path="ShowOKButton">
                <value>
                  <comparison compare="ne">
                    <operand idref="PolicyUnderwritingAdditionalInterestInput.Name" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </value>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.HideOtherInterestDescription" caption="" type="boolean" path="ShowOKButton">
                <value>
                  <comparison compare="ne">
                    <operand idref="PolicyUnderwritingAdditionalInterestInput.Interest" type="string" />
                    <operand type="string" value="Other" />
                  </comparison>
                </value>
              </private>
              <private id="PolicyUnderwritingAdditionalInterestPrivate.SetAddEditMode" caption="" type="boolean">
                <affects>
                  <reference idref="PolicyUnderwritingAdditionalInterestPrivate.SetAddMode" effect="postEffect" />
                  <reference idref="PolicyUnderwritingAdditionalInterestPrivate.SetEditMode" effect="postEffect" />
                </affects>
              </private>
            </object>
          </object>
          <object id="PolicyUnderwritingOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="PolicyUnderwritingOutputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="PolicyUnderwritingOutputNonShredded.OtherInsuranceHistoryMessageText" path="OtherInsuranceHistoryMessageText" type="string">
                <definition>
                  <caption value="Other Insurance History Message Text" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <default value="Enter all claims or losses (regardless of fault and whether or not insured) or occurrences that may give rise to claims for the last" />
                </rules>
              </public>
              <public id="PolicyUnderwritingOutputNonShredded.OtherInsuranceHistoryMessageYears" path="OtherInsuranceHistoryMessageYears" type="string">
                <definition>
                  <caption value="Other Insurance History Years" />
                  <maxLength value="2" />
                </definition>
              </public>
              <public id="PolicyUnderwritingOutputNonShredded.OtherInsuranceHistoryMessageYearsText" path="OtherInsuranceHistoryMessageYearsText" type="string">
                <definition>
                  <caption value="Other Insurance History Message Years Text" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <default value="years." />
                </rules>
              </public>
            </object>
          </object>
        </object>
        <object id="PolicyStateTaxesSurcharges">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="KYMunicipalTax" path="stateTaxSurcharge[Type=&quot;KYMunicipalTax&quot; and Scope=&quot;Tax&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="KYMunicipalTaxOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="KYMunicipalTaxOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="KYMunicipalTaxOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="KYMunicipalTaxOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="KYMunicipalTaxOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="KYMunicipalTaxOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="KYMunicipalTaxOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="KYMunicipalTaxOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="KYMunicipalTaxOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="KYMunicipalTaxOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="KYMunicipalTaxOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="KYMunicipalTaxOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="KYMunicipalTaxOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <value>
                    <comparison compare="gt">
                      <operand idref="KYMunicipalTaxOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                  <default idref="False" />
                </rules>
              </public>
            </object>
            <object id="KYMunicipalTaxPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="KYPremiumSurcharge" path="stateTaxSurcharge[Type=&quot;KYPremiumSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="KYPremiumSurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="KYPremiumSurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="KYPremiumSurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="KYPremiumSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="KYPremiumSurchargeOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="KYPremiumSurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="KYPremiumSurchargeOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="KYPremiumSurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="KYPremiumSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="KYPremiumSurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="KYPremiumSurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="KYPremiumSurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="KYPremiumSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="KYPremiumSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="KYPremiumSurchargePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="WVPolicyholderSurcharge" path="stateTaxSurcharge[Type=&quot;WVPolicyholderSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="WVPolicyholderSurchargeOutput" path="">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="WVPolicyholderSurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="WVPolicyholderSurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="WVPolicyholderSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="WVPolicyholderSurchargeOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="WVPolicyholderSurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="WVPolicyholderSurchargeOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="WVPolicyholderSurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="WVPolicyholderSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="WVPolicyholderSurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="WV Policyholder Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="WVPolicyholderSurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="WV Policyholder Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="WVPolicyholderSurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="WV Policyholder Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="WVPolicyholderSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="WVPolicyholderSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="WVPolicyholderSurchargePrivate" path="">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <private id="PolicyStateTaxesSurcharges.TotalAllTaxes" caption="" type="float">
            <value>
              <iterator type="float" scope="all" action="sum" idref="Line">
                <subtotal idref="LineKYMunicipalTaxOutput_Config.Written" type="float" subtotalRef="KYMunicipalTaxOutputNonShredded.AmountWrittenBeforeRounding" validRef="AccountPrivate.IsAnyLocationKYIncludeDeleted" />
                <subtotal idref="LineKYMunicipalTaxOutput_Config.Change" type="float" subtotalRef="KYMunicipalTaxOutputNonShredded.AmountChangeBeforeRounding" validRef="AccountPrivate.IsAnyLocationKYIncludeDeleted" />
                <subtotal idref="LineKYMunicipalTaxOutput.Amount" type="float" subtotalRef="KYMunicipalTaxOutputNonShredded.AmountBeforeRounding" validRef="AccountPrivate.IsAnyLocationKYIncludeDeleted" />
                <subtotal idref="LineKYPremiumSurchargeOutput_Config.Written" type="float" subtotalRef="KYPremiumSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="AccountPrivate.IsAnyLocationKYIncludeDeleted" />
                <subtotal idref="LineKYPremiumSurchargeOutput_Config.Change" type="float" subtotalRef="KYPremiumSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="AccountPrivate.IsAnyLocationKYIncludeDeleted" />
                <subtotal idref="LineKYPremiumSurchargeOutput.Amount" type="float" subtotalRef="KYPremiumSurchargeOutputNonShredded.AmountBeforeRounding" validRef="AccountPrivate.IsAnyLocationKYIncludeDeleted" />
                <subtotal idref="LineWVPolicyholderSurchargeOutput_Config.Written" type="float" subtotalRef="WVPolicyholderSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="AccountPrivate.IsAnyLocationWVIncludeDeleted" />
                <subtotal idref="LineWVPolicyholderSurchargeOutput_Config.Change" type="float" subtotalRef="WVPolicyholderSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="AccountPrivate.IsAnyLocationWVIncludeDeleted" />
                <subtotal idref="LineWVPolicyholderSurchargeOutput.Amount" type="float" subtotalRef="WVPolicyholderSurchargeOutputNonShredded.AmountBeforeRounding" validRef="AccountPrivate.IsAnyLocationWVIncludeDeleted" />
                <subtotal idref="LineNYFireInsSurchargeOutput_Config.Written" type="float" subtotalRef="NYFireInsSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsNYFireInsSurchargeAvailable" />
                <subtotal idref="LineNYFireInsSurchargeOutput_Config.Change" type="float" subtotalRef="NYFireInsSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsNYFireInsSurchargeAvailable" />
                <subtotal idref="LineNYFireInsSurchargeOutput.Amount" type="float" subtotalRef="NYFireInsSurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsNYFireInsSurchargeAvailable" />
                <subtotal idref="LineNYMotorVehLawEnforcementFeeOutput.Written" type="float" subtotalRef="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsNYMotorVehLawEnforcementFee" />
                <subtotal idref="LineNYMotorVehLawEnforcementFeeOutput.Change" type="float" subtotalRef="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsNYMotorVehLawEnforcementFee" />
                <subtotal idref="LineNYMotorVehLawEnforcementFeeOutput.Amount" type="float" subtotalRef="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsNYMotorVehLawEnforcementFee" />
                <subtotal idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput_Config.Written" type="float" subtotalRef="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeAvailable" />
                <subtotal idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput_Config.Change" type="float" subtotalRef="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeAvailable" />
                <subtotal idref="LineNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" type="float" subtotalRef="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsNJPropertyLiabilityInsuranceGuarantyAssociationSurchargeAvailable" />
                <subtotal idref="LineMNFirefighterReliefFundSurchargeOutput_Config.Written" type="float" subtotalRef="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsMNFirefighterReliefFundSurchargeAvailable" />
                <subtotal idref="LineMNFirefighterReliefFundSurchargeOutput_Config.Change" type="float" subtotalRef="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsMNFirefighterReliefFundSurchargeAvailable" />
                <subtotal idref="LineMNFirefighterReliefFundSurchargeOutput.Amount" type="float" subtotalRef="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsMNFirefighterReliefFundSurchargeAvailable" />
                <subtotal idref="LineFLHurricaneCatastropheFundOutput_Config.Written" type="float" subtotalRef="FLHurricaneCatastropheFundOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsFLHurricaneCatastropheFundAvailable" />
                <subtotal idref="LineFLHurricaneCatastropheFundOutput_Config.Change" type="float" subtotalRef="FLHurricaneCatastropheFundOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsFLHurricaneCatastropheFundAvailable" />
                <subtotal idref="LineFLHurricaneCatastropheFundOutput.Amount" type="float" subtotalRef="FLHurricaneCatastropheFundOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsFLHurricaneCatastropheFundAvailable" />
                <subtotal idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Written" type="float" subtotalRef="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsFLEmergencyManagementPreparednessFundSurchargeAvailable" />
                <subtotal idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Change" type="float" subtotalRef="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsFLEmergencyManagementPreparednessFundSurchargeAvailable" />
                <subtotal idref="LineFLEmergencyManagementPreparednessFundSurchargeOutput.Amount" type="float" subtotalRef="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsFLEmergencyManagementPreparednessFundSurchargeAvailable" />
                <subtotal idref="LineFLStateFireMarshalRegulatoryAssessmentOutput_Config.Written" type="float" subtotalRef="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsFLStateFireMarshalRegulatoryAssessmentAvailable" />
                <subtotal idref="LineFLStateFireMarshalRegulatoryAssessmentOutput_Config.Change" type="float" subtotalRef="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsFLStateFireMarshalRegulatoryAssessmentAvailable" />
                <subtotal idref="LineFLStateFireMarshalRegulatoryAssessmentOutput.Amount" type="float" subtotalRef="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsFLStateFireMarshalRegulatoryAssessmentAvailable" />
                <subtotal idref="LineMNFireSafetySurchargeOutput_Config.Written" type="float" subtotalRef="MNFireSafetySurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsMNFireSafetySurchargeAvailable" />
                <subtotal idref="LineMNFireSafetySurchargeOutput_Config.Change" type="float" subtotalRef="MNFireSafetySurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsMNFireSafetySurchargeAvailable" />
                <subtotal idref="LineMNFireSafetySurchargeOutput.Amount" type="float" subtotalRef="MNFireSafetySurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsMNFireSafetySurchargeAvailable" />
                <subtotal idref="LineCAAutomobileAssessmentChargeOutput.Written" type="float" subtotalRef="CAAutomobileAssessmentChargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsCAAutomobileAssessmentChargeAvailable" />
                <subtotal idref="LineCAAutomobileAssessmentChargeOutput.Change" type="float" subtotalRef="CAAutomobileAssessmentChargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsCAAutomobileAssessmentChargeAvailable" />
                <subtotal idref="LineCAAutomobileAssessmentChargeOutput.Amount" type="float" subtotalRef="CAAutomobileAssessmentChargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsCAAutomobileAssessmentChargeAvailable" />
                <subtotal idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Written" type="float" subtotalRef="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsCOAutoTheftPreventionAuthoritySurchargeAvailable" />
                <subtotal idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Change" type="float" subtotalRef="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsCOAutoTheftPreventionAuthoritySurchargeAvailable" />
                <subtotal idref="LineCOAutoTheftPreventionAuthoritySurchargeOutput.Amount" type="float" subtotalRef="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsCOAutoTheftPreventionAuthoritySurchargeAvailable" />
                <subtotal idref="LineTXAutomobileTheftPreventionFeeOutput.Written" type="float" subtotalRef="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsTXAutomobileTheftPreventionFeeAvailable" />
                <subtotal idref="LineTXAutomobileTheftPreventionFeeOutput.Change" type="float" subtotalRef="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsTXAutomobileTheftPreventionFeeAvailable" />
                <subtotal idref="LineTXAutomobileTheftPreventionFeeOutput.Amount" type="float" subtotalRef="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsTXAutomobileTheftPreventionFeeAvailable" />
                <subtotal idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Written" type="float" subtotalRef="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsFLCitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" />
                <subtotal idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Change" type="float" subtotalRef="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsFLCitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" />
                <subtotal idref="LineFLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" subtotalRef="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsFLCitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" />
                <subtotal idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Written" type="float" subtotalRef="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsLACitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" />
                <subtotal idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput_Config.Change" type="float" subtotalRef="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsLACitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" />
                <subtotal idref="LineLACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" subtotalRef="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsLACitizensPropertyInsuranceCorporationEmergencyAssessmentAvailable" />
                <subtotal idref="LineMIMCCASurchargeOutput.Written" type="float" subtotalRef="MIMCCASurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsMIMCCASurchargeAvailable" />
                <subtotal idref="LineMIMCCASurchargeOutput.Change" type="float" subtotalRef="MIMCCASurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsMIMCCASurchargeAvailable" />
                <subtotal idref="LineMIMCCASurchargeOutput.Amount" type="float" subtotalRef="MIMCCASurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsMIMCCASurchargeAvailable" />
                <subtotal idref="LineMEFireInvestigationPreventionTaxOutput_Config.Written" type="float" subtotalRef="MEFireInvestigationPreventionTaxOutputNonShredded.AmountWrittenBeforeRounding" validRef="AccountPrivate.IsAnyLocationMEIncludeDeleted" />
                <subtotal idref="LineMEFireInvestigationPreventionTaxOutput_Config.Change" type="float" subtotalRef="MEFireInvestigationPreventionTaxOutputNonShredded.AmountChangeBeforeRounding" validRef="AccountPrivate.IsAnyLocationMEIncludeDeleted" />
                <subtotal idref="LineMEFireInvestigationPreventionTaxOutput.Amount" type="float" subtotalRef="MEFireInvestigationPreventionTaxOutputNonShredded.AmountBeforeRounding" validRef="AccountPrivate.IsAnyLocationMEIncludeDeleted" />
                <subtotal idref="LineWAStateRegulatorySurchargeOutput_Config.Written" type="float" subtotalRef="WAStateRegulatorySurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="AccountPrivate.IsAnyLocationWAIncludeDeleted" />
                <subtotal idref="LineWAStateRegulatorySurchargeOutput_Config.Change" type="float" subtotalRef="WAStateRegulatorySurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="AccountPrivate.IsAnyLocationWAIncludeDeleted" />
                <subtotal idref="LineWAStateRegulatorySurchargeOutput.Amount" type="float" subtotalRef="WAStateRegulatorySurchargeOutputNonShredded.AmountBeforeRounding" validRef="AccountPrivate.IsAnyLocationWAIncludeDeleted" />
                <subtotal idref="LineCASeismicSafetyAccountAssessmentOutput.Written" type="float" subtotalRef="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsCASeismicSafetyAccountAssessmentAvailable" />
                <subtotal idref="LineCASeismicSafetyAccountAssessmentOutput.Change" type="float" subtotalRef="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsCASeismicSafetyAccountAssessmentAvailable" />
                <subtotal idref="LineCASeismicSafetyAccountAssessmentOutput.Amount" type="float" subtotalRef="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsCASeismicSafetyAccountAssessmentAvailable" />
                <subtotal idref="LineAZTheftProtectionAssessmentOutput.Written" type="float" subtotalRef="AZTheftProtectionAssessmentOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsAZTheftProtectionAssessmentAvailable" />
                <subtotal idref="LineAZTheftProtectionAssessmentOutput.Change" type="float" subtotalRef="AZTheftProtectionAssessmentOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsAZTheftProtectionAssessmentAvailable" />
                <subtotal idref="LineAZTheftProtectionAssessmentOutput.Amount" type="float" subtotalRef="AZTheftProtectionAssessmentOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsAZTheftProtectionAssessmentAvailable" />
                <subtotal idref="LineMNAutomobileTheftPreventionSurchargeOutput.Written" type="float" subtotalRef="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsMNAutomobileTheftPreventionSurchargeAvailable" />
                <subtotal idref="LineMNAutomobileTheftPreventionSurchargeOutput.Change" type="float" subtotalRef="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsMNAutomobileTheftPreventionSurchargeAvailable" />
                <subtotal idref="LineMNAutomobileTheftPreventionSurchargeOutput.Amount" type="float" subtotalRef="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsMNAutomobileTheftPreventionSurchargeAvailable" />
                <subtotal idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Written" type="float" subtotalRef="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsMIAutomobileTheftPreventionAuthorityAssessmentAvailable" />
                <subtotal idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Change" type="float" subtotalRef="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsMIAutomobileTheftPreventionAuthorityAssessmentAvailable" />
                <subtotal idref="LineMIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" type="float" subtotalRef="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsMIAutomobileTheftPreventionAuthorityAssessmentAvailable" />
                <subtotal idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Written" type="float" subtotalRef="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsNCCommercialAutoLossRecoupmentSurchargeAvailable" />
                <subtotal idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Change" type="float" subtotalRef="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsNCCommercialAutoLossRecoupmentSurchargeAvailable" />
                <subtotal idref="LineNCCommercialAutoLossRecoupmentSurchargeOutput.Amount" type="float" subtotalRef="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsNCCommercialAutoLossRecoupmentSurchargeAvailable" />
                <subtotal idref="LineFLInsuranceGuarantyAssociationAssessmentOutput_Config.Written" type="float" subtotalRef="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountWrittenBeforeRounding" validRef="AccountPrivate.IsAnyLocationFLIncludeDeleted" />
                <subtotal idref="LineFLInsuranceGuarantyAssociationAssessmentOutput_Config.Change" type="float" subtotalRef="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountChangeBeforeRounding" validRef="AccountPrivate.IsAnyLocationFLIncludeDeleted" />
                <subtotal idref="LineFLInsuranceGuarantyAssociationAssessmentOutput.Amount" type="float" subtotalRef="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountBeforeRounding" validRef="AccountPrivate.IsAnyLocationFLIncludeDeleted" />
                <subtotal idref="LineCOHazardMitigationFeeOutput_Config.Written" type="float" subtotalRef="COHazardMitigationFeeOutputNonShredded.AmountWrittenBeforeRounding" validRef="LinePrivate.IsCOHazardMitigationFeeAvailable" />
                <subtotal idref="LineCOHazardMitigationFeeOutput_Config.Change" type="float" subtotalRef="COHazardMitigationFeeOutputNonShredded.AmountChangeBeforeRounding" validRef="LinePrivate.IsCOHazardMitigationFeeAvailable" />
                <subtotal idref="LineCOHazardMitigationFeeOutput.Amount" type="float" subtotalRef="COHazardMitigationFeeOutputNonShredded.AmountBeforeRounding" validRef="LinePrivate.IsCOHazardMitigationFeeAvailable" />
                <customQuery idref="PolicyPrivate.SelectedLineXPath" />
              </iterator>
            </value>
            <affects>
              <reference idref="PolicyPrivate.InitializeStateTaxSurcharges" effect="preEffect" />
              <reference idref="KYMunicipalTaxOutput.Amount" effect="postEffect" />
              <reference idref="KYMunicipalTaxOutput.AmountChange" effect="postEffect" />
              <reference idref="KYMunicipalTaxOutput.AmountWritten" effect="postEffect" />
              <reference idref="KYPremiumSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="KYPremiumSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="KYPremiumSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="WVPolicyholderSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="WVPolicyholderSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="WVPolicyholderSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="NYFireInsSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="NYFireInsSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="NYFireInsSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="NYMotorVehLawEnforcementFeeOutput.Amount" effect="postEffect" />
              <reference idref="NYMotorVehLawEnforcementFeeOutput.AmountChange" effect="postEffect" />
              <reference idref="NYMotorVehLawEnforcementFeeOutput.AmountWritten" effect="postEffect" />
              <reference idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="MNFirefighterReliefFundSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="MNFirefighterReliefFundSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="MNFirefighterReliefFundSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="FLHurricaneCatastropheFundOutput.Amount" effect="postEffect" />
              <reference idref="FLHurricaneCatastropheFundOutput.AmountChange" effect="postEffect" />
              <reference idref="FLHurricaneCatastropheFundOutput.AmountWritten" effect="postEffect" />
              <reference idref="FLEmergencyManagementPreparednessFundSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="FLEmergencyManagementPreparednessFundSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="FLEmergencyManagementPreparednessFundSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="FLStateFireMarshalRegulatoryAssessmentOutput.Amount" effect="postEffect" />
              <reference idref="FLStateFireMarshalRegulatoryAssessmentOutput.AmountChange" effect="postEffect" />
              <reference idref="FLStateFireMarshalRegulatoryAssessmentOutput.AmountWritten" effect="postEffect" />
              <reference idref="CAAutomobileAssessmentChargeOutput.Amount" effect="postEffect" />
              <reference idref="CAAutomobileAssessmentChargeOutput.AmountChange" effect="postEffect" />
              <reference idref="CAAutomobileAssessmentChargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="COAutoTheftPreventionAuthoritySurchargeOutput.Amount" effect="postEffect" />
              <reference idref="COAutoTheftPreventionAuthoritySurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="COAutoTheftPreventionAuthoritySurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="TXAutomobileTheftPreventionFeeOutput.Amount" effect="postEffect" />
              <reference idref="TXAutomobileTheftPreventionFeeOutput.AmountChange" effect="postEffect" />
              <reference idref="TXAutomobileTheftPreventionFeeOutput.AmountWritten" effect="postEffect" />
              <reference idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" effect="postEffect" />
              <reference idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountChange" effect="postEffect" />
              <reference idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountWritten" effect="postEffect" />
              <reference idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" effect="postEffect" />
              <reference idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountChange" effect="postEffect" />
              <reference idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountWritten" effect="postEffect" />
              <reference idref="MIMCCASurchargeOutput.Amount" effect="postEffect" />
              <reference idref="MIMCCASurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="MIMCCASurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="MEFireInvestigationPreventionTaxOutput.Amount" effect="postEffect" />
              <reference idref="MEFireInvestigationPreventionTaxOutput.AmountChange" effect="postEffect" />
              <reference idref="MEFireInvestigationPreventionTaxOutput.AmountWritten" effect="postEffect" />
              <reference idref="WAStateRegulatorySurchargeOutput.Amount" effect="postEffect" />
              <reference idref="WAStateRegulatorySurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="WAStateRegulatorySurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="CASeismicSafetyAccountAssessmentOutput.Amount" effect="postEffect" />
              <reference idref="CASeismicSafetyAccountAssessmentOutput.AmountChange" effect="postEffect" />
              <reference idref="CASeismicSafetyAccountAssessmentOutput.AmountWritten" effect="postEffect" />
              <reference idref="AZTheftProtectionAssessmentOutput.Amount" effect="postEffect" />
              <reference idref="AZTheftProtectionAssessmentOutput.AmountChange" effect="postEffect" />
              <reference idref="AZTheftProtectionAssessmentOutput.AmountWritten" effect="postEffect" />
              <reference idref="MNAutomobileTheftPreventionSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="MNAutomobileTheftPreventionSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="MNAutomobileTheftPreventionSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" effect="postEffect" />
              <reference idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.AmountChange" effect="postEffect" />
              <reference idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.AmountWritten" effect="postEffect" />
              <reference idref="NCCommercialAutoLossRecoupmentSurchargeOutput.Amount" effect="postEffect" />
              <reference idref="NCCommercialAutoLossRecoupmentSurchargeOutput.AmountChange" effect="postEffect" />
              <reference idref="NCCommercialAutoLossRecoupmentSurchargeOutput.AmountWritten" effect="postEffect" />
              <reference idref="FLInsuranceGuarantyAssociationAssessmentOutput.Amount" effect="postEffect" />
              <reference idref="FLInsuranceGuarantyAssociationAssessmentOutput.AmountChange" effect="postEffect" />
              <reference idref="FLInsuranceGuarantyAssociationAssessmentOutput.AmountWritten" effect="postEffect" />
              <reference idref="COHazardMitigationFeeOutput.Amount" effect="postEffect" />
              <reference idref="COHazardMitigationFeeOutput.AmountChange" effect="postEffect" />
              <reference idref="COHazardMitigationFeeOutput.AmountWritten" effect="postEffect" />
            </affects>
          </private>
          <object id="NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge" path="stateTaxSurcharge[Type=&quot;NJPropertyLiabilityInsuranceGuarantyAssociationSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.AmountChange">
                <definition>
                  <caption value="Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.AmountWritten">
                <definition>
                  <caption value="Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="NJPropertyLiabilityInsuranceGuarantyAssociationSurchargePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="MNFirefighterReliefFundSurcharge" path="stateTaxSurcharge[Type=&quot;MNFirefighterReliefFundSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="MNFirefighterReliefFundSurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public path="Amount" type="float" id="MNFirefighterReliefFundSurchargeOutput.Amount">
                <definition>
                  <caption value="Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" type="float" idref="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountBeforeRounding" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="MNFirefighterReliefFundSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="MNFirefighterReliefFundSurchargeOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" type="float" idref="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountChangeBeforeRounding" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="MNFirefighterReliefFundSurchargeOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" type="float" idref="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountWrittenBeforeRounding" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="MNFirefighterReliefFundSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public path="Amount" type="float" id="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountBeforeRounding">
                  <definition>
                    <caption value="MN Firefighter Relief Fund Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="MN Firefighter Relief Fund Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="MNFirefighterReliefFundSurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="MN Firefighter Relief Fund Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="MNFirefighterReliefFundSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="MNFirefighterReliefFundSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="MNFirefighterReliefFundSurchargePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="CAAutomobileAssessmentCharge" path="stateTaxSurcharge[Type=&quot;CAAutomobileAssessmentCharge&quot; and Scope=&quot;Charge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="CAAutomobileAssessmentChargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="CAAutomobileAssessmentChargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="CA Automobile Assessment Charge Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="CAAutomobileAssessmentChargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="CAAutomobileAssessmentChargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="CAAutomobileAssessmentChargeOutput.AmountChange">
                <definition>
                  <caption value="CA Automobile Assessment Charge Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="CAAutomobileAssessmentChargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="CAAutomobileAssessmentChargeOutput.AmountWritten">
                <definition>
                  <caption value="CA Automobile Assessment Charge Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="CAAutomobileAssessmentChargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="CAAutomobileAssessmentChargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="CAAutomobileAssessmentChargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="CA Automobile Assessment Charge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="CAAutomobileAssessmentChargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="CA Automobile Assessment Charge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="CAAutomobileAssessmentChargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="CA Automobile Assessment Charge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="CAAutomobileAssessmentChargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="CAAutomobileAssessmentChargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="COAutoTheftPreventionAuthoritySurcharge" path="stateTaxSurcharge[Type=&quot;COAutoTheftPreventionAuthoritySurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="COAutoTheftPreventionAuthoritySurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="COAutoTheftPreventionAuthoritySurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="CO Auto Theft Prevention Authority Surcharge Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="COAutoTheftPreventionAuthoritySurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="COAutoTheftPreventionAuthoritySurchargeOutput.AmountChange">
                <definition>
                  <caption value="CO Auto Theft Prevention Authority Surcharge Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="COAutoTheftPreventionAuthoritySurchargeOutput.AmountWritten">
                <definition>
                  <caption value="CO Auto Theft Prevention Authority Surcharge Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="CO Auto Theft Prevention Authority Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="CO Auto Theft Prevention Authority Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="COAutoTheftPreventionAuthoritySurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="CO Auto Theft Prevention Authority Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="COAutoTheftPreventionAuthoritySurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="COAutoTheftPreventionAuthoritySurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="FLEmergencyManagementPreparednessFundSurcharge" path="stateTaxSurcharge[Type=&quot;FLEmergencyManagementPreparednessFundSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="FLEmergencyManagementPreparednessFundSurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="FLEmergencyManagementPreparednessFundSurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="FL Emergency Management Preparedness Fund Surcharge Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="FLEmergencyManagementPreparednessFundSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="FLEmergencyManagementPreparednessFundSurchargeOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="FLEmergencyManagementPreparednessFundSurchargeOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="FL Emergency Management Preparedness Fund Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="FL Emergency Management Preparedness Fund Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="FLEmergencyManagementPreparednessFundSurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="FL Emergency Management Preparedness Fund Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="FLEmergencyManagementPreparednessFundSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="FLEmergencyManagementPreparednessFundSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="NYMotorVehLawEnforcementFee" path="stateTaxSurcharge[Type=&quot;NYMotorVehLawEnforcementFee&quot; and Scope=&quot;Fee&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="NYMotorVehLawEnforcementFeeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="NYMotorVehLawEnforcementFeeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="NY Motor Veh Law Enforcement Fee Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="NYMotorVehLawEnforcementFeeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="NYMotorVehLawEnforcementFeeOutput.AmountChange">
                <definition>
                  <caption value="NY Motor Veh Law Enforcement Fee Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="NYMotorVehLawEnforcementFeeOutput.AmountWritten">
                <definition>
                  <caption value="NY Motor Veh Law Enforcement Fee Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="NYMotorVehLawEnforcementFeeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="NY Motor Veh Law Enforcement Fee Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="NY Motor Veh Law Enforcement Fee Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="NYMotorVehLawEnforcementFeeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="NY Motor Veh Law Enforcement Fee Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="NYMotorVehLawEnforcementFeeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="NYMotorVehLawEnforcementFeeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="TXAutomobileTheftPreventionFee" path="stateTaxSurcharge[Type=&quot;TXAutomobileTheftPreventionFee&quot; and Scope=&quot;Fee&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="TXAutomobileTheftPreventionFeeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="TXAutomobileTheftPreventionFeeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="TX Automobile Theft Prevention Fee Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="TXAutomobileTheftPreventionFeeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="TXAutomobileTheftPreventionFeeOutput.AmountChange">
                <definition>
                  <caption value="TX Automobile Theft Prevention Fee Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="TXAutomobileTheftPreventionFeeOutput.AmountWritten">
                <definition>
                  <caption value="TX Automobile Theft Prevention Fee Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="TXAutomobileTheftPreventionFeeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="TX Automobile Theft Prevention Fee Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="TX Automobile Theft Prevention Fee Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="TXAutomobileTheftPreventionFeeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="TX Automobile Theft Prevention Fee Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="TXAutomobileTheftPreventionFeeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="TXAutomobileTheftPreventionFeeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="NYFireInsSurcharge" path="stateTaxSurcharge[Type=&quot;NYFireInsSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="NYFireInsSurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="NYFireInsSurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="NY Premium Surcharge Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NYFireInsSurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="NYFireInsSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="NYFireInsSurchargeOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NYFireInsSurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="NYFireInsSurchargeOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NYFireInsSurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="NYFireInsSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="NYFireInsSurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="NY Premium Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="NYFireInsSurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="NY Premium Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="NYFireInsSurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="NY Premium Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="NYFireInsSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="NYFireInsSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="NYFireInsSurchargePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="FLHurricaneCatastropheFund" path="stateTaxSurcharge[Type=&quot;FLHurricaneCatastropheFund&quot; and Scope=&quot;Fund&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="FLHurricaneCatastropheFundOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="FLHurricaneCatastropheFundOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="FL Hurricane Catastrophe Fund Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLHurricaneCatastropheFundOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="FLHurricaneCatastropheFundOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="FLHurricaneCatastropheFundOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLHurricaneCatastropheFundOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="FLHurricaneCatastropheFundOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLHurricaneCatastropheFundOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="FLHurricaneCatastropheFundOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="FLHurricaneCatastropheFundOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="FL Hurricane Catastrophe Fund Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="FLHurricaneCatastropheFundOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="FL Hurricane Catastrophe Fund Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="FLHurricaneCatastropheFundOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="FL Hurricane Catastrophe Fund Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="FLHurricaneCatastropheFundOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="FLHurricaneCatastropheFundOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="FLHurricaneCatastropheFundPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="FLStateFireMarshalRegulatoryAssessment" path="stateTaxSurcharge[Type=&quot;FLStateFireMarshalRegulatoryAssessment&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="FLStateFireMarshalRegulatoryAssessmentOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="FLStateFireMarshalRegulatoryAssessmentOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="FL State Fire Marshal Regulatory Assessment Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="FLStateFireMarshalRegulatoryAssessmentOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="FLStateFireMarshalRegulatoryAssessmentOutput.AmountChange">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="FLStateFireMarshalRegulatoryAssessmentOutput.AmountWritten">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="FL State Fire Marshal Regulatory Assessment Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="FL State Fire Marshal Regulatory Assessment Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="FLStateFireMarshalRegulatoryAssessmentOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="FL State Fire Marshal Regulatory Assessment Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="FLStateFireMarshalRegulatoryAssessmentOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="FLStateFireMarshalRegulatoryAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="FLStateFireMarshalRegulatoryAssessmentPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="MNFireSafetySurcharge" path="stateTaxSurcharge[Type=&quot;MNFireSafetySurcharge&quot; and Scope=&quot;Tax&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="MNFireSafetySurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="MNFireSafetySurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="MN Fire Safety Surcharge Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MNFireSafetySurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="MNFireSafetySurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="MNFireSafetySurchargeOutput.AmountChange">
                <definition>
                  <caption value="MN Fire Safety Surcharge Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MNFireSafetySurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="MNFireSafetySurchargeOutput.AmountWritten">
                <definition>
                  <caption value="MN Fire Safety Surcharge Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MNFireSafetySurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="MNFireSafetySurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="MNFireSafetySurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="MN Fire Safety Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="MNFireSafetySurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="MN Fire Safety Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="MNFireSafetySurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="MN Fire Safety Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="MNFireSafetySurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="MNFireSafetySurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="MNFireSafetySurchargePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="FLCitizensPropertyInsuranceCorporationEmergencyAssessment" path="stateTaxSurcharge[Type=&quot;FLCitizensPropertyInsuranceCorporationEmergencyAssessment&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="FL Citizens Property Insurance Corporation Emergency Assessment Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <object id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="FL Citizens Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="FL Citizens Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="FL Citizens Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public path="change" type="float" class="excludeInChangeSummary" id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountChange">
                <definition>
                  <caption value="FL Citizens Property Insurance Corporation Emergency Assessment Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountWritten">
                <definition>
                  <caption value="FL Citizens Property Insurance Corporation Emergency Assessment Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="FLCitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="LACitizensPropertyInsuranceCorporationEmergencyAssessment" path="stateTaxSurcharge[Type=&quot;LACitizensPropertyInsuranceCorporationEmergencyAssessment&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountChange">
                <definition>
                  <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.AmountWritten">
                <definition>
                  <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="LA Citizens Property Insurance Corporation Emergency Assessment Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="LACitizensPropertyInsuranceCorporationEmergencyAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="MIMCCASurcharge" path="stateTaxSurcharge[Type=&quot;MIMCCASurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="MIMCCASurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="MIMCCASurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="MIMCCA Surcharge Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MIMCCASurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="MIMCCASurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="MIMCCASurchargeOutput.AmountChange">
                <definition>
                  <caption value="MIMCCA Surcharge Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MIMCCASurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="MIMCCASurchargeOutput.AmountWritten">
                <definition>
                  <caption value="MIMCCA Surcharge Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MIMCCASurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="MIMCCASurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="MIMCCASurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="MIMCCA Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="MIMCCASurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="MIMCCA Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="MIMCCASurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="MIMCCA Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="MIMCCASurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="MIMCCASurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="MEFireInvestigationPreventionTax" path="stateTaxSurcharge[Type=&quot;MEFireInvestigationPreventionTax&quot; and Scope=&quot;Tax&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="MEFireInvestigationPreventionTaxOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="MEFireInvestigationPreventionTaxOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="ME Fire Investigation Prevention Tax Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MEFireInvestigationPreventionTaxOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="MEFireInvestigationPreventionTaxOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="MEFireInvestigationPreventionTaxOutput.AmountChange">
                <definition>
                  <caption value="ME Fire Investigation Prevention Tax Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MEFireInvestigationPreventionTaxOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="MEFireInvestigationPreventionTaxOutput.AmountWritten">
                <definition>
                  <caption value="ME Fire Investigation Prevention Tax Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MEFireInvestigationPreventionTaxOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="MEFireInvestigationPreventionTaxOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="MEFireInvestigationPreventionTaxOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="ME Fire Investigation Prevention Tax Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="MEFireInvestigationPreventionTaxOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="ME Fire Investigation Prevention Tax Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="MEFireInvestigationPreventionTaxOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="ME Fire Investigation Prevention Tax Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="MEFireInvestigationPreventionTaxOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="MEFireInvestigationPreventionTaxOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="MEFireInvestigationPreventionTaxPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="WAStateRegulatorySurcharge" path="stateTaxSurcharge[Type=&quot;WAStateRegulatorySurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="WAStateRegulatorySurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="WAStateRegulatorySurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="WA State Regulatory Surcharge Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="WAStateRegulatorySurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="WAStateRegulatorySurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="WAStateRegulatorySurchargeOutput.AmountChange">
                <definition>
                  <caption value="WA State Regulatory Surcharge Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="WAStateRegulatorySurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="WAStateRegulatorySurchargeOutput.AmountWritten">
                <definition>
                  <caption value="WA State Regulatory Surcharge Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="WAStateRegulatorySurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="WAStateRegulatorySurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="WAStateRegulatorySurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="WA State Regulatory Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="WAStateRegulatorySurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="WA State Regulatory Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="WAStateRegulatorySurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="WA State Regulatory Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="WAStateRegulatorySurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="WAStateRegulatorySurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
            <object id="WAStateRegulatorySurchargePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="CASeismicSafetyAccountAssessment" path="stateTaxSurcharge[Type=&quot;CASeismicSafetyAccountAssessment&quot; and Scope=&quot;Assessment&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="CASeismicSafetyAccountAssessmentOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="CASeismicSafetyAccountAssessmentOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="CA Seismic Safety Account Assessment Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="CASeismicSafetyAccountAssessmentOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="CASeismicSafetyAccountAssessmentOutput.AmountChange">
                <definition>
                  <caption value="CA Seismic Safety Account Assessment Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="CASeismicSafetyAccountAssessmentOutput.AmountWritten">
                <definition>
                  <caption value="CA Seismic Safety Account Assessment Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="CASeismicSafetyAccountAssessmentOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="CA Seismic Safety Account Assessment Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="CA Seismic Safety Account Assessment Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="CASeismicSafetyAccountAssessmentOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="CA Seismic Safety Account Assessment Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="CASeismicSafetyAccountAssessmentOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="CASeismicSafetyAccountAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="AZTheftProtectionAssessment" path="stateTaxSurcharge[Type=&quot;AZTheftProtectionAssessment&quot; and Scope=&quot;Charge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="AZTheftProtectionAssessmentOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="AZTheftProtectionAssessmentOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="AZ Theft Protection Assessment Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="AZTheftProtectionAssessmentOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="AZTheftProtectionAssessmentOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="AZTheftProtectionAssessmentOutput.AmountChange">
                <definition>
                  <caption value="AZ Theft Protection Assessment Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="AZTheftProtectionAssessmentOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="AZTheftProtectionAssessmentOutput.AmountWritten">
                <definition>
                  <caption value="AZ Theft Protection Assessment Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="AZTheftProtectionAssessmentOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="AZTheftProtectionAssessmentOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="AZTheftProtectionAssessmentOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="AZ Theft Protection Assessment Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="AZTheftProtectionAssessmentOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="AZ Theft Protection Assessment Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="AZTheftProtectionAssessmentOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="AZ Theft Protection Assessment Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="AZTheftProtectionAssessmentOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="AZTheftProtectionAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="MNAutomobileTheftPreventionSurcharge" path="stateTaxSurcharge[Type=&quot;MNAutomobileTheftPreventionSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="MNAutomobileTheftPreventionSurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="MNAutomobileTheftPreventionSurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="MN Automobile Theft Prevention Surcharge Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="MNAutomobileTheftPreventionSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="MNAutomobileTheftPreventionSurchargeOutput.AmountChange">
                <definition>
                  <caption value="MN Automobile Theft Prevention Surcharge Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="MNAutomobileTheftPreventionSurchargeOutput.AmountWritten">
                <definition>
                  <caption value="MN Automobile Theft Prevention Surcharge Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="MNAutomobileTheftPreventionSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="MN Automobile Theft Prevention Surcharge Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="MN Automobile Theft Prevention Surcharge Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="MNAutomobileTheftPreventionSurchargeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="MN Automobile Theft Prevention Surcharge Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="MNAutomobileTheftPreventionSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="MNAutomobileTheftPreventionSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="NCCommercialAutoLossRecoupmentSurcharge" path="stateTaxSurcharge[Type=&quot;NCCommercialAutoLossRecoupmentSurcharge&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="NCCommercialAutoLossRecoupmentSurchargeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="NCCommercialAutoLossRecoupmentSurchargeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="NCCommercialAutoLossRecoupmentSurchargeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public id="NCCommercialAutoLossRecoupmentSurchargeOutput.AmountChange" path="change" type="float" class="excludeInChangeSummary">
                <definition>
                  <caption value="Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="NCCommercialAutoLossRecoupmentSurchargeOutput.AmountWritten" path="written" type="float" class="excludeInChangeSummary">
                <definition>
                  <caption value="Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public id="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountChangeBeforeRounding" path="change" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="NCCommercialAutoLossRecoupmentSurchargeOutputNonShredded.AmountWrittenBeforeRounding" path="written" type="float" class="excludeInChangeSummary">
                  <definition>
                    <caption value="Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="NCCommercialAutoLossRecoupmentSurchargeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="NCCommercialAutoLossRecoupmentSurchargeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="MIAutomobileTheftPreventionAuthorityAssessment" path="stateTaxSurcharge[Type=&quot;MIAutomobileTheftPreventionAuthorityAssessment&quot; and Scope=&quot;Surcharge&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="MIAutomobileTheftPreventionAuthorityAssessmentOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="MIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="MI Automobile Theft Prevention Authority Assessment Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="MIAutomobileTheftPreventionAuthorityAssessmentOutput.AmountChange">
                <definition>
                  <caption value="MI Automobile Theft Prevention Authority Assessment Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="MIAutomobileTheftPreventionAuthorityAssessmentOutput.AmountWritten">
                <definition>
                  <caption value="MI Automobile Theft Prevention Authority Assessment Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <object id="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="MI Automobile Theft Prevention Authority Assessment Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="MI Automobile Theft Prevention Authority Assessment Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="MIAutomobileTheftPreventionAuthorityAssessmentOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="MI Automobile Theft Prevention Authority Assessment Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
              <public id="MIAutomobileTheftPreventionAuthorityAssessmentOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="MIAutomobileTheftPreventionAuthorityAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="FLInsuranceGuarantyAssociationAssessment" path="stateTaxSurcharge[Type=&quot;FLInsuranceGuarantyAssociationAssessment&quot; and Scope=&quot;Assessment&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="FLInsuranceGuarantyAssociationAssessmentOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="FLInsuranceGuarantyAssociationAssessmentOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="FL Insurance Guaranty Association Assessment" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="FLInsuranceGuarantyAssociationAssessmentOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="FLInsuranceGuarantyAssociationAssessmentOutput.AmountChange">
                <definition>
                  <caption value="FL Insurance Guaranty Association Assessment Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="FLInsuranceGuarantyAssociationAssessmentOutput.AmountWritten">
                <definition>
                  <caption value="FL Insurance Guaranty Association Assessment Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="FLInsuranceGuarantyAssociationAssessmentOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="FL Insurance Guaranty Association Assessment Output Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="FLInsuranceGuarantyAssociationAssessmentOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
              <object id="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="FL Insurance Guaranty Association Assessment Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="FL Insurance Guaranty Association Assessment Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="FLInsuranceGuarantyAssociationAssessmentOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="FL Insurance Guaranty Association Assessment Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
            </object>
            <object id="FLInsuranceGuarantyAssociationAssessmentPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
          </object>
          <object id="COHazardMitigationFee" path="stateTaxSurcharge[Type=&quot;COHazardMitigationFee&quot; and Scope=&quot;Fee&quot;]">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="COHazardMitigationFeeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="COHazardMitigationFeeOutput.Amount" path="Amount" type="float">
                <definition>
                  <caption value="CO Hazard Mitigation Fee Output Amount" />
                  <maxLength idref="MaxLength.fValue" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="COHazardMitigationFeeOutputNonShredded.AmountBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                  <affects>
                    <reference idref="COHazardMitigationFeeOutput.Indicator" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public path="change" type="float" class="excludeInChangeSummary" id="COHazardMitigationFeeOutput.AmountChange">
                <definition>
                  <caption value="CO Hazard Mitigation Fee Output Amount Change" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="COHazardMitigationFeeOutputNonShredded.AmountChangeBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public path="written" type="float" class="excludeInChangeSummary" id="COHazardMitigationFeeOutput.AmountWritten">
                <definition>
                  <caption value="CO Hazard Mitigation Fee Output Amount Written" />
                  <maxLength idref="MaxLength.Premium" />
                  <formatMask idref="FormatMask.PremiumPennies" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="COHazardMitigationFeeOutputNonShredded.AmountWrittenBeforeRounding" type="float" />
                      <argument op="multiply" round="100" roundType="round" type="int" value="1" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="COHazardMitigationFeeOutput.Indicator" path="Indicator" type="boolean">
                <definition>
                  <caption value="CO Hazard Mitigation Fee Output Indicator" />
                </definition>
                <rules>
                  <default idref="False" />
                  <value>
                    <comparison compare="gt">
                      <operand idref="COHazardMitigationFeeOutput.Amount" type="float" />
                      <operand type="int" value="0" />
                    </comparison>
                  </value>
                </rules>
              </public>
              <object id="COHazardMitigationFeeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="COHazardMitigationFeeOutputNonShredded.AmountBeforeRounding" path="Amount" type="float">
                  <definition>
                    <caption value="CO Hazard Mitigation Fee Output Non Shredded Amount Before Rounding" />
                    <maxLength idref="MaxLength.fValue" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                  </definition>
                </public>
                <public path="change" type="float" class="excludeInChangeSummary" id="COHazardMitigationFeeOutputNonShredded.AmountChangeBeforeRounding">
                  <definition>
                    <caption value="CO Hazard Mitigation Fee Output Non Shredded Amount Change Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public path="written" type="float" class="excludeInChangeSummary" id="COHazardMitigationFeeOutputNonShredded.AmountWrittenBeforeRounding">
                  <definition>
                    <caption value="CO Hazard Mitigation Fee Output Non Shredded Amount Written Before Rounding" />
                    <maxLength idref="MaxLength.Premium" />
                    <formatMask idref="FormatMask.PremiumPennies" />
                    <readOnly idref="True" />
                  </definition>
                </public>
              </object>
            </object>
          </object>
        </object>
        <object id="PolicyProcessing" abstract="1">
          <object id="FunctionsPolicy" abstract="1">
            <object id="PolicyNumber" abstract="1">
              <private id="PolicyNumber.LOBCode" caption="" type="string" override="1">
                <value idref="PolicyPrivate.PolicyNumberLOBCode" />
              </private>
            </object>
            <object id="QuoteNumber" abstract="1">
              <private id="QuoteNumber.LOBCode" caption="" type="string" override="1">
                <value idref="PolicyPrivate.PolicyNumberLOBCode" />
              </private>
            </object>
            <object id="DeclineRules" abstract="1">
              <private id="DeclineRules.IsEligible" caption="" type="boolean" override="1">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <operand idref="Context.IsUnderwriterManager" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="DeclineRules.IsEligibleManager" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <operand idref="Context.IsUnderwriter" type="boolean" />
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="DeclineRules.IsEligibleManager" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="DeclineRules.IsEligibleUnderwriter" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <operand idref="Context.IsUnderwriter" type="boolean" />
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="DeclineRules.IsEligibleManager" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="DeclineRules.IsEligibleUnderwriter" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <operand idref="Context.IsAgent" type="boolean" />
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="or">
                              <comparison compare="eq">
                                <operand idref="DeclineRules.IsEligibleAgent" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="DeclineRules.IsEligibleAssistant" type="boolean" />
                                <operand idref="False" type="int" />
                              </comparison>
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="DeclineRules.IsEligibleManager" type="boolean" />
                              <operand idref="False" type="int" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="DeclineRules.IsEligibleUnderwriter" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyInput.DeclineOverride" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" message="PolicyPrivate.RequiredFieldsCompletedMsg1" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="WrittenPremiumSharedConfiguration" abstract="1">
              <private id="WrittenPremiumSharedConfiguration.CurrentTransEffDate" caption="" type="date" path="CurrentTransEffDate" override="1">
                <value idref="CurrentTransaction.EffectiveDate" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <operand idref="PolicyPrivate.IsInFinalAudit" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="PolicyAdminPrivate.IsSegmentAudit" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyInput.EffectiveDate" />
                  </if>
                </misc>
              </private>
              <private id="WrittenPremiumSharedConfiguration.ShortRateFactor" type="float" override="1">
                <value idref="CurrentTransaction.LastShortRateFactor" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="WrittenPremiumSharedConfiguration.ShortRateExceptionIndicator" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="WrittenPremiumSharedConfiguration.ShortRateExceptionFactor" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="or">
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsFlatCancel" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <operand idref="PolicyPrivate.IsReinstateAfterFlatCancel" type="boolean" />
                      </comparison>
                    </condition>
                    <then value="1" />
                  </if>
                </misc>
              </private>
              <private id="WrittenPremiumSharedConfiguration.ShortRateExceptionFactor" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="CurrentTransaction.LastShortRateFactor" type="float" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then value="1" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.ShortRateExceptionIndicatorsFactors" />
                        <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                        <fieldRef value="Factor" />
                        <keyRef idref="PolicyInput.PrimaryRatingState" type="string" name="State" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </private>
              <private id="WrittenPremiumSharedConfiguration.ShortRateExceptionIndicator" caption="" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.ShortRateExceptionIndicatorsFactors" />
                    <manuscriptName idref="LineManuScript.LineProductManuscriptID" />
                    <fieldRef value="Indicator" />
                    <keyRef idref="PolicyInput.PrimaryRatingState" type="string" name="State" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="ReferralRules" abstract="1">
              <private id="ReferralRules.IsBindableAgent" caption="" type="boolean" override="1">
                <value idref="True" />
                <misc>
                  <if index="1">
                    <condition>
                      <comparison compare="gt">
                        <operand idref="PolicyPrivate.TotalCovMiscellaneousCount" type="int" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then idref="False" message="ReferralRules.IsBindableAgentMsg1" type="int" />
                    <priorValues idref="PolicyPrivate.IgnoreRule">
                      <condition idref="PolicyPrivate.StoreRule" />
                      <then value="" />
                    </priorValues>
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsBindable" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="GetChangeSummary">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="GetChangeSummary.ChangeSummaryManuscript" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.CPPManuscriptIDTable" />
                    <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="ChangeSummary" name="Manuscript" />
                    <keyRef idref="PolicyManuScript.StateKey" type="string" name="State" />
                    <keyRef idref="PolicyManuScript.EffectiveDateKey" type="date" name="EffectiveDate" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="TransActChangeStatus">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="TransActChangeStatus.Page" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.TransActChangeStatusPage" />
                    <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Page" name="Type" />
                    <keyRef idref="GlobalOutput.StartedInCPP" type="boolean" name="StartedInCPP" />
                  </lookup>
                </value>
              </private>
              <private id="TransActChangeStatus.PageSet" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.TransActChangeStatusPage" />
                    <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="PageSet" name="Type" />
                    <keyRef idref="GlobalOutput.StartedInCPP" type="boolean" name="StartedInCPP" />
                  </lookup>
                </value>
              </private>
            </object>
          </object>
        </object>
        <object id="AllCoveragesContainer" path="allCoveragesContainer" fragment="2">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <descriptors>
            <descriptor code="Premium" />
            <descriptor code="Blanket" />
          </descriptors>
          <object id="AllCoveragesShare" path="//coverage" share="1">
            <minOccurs value="0" />
            <maxOccurs value="*" />
            <nameValues schemaExclude="1" />
            <object id="AllCoveragesShareOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="AllCoveragesShareOutput.Premium" path="Premium" type="float" class="Premium">
                <definition>
                  <caption value="All Coverages Share Output Premium" />
                  <readOnly idref="True" />
                  <formatMask idref="FormatMask.Premium" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.PremiumChange" path="change" type="float">
                <definition>
                  <caption value="All Coverages Share Output Premium Change" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.PremiumWritten" path="written" type="float">
                <definition>
                  <caption value="All Coverages Share Output Premium Written" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.Type" path="Type" type="string" index="1">
                <definition>
                  <caption value="All Coverages Share Output Type" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.Type" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.Indicator" path="Indicator" type="boolean" index="1">
                <definition>
                  <caption value="Indicator" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.FullyEarnedIndicator" path="FullyEarnedIndicator" type="boolean" index="1">
                <definition>
                  <caption value="Fully Earned Indicator" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.ID" path="@id" type="string">
                <definition>
                  <caption value="ID" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.Deleted" path="@deleted" type="boolean" index="1">
                <definition>
                  <caption value="Deleted" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.PriorTerm" path="priorTerm" type="float">
                <definition>
                  <caption value="Prior Term" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.Prior" path="prior" type="float">
                <definition>
                  <caption value="Prior" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.PremiumFE" path="Premium" type="float" class="Premium:FE" comment="Fully Earned Premium Class">
                <definition>
                  <caption value="Premium Fully Earned" />
                  <readOnly idref="True" />
                  <formatMask idref="FormatMask.Premium" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="AllCoveragesShareOutput.PremiumWrittenCalc" path="PremiumWrittenCalc" type="float" comment="Field used for calculating Policy Minimum">
                <definition>
                  <caption value="Premium Written Calc" />
                  <readOnly idref="True" />
                  <formatMask idref="FormatMask.Premium" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
            </object>
            <object id="AllCoveragesSharePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="AllCoveragesSharePrivate.SetPremiumToZero" type="float" comment="">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AllCoveragesShareOutput.FullyEarnedIndicator" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="AllCoveragesSharePrivate.SetPremiumToZeroNonFullyEarned" />
                  </if>
                </value>
                <affects>
                  <reference idref="AllCoveragesShareOutput.Type" effect="preEffect" />
                </affects>
              </private>
              <private id="AllCoveragesSharePrivate.SetPremiumToZeroFullyEarned" type="float">
                <value value="0" />
                <affects>
                  <reference idref="AllCoveragesShareOutput.Type" effect="preEffect" />
                  <reference idref="AllCoveragesSharePrivate.FullyEarnedDeleteCheck" effect="postEffect" />
                </affects>
              </private>
              <private id="AllCoveragesSharePrivate.SetPremiumToZeroNonFullyEarned" type="float">
                <value value="0" />
                <affects>
                  <reference idref="AllCoveragesShareOutput.Premium" effect="setValue" />
                  <reference idref="AllCoveragesShareOutput.PremiumFE" effect="setValue" />
                  <reference idref="AllCoveragesShareOutput.PremiumWritten" effect="setValue" />
                </affects>
              </private>
              <private id="AllCoveragesSharePrivate.FullyEarnedDeleteCheck" type="float" comment="">
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="AllCoveragesShareOutput.Prior" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="AllCoveragesShareOutput.Deleted" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="AllCoveragesSharePrivate.FullyEarnedDeleteReset" />
                  </if>
                </value>
              </private>
              <private id="AllCoveragesSharePrivate.FullyEarnedDeleteReset" type="float" comment="">
                <affects>
                  <reference idref="AllCoveragesShareOutput.Premium" effect="setValue" />
                  <reference idref="AllCoveragesShareOutput.PremiumFE" effect="setValue" />
                  <reference idref="AllCoveragesShareOutput.PremiumWritten" effect="setValue" />
                  <reference idref="AllCoveragesShareOutput.PremiumChange" effect="setValue" />
                  <reference idref="AllCoveragesShareOutput.FullyEarnedIndicator" effect="setValue" />
                </affects>
                <value value="0" />
              </private>
            </object>
            <object id="StatCodeRatingGroupProportion" comment="Commercial Property Stat Code Rating Group Proportion Logic">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="StatCodeRatingGroupProportion.BlanketPremium" path="statCode[Type=&quot;RatingGroupChangeProportion&quot;]/BlanketPremium" type="float" class="Blanket" comment="Commercial Property Stat Code Rating Group Proportion Logic">
                <definition>
                  <caption value="Stat Code Rating Group Proportion Blanket Premium" />
                </definition>
              </public>
              <public id="StatCodeRatingGroupProportion.Change" path="statCode[Type=&quot;RatingGroupChangeProportion&quot;]/change" type="float">
                <definition>
                  <caption value="Stat Code Rating Group Proportion Change" />
                </definition>
              </public>
              <public id="StatCodeRatingGroupProportion.Written" path="statCode[Type=&quot;RatingGroupChangeProportion&quot;]/written" type="float">
                <definition>
                  <caption value="Stat Code Rating Group Proportion Written" />
                </definition>
              </public>
              <public id="StatCodeRatingGroupProportion.FValue" path="statCode[Type=&quot;RatingGroupChangeProportion&quot;]/fValue" type="float">
                <definition>
                  <caption value="F Value" />
                </definition>
              </public>
            </object>
            <object id="StatCodeBlanketProportion" comment="Businessowners Stat Code Blanket proportion logic">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="StatCodeBlanketProportion.BlanketPremium" path="statCode[Type=&quot;BlanketChangeProportion&quot;]/BlanketPremium" type="float" class="Blanket" comment="Businessowners Stat Code Blanket proportion logic">
                <definition>
                  <caption value="Stat Code Blanket Proportion Blanket Premium" />
                </definition>
              </public>
              <public id="StatCodeBlanketProportion.Change" path="statCode[Type=&quot;BlanketChangeProportion&quot;]/change" type="float">
                <definition>
                  <caption value="Stat Code Blanket Proportion Change" />
                </definition>
              </public>
              <public id="StatCodeBlanketProportion.FValue" path="statCode[Type=&quot;RatingGroupChangeProportion&quot;]/fValue" type="float">
                <definition>
                  <caption value="Stat Code Blanket ProportionF Value" />
                </definition>
              </public>
              <public id="StatCodeBlanketProportion.Written" path="statCode[Type=&quot;BlanketChangeProportion&quot;]/written" type="float">
                <definition>
                  <caption value="Stat Code Blanket Proportion Written" />
                </definition>
              </public>
            </object>
          </object>
        </object>
        <object id="AllStateTaxesSurcharges" abstract="1">
          <object id="AllStateTaxesSurchargesOutput" abstract="1">
            <public id="AllStateTaxesSurchargesOutput.Written" path="written" type="float">
              <definition>
                <caption value="Written" />
              </definition>
            </public>
            <public id="AllStateTaxesSurchargesOutput.Change" path="change" type="float">
              <definition>
                <caption value="Change" />
              </definition>
            </public>
          </object>
          <object id="AllStateTaxesSurchargesPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AllStateTaxesSurchargesPrivate.SetTaxToZero" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="AllStateTaxesSurchargesOutput.Type" effect="preEffect" />
                <reference idref="AllStateTaxesSurchargesOutput.Amount" effect="setValue" />
                <reference idref="AllStateTaxesSurchargesOutput.Change" effect="setValue" />
                <reference idref="AllStateTaxesSurchargesOutput.Written" effect="setValue" />
              </affects>
            </private>
          </object>
        </object>
        <object id="AllLineStateTaxesSurcharges" path="//lineStateTaxSurcharge">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <nameValues schemaExclude="1" />
          <object id="AllLineStateTaxesSurchargesOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AllLineStateTaxesSurchargesOutput.Change" path="change" type="float">
              <definition>
                <caption value="Line Tax Change" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.Type" path="Type" type="string">
              <definition>
                <caption value="Line Tax Type" />
                <maxLength idref="MaxLength.Type" />
                <readOnly idref="True" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.Written" path="written" type="float">
              <definition>
                <caption value="Line Tax Written" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.FValue" path="fValue" type="float">
              <definition>
                <caption value="Line Tax Amount" />
                <readOnly idref="True" />
                <formatMask idref="FormatMask.PremiumPennies" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.Prior" path="prior" type="string">
              <definition>
                <caption value="Line Tax Prior" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.WrittenAttribute" path="@written" type="float">
              <definition>
                <caption value="Line Tax Written" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.ChangeAttribute" path="@change" type="float">
              <definition>
                <caption value="Line Tax Change" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.TaxState" path="TaxState" type="string">
              <definition>
                <caption value="Tax State" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.ID" path="@id" type="string">
              <definition>
                <caption value="ID" />
              </definition>
            </public>
            <public id="AllLineStateTaxesSurchargesOutput.Indicator" path="Indicator" type="boolean">
              <definition>
                <caption value="Indicator" />
              </definition>
            </public>
          </object>
          <object id="AllLineStateTaxesSurchargesPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AllLineStateTaxesSurchargesPrivate.SetTaxToZero" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="AllLineStateTaxesSurchargesOutput.Type" effect="preEffect" />
                <reference idref="AllLineStateTaxesSurchargesOutput.FValue" effect="setValue" />
                <reference idref="AllLineStateTaxesSurchargesOutput.Change" effect="setValue" />
                <reference idref="AllLineStateTaxesSurchargesOutput.ChangeAttribute" effect="setValue" />
                <reference idref="AllLineStateTaxesSurchargesOutput.Written" effect="setValue" />
                <reference idref="AllLineStateTaxesSurchargesOutput.WrittenAttribute" effect="setValue" />
                <reference idref="AllLineStateTaxesSurchargesOutput.Prior" effect="setValue" />
              </affects>
            </private>
          </object>
        </object>
        <object id="AllWCStateTaxSurcharge" path="line[Type=&quot;WorkersCompensation&quot;]//stateTaxSurcharge">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <nameValues schemaExclude="1" />
          <object id="AllWCStateTaxSurchargeOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AllWCStateTaxSurchargeOutput.Amount" path="Amount" type="float" class="Premium">
              <definition>
                <caption value="All WC State Tax Surcharge Output Amount" />
                <readOnly idref="True" />
                <formatMask idref="FormatMask.PremiumPennies" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
          </object>
        </object>
      </object>
      <object id="Account" path="account" abstract="1">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="Location" path="location">
          <minOccurs value="1" />
          <maxOccurs value="*" />
          <object id="LocationInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="LocationInput.State" path="address/State" type="string">
              <definition>
                <caption value="State" />
                <options>
                  <option value="AK" caption="AK" />
                  <option value="AL" caption="AL" />
                  <option value="AR" caption="AR" />
                  <option value="AZ" caption="AZ" />
                  <option value="CA" caption="CA" />
                  <option value="CO" caption="CO" />
                  <option value="CT" caption="CT" />
                  <option value="DC" caption="DC" />
                  <option value="DE" caption="DE" />
                  <option value="FL" caption="FL" />
                  <option value="GA" caption="GA" />
                  <option value="HI" caption="HI" />
                  <option value="IA" caption="IA" />
                  <option value="ID" caption="ID" />
                  <option value="IL" caption="IL" />
                  <option value="IN" caption="IN" />
                  <option value="KS" caption="KS" />
                  <option value="KY" caption="KY" />
                  <option value="LA" caption="LA" />
                  <option value="MA" caption="MA" />
                  <option value="MD" caption="MD" />
                  <option value="ME" caption="ME" />
                  <option value="MI" caption="MI" />
                  <option value="MN" caption="MN" />
                  <option value="MO" caption="MO" />
                  <option value="MS" caption="MS" />
                  <option value="MT" caption="MT" />
                  <option value="NC" caption="NC" />
                  <option value="ND" caption="ND" />
                  <option value="NE" caption="NE" />
                  <option value="NH" caption="NH" />
                  <option value="NJ" caption="NJ" />
                  <option value="NM" caption="NM" />
                  <option value="NV" caption="NV" />
                  <option value="NY" caption="NY" />
                  <option value="OH" caption="OH" />
                  <option value="OK" caption="OK" />
                  <option value="OR" caption="OR" />
                  <option value="PA" caption="PA" />
                  <option value="RI" caption="RI" />
                  <option value="SC" caption="SC" />
                  <option value="SD" caption="SD" />
                  <option value="TN" caption="TN" />
                  <option value="TX" caption="TX" />
                  <option value="UT" caption="UT" />
                  <option value="VA" caption="VA" />
                  <option value="VT" caption="VT" />
                  <option value="WA" caption="WA" />
                  <option value="WI" caption="WI" />
                  <option value="WV" caption="WV" />
                  <option value="WY" caption="WY" />
                </options>
                <maxLength idref="MaxLength.State" />
                <readOnly>
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.IsLocationUsedOnRisk" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                    <operand idref="LocationPrivate.AddressReadOnly" type="boolean" />
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <default idref="AccountInput.State" />
                <affects>
                  <reference idref="LocationOutput.StatCodeState" effect="postEffect" />
                </affects>
              </rules>
              <corrections>
                <correction operation="bestMatch" condition="incorrect" laxity="high" message="Original Value #{uncorrected} was changed to match an item in the list with #{corrected}." />
                <correction operation="useSubstitute" condition="missing" message="Original Value was corrected with a default value #{corrected}." source="AccountInput.State" />
              </corrections>
            </public>
            <public id="LocationInput.TaxCounty" path="TaxCounty" type="string">
              <definition>
                <caption value="Tax County" />
                <maxLength idref="MaxLength.sValue" />
                <formatMask idref="FormatMask.BlankOption" />
                <options>
                  <request verb="ManuScript.getFieldDetailRq">
                    <responsePath value="table/rowKeys[@name='County']/key" />
                    <captionPath value="@value" />
                    <valuePath value="@value" />
                    <nameValues>
                      <nameValue idref="LocationTaxManuscript.ManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="KYTaxes_County" name="fieldID" dataType="attribute" />
                    </nameValues>
                  </request>
                </options>
                <required idref="True" />
                <readOnly idref="LocationPrivate.TaxCityCodeAB" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LocationPrivateKYTax.TaxCountyAB" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="LocationPrivateKYTax.TaxCountyAB" type="string" />
                  </if>
                  <if>
                    <condition idref="LocationPrivate.HideTaxCounty" />
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LocationInput.TaxCity" path="TaxCity" type="string">
              <definition>
                <caption value="Tax City" />
                <maxLength idref="MaxLength.sValue" />
                <formatMask idref="FormatMask.BlankOption" />
                <required idref="True" />
                <options>
                  <request verb="ManuScript.getFieldDetailRq">
                    <responsePath value="table/rowKeys[@name='City']/key" />
                    <captionPath value="@value" />
                    <valuePath value="@value" />
                    <nameValues>
                      <nameValue idref="LocationTaxManuscript.ManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="KYTaxes_City" name="fieldID" dataType="attribute" />
                    </nameValues>
                  </request>
                </options>
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition idref="LocationInput.KYMunicipalTaxExemption" />
                    <then value="" />
                  </if>
                </misc>
                <affects>
                  <reference idref="LocationPrivate.ClearTaxFields" effect="onChange" />
                </affects>
              </rules>
            </public>
            <public id="LocationInput.Address1" path="address/Address1" type="string">
              <definition>
                <caption value="Address 1" />
                <maxLength idref="MaxLength.Address" />
                <readOnly>
                  <comparison idref="LocationPrivate.AddressReadOnly" type="boolean" />
                </readOnly>
              </definition>
              <rules>
                <default>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationOutputNonShredded.Number" type="int" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then idref="AccountInput.Address1" />
                  </if>
                </default>
              </rules>
            </public>
            <public id="LocationInput.Address2" path="address/Address2" type="string">
              <definition>
                <caption value="Address 2" />
                <maxLength idref="MaxLength.Address" />
                <readOnly>
                  <comparison idref="LocationPrivate.AddressReadOnly" type="boolean" />
                </readOnly>
              </definition>
              <rules>
                <default>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="eq">
                                <operand idref="LocationOutputNonShredded.Number" type="int" />
                                <operand type="int" value="1" />
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="AccountInput.Address1" type="string" />
                                <operand idref="LocationInput.Address1" type="string" />
                              </comparison>
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="AccountInput.City" type="string" />
                              <operand idref="LocationInput.City" type="string" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="AccountInput.State" type="string" />
                            <operand idref="LocationInput.State" type="string" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="AccountInput.ZipCode" type="string" />
                          <operand idref="LocationInput.ZipCode" type="string" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="AccountInput.Address2" />
                  </if>
                </default>
                <nonRating value="1" />
              </rules>
            </public>
            <public id="LocationInput.City" path="address/City" type="string">
              <definition>
                <caption value="City" />
                <maxLength idref="MaxLength.City" />
                <readOnly>
                  <comparison idref="LocationPrivate.AddressReadOnly" type="boolean" />
                </readOnly>
              </definition>
              <rules>
                <default>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationOutputNonShredded.Number" type="int" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then idref="AccountInput.City" />
                  </if>
                </default>
              </rules>
            </public>
            <public id="LocationInput.County" path="address/County" type="string">
              <definition>
                <caption value="County" />
                <maxLength idref="MaxLength.County" />
                <readOnly>
                  <comparison idref="LocationPrivate.AddressReadOnly" type="boolean" />
                </readOnly>
              </definition>
            </public>
            <public id="LocationInput.Description" path="Description" type="string" alwaysRun="1" comment="Shared">
              <definition>
                <caption value="Description" />
                <maxLength idref="MaxLength.Description" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationInput.Description" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="LocationPrivate.DescriptionValue" />
                  </if>
                </misc>
                <default idref="LocationPrivate.DescriptionValue" />
              </rules>
            </public>
            <public id="LocationInput.ZipCode" path="address/ZipCode" type="string">
              <definition>
                <caption value="ZIP Code" />
                <maxLength idref="MaxLength.Zip" />
                <formatMask idref="FormatMask.Zipcode" />
                <readOnly>
                  <comparison idref="LocationPrivate.AddressReadOnly" type="boolean" />
                </readOnly>
              </definition>
              <rules>
                <default>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationOutputNonShredded.Number" type="int" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then idref="AccountInput.ZipCode" />
                  </if>
                </default>
              </rules>
            </public>
            <public id="LocationInput.ZipCodeBase" path="ZipCodeBase" type="string">
              <definition>
                <caption value="Location Input Zip Code Base" />
              </definition>
              <rules>
                <value>
                  <subString subStrMethod="startPosition">
                    <sourceString idref="LocationInput.ZipCode" />
                    <startPos value="1" />
                    <length value="5" />
                  </subString>
                </value>
              </rules>
            </public>
            <public id="LocationInput.ZipCodeAddOn" path="ZipCodeAddOn" type="string">
              <definition>
                <caption value="Zip Code Add On" />
              </definition>
              <rules>
                <value>
                  <subString subStrMethod="startPosition">
                    <sourceString idref="LocationInput.ZipCode" />
                    <startPos value="7" />
                    <length value="4" />
                  </subString>
                </value>
              </rules>
            </public>
            <public id="LocationInput.KYMunicipalTaxExemption" path="KYMunicipalTaxExemption" type="boolean">
              <definition>
                <caption value="KY Municipal Tax Exemption" />
              </definition>
            </public>
            <public id="LocationInput.ExcludeLocationCommercialAuto" path="ExcludeLocationCommercialAuto" type="boolean">
              <definition>
                <caption value="Exclude" />
                <readOnly>
                  <comparison compare="or">
                    <comparison compare="or">
                      <operand idref="LocationPrivate.IsLocationUsedInCurrentLine" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="LocationPrivate.CurrentIteration" type="int" />
                        <operand type="int" value="1" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LocationInput.State" type="string" />
                      <operand type="string" value="MA" />
                    </comparison>
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationInput.State" type="string" />
                        <operand type="string" value="MA" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LocationInput.ExcludeLocationGeneralLiability" path="ExcludeLocationGeneralLiability" type="boolean">
              <definition>
                <caption value="Exclude" />
                <readOnly>
                  <comparison compare="or">
                    <operand idref="LocationPrivate.IsLocationUsedInCurrentLine" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.CurrentIteration" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LocationInput.ExcludeLocationProperty" path="ExcludeLocationProperty" type="boolean">
              <definition>
                <caption value="Exclude" />
                <readOnly>
                  <comparison compare="or">
                    <operand idref="LocationPrivate.IsLocationUsedInCurrentLine" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.CurrentIteration" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LocationInput.ExcludeLocationInlandMarine" path="ExcludeLocationInlandMarine" type="boolean">
              <definition>
                <caption value="Exclude" />
                <readOnly>
                  <comparison compare="or">
                    <operand idref="LocationPrivate.IsLocationUsedInCurrentLine" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.CurrentIteration" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LocationInput.ExcludeLocationCommercialUmbrella" path="ExcludeLocationCommercialUmbrella" type="boolean">
              <definition>
                <caption value="Exclude" />
                <readOnly>
                  <comparison compare="or">
                    <operand idref="LocationPrivate.IsLocationUsedInCurrentLine" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.CurrentIteration" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LocationInput.ExcludeLocationCrime" path="ExcludeLocationCrime" type="boolean">
              <definition>
                <caption value="Exclude" />
                <readOnly>
                  <comparison compare="or">
                    <operand idref="LocationPrivate.IsLocationUsedInCurrentLine" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.CurrentIteration" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                </readOnly>
              </definition>
              <rules>
                <default idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </rules>
            </public>
          </object>
          <object id="LocationPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="LocationPrivate.CodeEffectivenessNeeded" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="isnot">
                    <operand idref="LocationInput.State" type="string" />
                    <operand type="string" value="KS,NY,TX,DC" />
                  </comparison>
                  <operand idref="PolicyPrivate.IsCommercialPropertySelected" type="boolean" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsAK" type="boolean" comment="" caption="State Is AK">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="AK" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsAL" type="boolean" comment="" caption="State Is AL">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="AL" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsAR" type="boolean" comment="" caption="State Is AR">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="AR" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsAZ" type="boolean" comment="" caption="State Is AZ">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="AZ" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsCA" type="boolean" comment="" caption="State Is CA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="CA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsCO" type="boolean" comment="" caption="State Is CO">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="CO" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsCT" type="boolean" comment="" caption="State Is CT">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="CT" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsDC" type="boolean" comment="" caption="State Is DC">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="DC" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsDE" type="boolean" comment="" caption="State Is DE">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="DE" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsFL" type="boolean" comment="" caption="State Is FL">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="FL" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsGA" type="boolean" comment="" caption="State Is GA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="GA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsHI" type="boolean" comment="" caption="State Is HI">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="HI" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsIA" type="boolean" comment="" caption="State Is IA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="IA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsID" type="boolean" comment="" caption="State Is ID">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="ID" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsIL" type="boolean" comment="" caption="State Is IL">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="IL" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsIN" type="boolean" comment="" caption="State Is IN">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="IN" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsKS" type="boolean" comment="" caption="State Is KS">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="KS" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsKY" type="boolean" comment="" caption="State Is KY">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="KY" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsLA" type="boolean" comment="" caption="State Is LA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="LA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsMA" type="boolean" comment="" caption="State Is MA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="MA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsMD" type="boolean" comment="" caption="State Is MD">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="MD" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsME" type="boolean" comment="" caption="State Is ME">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="ME" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsMI" type="boolean" comment="" caption="State Is MI">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="MI" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsMN" type="boolean" comment="" caption="State Is MN">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="MN" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsMO" type="boolean" comment="" caption="State Is MO">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="MO" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsMS" type="boolean" comment="" caption="State Is MS">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="MS" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsMT" type="boolean" comment="" caption="State Is MT">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="MT" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsNC" type="boolean" comment="" caption="State Is NC">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="NC" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsND" type="boolean" comment="" caption="State Is ND">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="ND" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsNE" type="boolean" comment="" caption="State Is NE">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="NE" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsNH" type="boolean" comment="" caption="State Is NH">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="NH" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsNJ" type="boolean" comment="" caption="State Is NJ">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="NJ" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsNM" type="boolean" comment="" caption="State Is NM">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="NM" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsNV" type="boolean" comment="" caption="State Is NV">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="NV" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsNY" type="boolean" comment="" caption="State Is NY">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="NY" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsOH" type="boolean" comment="" caption="State Is OH">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="OH" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsOK" type="boolean" comment="" caption="State Is OK">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="OK" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsOR" type="boolean" comment="" caption="State Is OR">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="OR" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsPA" type="boolean" comment="" caption="State Is PA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="PA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsRI" type="boolean" comment="" caption="State Is RI">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="RI" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsSC" type="boolean" comment="" caption="State Is SC">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="SC" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsSD" type="boolean" comment="" caption="State Is SD">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="SD" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsTN" type="boolean" comment="" caption="State Is TN">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="TN" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsTX" type="boolean" comment="" caption="State Is TX">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="TX" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsUT" type="boolean" comment="" caption="State Is UT">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="UT" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsVA" type="boolean" comment="" caption="State Is VA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="VA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsVT" type="boolean" comment="" caption="State Is VT">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="VT" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsWA" type="boolean" comment="" caption="State Is WA">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="WA" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsWI" type="boolean" comment="" caption="State Is WI">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="WI" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsWV" type="boolean" comment="" caption="State Is WV">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="WV" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.StateIsWY" type="boolean" comment="" caption="State Is WY">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationInput.State" type="string" />
                  <operand type="string" value="WY" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsLastLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationOutputNonShredded.Number" type="int" />
                  <operand idref="LocationPrivate.LocationCount" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.LocationCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Location" />
              </value>
            </private>
            <private id="LocationPrivate.SetLocationEditMode" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="LocationOutputNonShredded.InLocationEditMode" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearLocationEditMode" caption="" type="boolean" alwaysRun="1">
              <value idref="False" />
              <affects>
                <reference idref="LocationOutputNonShredded.InLocationEditMode" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.NotInLocationEditMode" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationOutputNonShredded.InLocationEditMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="LocationOutput.LocationID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.SetLocationAddMode" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="LocationOutputNonShredded.InLocationAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearLocationAddMode" caption="" type="boolean" alwaysRun="1">
              <value idref="False" />
              <affects>
                <reference idref="LocationOutputNonShredded.InLocationAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.NotInLocationAddMode" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationOutputNonShredded.InLocationAddMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.DebitsCreditsApplicable" caption="" type="boolean" />
            <private id="LocationPrivate.ShowDelete" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="or">
                      <operand idref="Rules.PolicyIsQuote" type="float" />
                      <operand idref="Rules.PolicyIsInApplication" type="float" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.IsLocationUsed" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LocationPrivate.IsLocationUsedOnBuilding" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="PolicyPrivate.IsInAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="LocationPrivate.IsExcludedLocationCurrentLine" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="LocationPrivate.ShowDeleteMarked" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <operand idref="Rules.PolicyIsNotQuoteOrApplication" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.IsLocationUsed" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LocationPrivate.IsLocationUsedOnBuilding" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyPrivate.IsInInterimAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="LocationPrivate.IsExcludedLocationCurrentLine" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <object id="LocationPrivateKYTax">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LocationPrivateKYTax.CityCodeLookup" caption="" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationInput.TaxCity" type="string" />
                        <operand type="string" value="Not Listed" />
                      </comparison>
                    </condition>
                    <then idref="LocationPrivateKYTax.CityCodeLookup_County" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.KYTaxes_City" />
                        <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                        <fieldRef value="Value" />
                        <keyRef idref="LocationInput.TaxCity" type="string" name="City" />
                        <keyRef type="string" value="CityCode" name="Type" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </private>
              <private id="LocationPrivateKYTax.CityCodeLookup_County" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.KYTaxes_County" />
                    <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="LocationInput.TaxCounty" type="string" name="County" />
                    <keyRef type="string" value="CityCode" name="Type" />
                  </lookup>
                </value>
              </private>
              <private id="LocationPrivateKYTax.MinimumTaxLookup" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="or">
                        <comparison compare="eq">
                          <operand idref="LocationInput.TaxCity" type="string" />
                          <operand type="string" value="Not Listed" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="LocationInput.State" type="string" />
                          <operand type="string" value="KY" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then value="0" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.KYTaxes_City" />
                        <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                        <fieldRef value="Value" />
                        <keyRef idref="LocationInput.TaxCity" type="string" name="City" />
                        <keyRef type="string" value="MinTax" name="Type" />
                      </lookup>
                    </else>
                  </if>
                </value>
                <worksheet>
                  <comparison idref="True" type="int" />
                  <caption value="Min" />
                </worksheet>
              </private>
              <private id="LocationPrivateKYTax.MinimumTaxLookup_County" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LocationInput.State" type="string" />
                        <operand type="string" value="KY" />
                      </comparison>
                    </condition>
                    <then value="0" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.KYTaxes_County" />
                        <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                        <fieldRef value="Value" />
                        <keyRef idref="LocationInput.TaxCounty" type="string" name="County" />
                        <keyRef type="string" value="MinTax" name="Type" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </private>
              <private id="LocationPrivateKYTax.TaxCodeLookup" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.KYTaxes_City" />
                    <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="LocationInput.TaxCity" type="string" name="City" />
                    <keyRef type="string" value="TaxCode" name="Type" />
                  </lookup>
                </value>
              </private>
              <private id="LocationPrivateKYTax.TaxCodeLookup_County" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.KYTaxes_County" />
                    <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="LocationInput.TaxCounty" type="string" name="County" />
                    <keyRef type="string" value="TaxCode" name="Type" />
                  </lookup>
                </value>
              </private>
              <private id="LocationPrivateKYTax.TaxFactorLookup" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="contains">
                        <operand idref="LocationOutput.TaxCodeCity" type="string" />
                        <operand type="string" value="A" />
                      </comparison>
                    </condition>
                    <then idref="LocationPrivateKYTax.TaxFactorLookupACheck" />
                    <else idref="LocationPrivateKYTax.TaxFactorLookupCalc" />
                  </if>
                </value>
              </private>
              <private id="LocationPrivateKYTax.TaxFactorLookup_County" caption="" type="float">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.KYTaxes_County" />
                    <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="LocationInput.TaxCounty" type="string" name="County" />
                    <keyRef idref="LocationPrivateKYTax.TaxLookupKey" type="string" name="Type" />
                  </lookup>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="LocationPrivateKYTax.TaxFactorLookup_County" type="float" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then value="0" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="LocationPrivateKYTax.TaxFactorLookup_County" type="float" />
                          <operand type="int" value="0" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LocationPrivate.HideTaxCounty" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="LocationPrivateKYTax.TaxFactorLookup_County" message="LocationPrivateKYTax.TaxFactorLookup_CountyMsg1" type="float" />
                  </if>
                </misc>
              </private>
              <private id="LocationPrivateKYTax.TaxLookupKey" caption="" type="string">
                <value>
                  <select idref="PolicyInput.LineOfBusiness">
                    <case type="string" value="Vehicle" select="CommercialAuto" />
                    <case type="string" value="Liability" select="GeneralLiability" />
                    <case type="string" value="FireAndAllied" select="Property" />
                    <case type="string" value="Liability" select="WorkersCompensation" />
                    <case type="string" value="InlandMarine" select="InlandMarine" />
                    <case type="string" value="InlandMarine" select="InlandMarineAAIS" />
                    <case type="string" value="Liability" select="Crime" />
                    <case idref="LocationPrivateKYTax.TaxLookupKeyCPP" type="string" select="Package" />
                    <otherwise type="string" value="AllOther" />
                  </select>
                </value>
              </private>
              <private id="LocationPrivateKYTax.SurchargeFactorLookup" caption="" type="float">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.KYSurcharge" />
                    <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Surcharge" name="Type" />
                  </lookup>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="LocationPrivateKYTax.SurchargeFactorLookup" type="float" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then value="0" />
                  </if>
                </misc>
              </private>
              <private id="LocationPrivateKYTax.MunicipalTaxPremium" type="float">
                <value value="0" />
              </private>
              <private id="LocationPrivateKYTax.MunicipalTaxTotal" type="float">
                <value>
                  <calculation>
                    <argument op="eq" idref="LocationKYMunicipalTax.Subtotal" type="float" />
                    <argument op="multiply" idref="LocationPrivateKYTax.TaxFactorLookup" type="float" />
                    <argument op="min" idref="LocationPrivateKYTax.MinimumTax" type="float" />
                  </calculation>
                </value>
              </private>
              <private id="LocationPrivateKYTax.MunicipalTaxTotalChange" type="float">
                <value>
                  <calculation>
                    <argument op="eq" idref="LocationKYMunicipalTax.SubtotalChange" type="float" />
                    <argument op="multiply" idref="LocationPrivateKYTax.TaxFactorLookup" type="float" />
                    <argument op="min" idref="LocationPrivateKYTax.MinimumTaxChange" type="float" />
                  </calculation>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="le">
                          <operand idref="LocationPrivateKYTax.MunicipalTaxTotalWritten" type="float" />
                          <operand idref="LocationPrivateKYTax.MinimumTax" type="float" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="LocationOutputNonShredded.TransactionIDWhenAdded" type="string" />
                          <operand idref="PolicyOutputNonShredded.CurrentTransactionID" type="string" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then value="0" />
                  </if>
                </misc>
              </private>
              <private id="LocationPrivateKYTax.MunicipalTaxTotalWritten" type="float">
                <value>
                  <calculation>
                    <argument op="eq" idref="LocationKYMunicipalTax.SubtotalWritten" type="float" />
                    <argument op="multiply" idref="LocationPrivateKYTax.TaxFactorLookup" type="float" />
                    <argument op="min" idref="LocationPrivateKYTax.MinimumTax" type="float" />
                  </calculation>
                </value>
              </private>
              <private id="LocationPrivateKYTax.MunicipalTaxPremiumChange" type="float">
                <value value="0" />
              </private>
              <private id="LocationPrivateKYTax.MunicipalTaxPremiumWritten" type="float">
                <value value="0" />
              </private>
              <private id="LocationPrivateKYTax.TaxLookupKeyCPP" caption="" type="string">
                <value>
                  <select idref="LineOutput.Type">
                    <case type="string" value="Vehicle" select="CommercialAuto" />
                    <case type="string" value="Liability" select="GeneralLiability" />
                    <case type="string" value="FireAndAllied" select="Property" />
                    <case type="string" value="Liability" select="WorkersCompensation" />
                    <case type="string" value="InlandMarine" select="InlandMarine" />
                    <case type="string" value="Liability" select="Crime" />
                    <case type="string" value="InlandMarine" select="InlandMarineAAIS" />
                    <otherwise type="string" value="AllOther" />
                  </select>
                </value>
              </private>
              <private id="LocationPrivateKYTax.RiskPremium" caption="" type="float">
                <value>
                  <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Risk">
                    <reference idref="RiskPurePremiums.Premium" type="float" />
                    <customQuery idref="LocationPrivateKYTax.RiskPremiumXPath" />
                  </iterator>
                </value>
              </private>
              <private id="LocationPrivateKYTax.RiskPremiumXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="/session/data/policy/line[Type='" />
                    <argument op="add" idref="LineOutput.Type" type="string" />
                    <argument op="add" type="string" value="']/risk[LocationID='" />
                    <argument op="add" idref="LocationOutput.LocationID" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="LocationPrivateKYTax.RiskPremiumWritten" caption="" type="float">
                <value>
                  <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Risk">
                    <reference idref="RiskPurePremiums.PremiumWritten" type="float" />
                    <customQuery idref="LocationPrivateKYTax.RiskPremiumXPath" />
                  </iterator>
                </value>
              </private>
              <private id="LocationPrivateKYTax.RiskPremiumChange" caption="" type="float">
                <value>
                  <iterator type="float" scope="all" action="sum" includeDeleted="1" idref="Risk">
                    <reference idref="RiskPurePremiums.PremiumChange" type="float" />
                    <customQuery idref="LocationPrivateKYTax.RiskPremiumXPath" />
                  </iterator>
                </value>
              </private>
              <private id="LocationPrivateKYTax.TaxFactorLookupValue" caption="" type="float">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.KYTaxes_City" />
                    <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef idref="LocationInput.TaxCity" type="string" name="City" />
                    <keyRef idref="LocationPrivateKYTax.TaxLookupKey" type="string" name="Type" />
                  </lookup>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="LocationPrivateKYTax.TaxFactorLookupValue" type="float" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then value="0" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="LocationInput.TaxCity" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LocationInput.KYMunicipalTaxExemption" type="boolean" />
                          <operand type="int" value="0" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="LocationPrivateKYTax.TaxFactorLookupValue" message="LocationPrivateKYTax.TaxFactorLookupValueMsg1" type="float" />
                  </if>
                </misc>
                <worksheet>
                  <caption value="Tax Factor" />
                </worksheet>
              </private>
              <private id="LocationPrivateKYTax.TaxFactorLookupCalc" caption="" type="float">
                <value>
                  <calculation>
                    <argument op="eq" idref="LocationPrivateKYTax.TaxFactorLookupValue" type="float" />
                    <argument op="add" idref="LocationPrivateKYTax.TaxFactorLookup_County" type="float" />
                  </calculation>
                </value>
              </private>
              <private id="LocationPrivateKYTax.TaxFactorLookupACheck" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="LocationPrivateKYTax.TaxFactorLookupValue" type="float" />
                        <operand idref="LocationPrivateKYTax.TaxFactorLookup_County" type="float" />
                      </comparison>
                    </condition>
                    <then idref="LocationPrivateKYTax.TaxFactorLookupValue" />
                    <else idref="LocationPrivateKYTax.TaxFactorLookup_County" />
                  </if>
                </value>
              </private>
              <private id="LocationPrivateKYTax.TaxCountyAB" caption="" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationPrivate.StateIsKY" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="" />
                    <else>
                      <lookup>
                        <tableRef value="(custom defined)" idref="TableNames.KYTaxes_City" />
                        <manuscriptName idref="LocationTaxManuscript.ManuScriptID" />
                        <fieldRef value="Value" />
                        <onFailure idref="GlobalOutput.Spacer" />
                        <keyRef idref="LocationInput.TaxCity" type="string" name="City" />
                        <keyRef type="string" value="County" name="Type" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </private>
              <private id="LocationPrivateKYTax.MinimumTax" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="or">
                        <operand idref="PolicyPrivate.IsFlatCancel" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="LocationPrivate.DaysOnPolicy" type="int" />
                          <operand type="int" value="0" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then value="0" />
                    <else>
                      <calculation>
                        <argument op="eq" idref="LocationPrivateKYTax.MinimumTaxLookup" type="float" />
                        <argument op="add" idref="LocationPrivateKYTax.MinimumTaxLookup_County" type="float" />
                      </calculation>
                    </else>
                  </if>
                </value>
              </private>
              <private id="LocationPrivateKYTax.MinimumTaxChange" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LocationOutputNonShredded.TransactionIDWhenAdded" type="string" />
                        <operand idref="PolicyOutputNonShredded.CurrentTransactionID" type="string" />
                      </comparison>
                    </condition>
                    <then value="0" />
                    <else>
                      <calculation>
                        <argument op="eq" idref="LocationPrivateKYTax.MinimumTaxLookup" type="float" />
                        <argument op="add" idref="LocationPrivateKYTax.MinimumTaxLookup_County" type="float" />
                      </calculation>
                    </else>
                  </if>
                </value>
              </private>
              <private id="LocationPrivateKYTax.MinimumTaxChangeCity" caption="" type="float">
                <value>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LocationOutputNonShredded.TransactionIDWhenAdded" type="string" />
                        <operand idref="PolicyOutputNonShredded.CurrentTransactionID" type="string" />
                      </comparison>
                    </condition>
                    <then value="0" />
                    <else>
                      <calculation>
                        <argument op="eq" idref="LocationPrivateKYTax.MinimumTaxLookup" type="float" />
                      </calculation>
                    </else>
                  </if>
                </value>
              </private>
            </object>
            <private id="LocationPrivate.AddHonoredManuscriptIfNeeded" caption="" type="string" alwaysRun="1">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.NumberHonoredStatesForCurrentState" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.AddHonoredManuscriptObject" />
                </if>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="gt">
                        <operand idref="LocationPrivate.NumberHonoredStatesForCurrentState" type="int" />
                        <operand type="int" value="0" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LocationPrivate.IsManuscriptIDSetForCurrentState" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.SetHonoredManuscriptsIDs" />
                </if>
              </misc>
            </private>
            <private id="LocationPrivate.NumberHonoredStatesForCurrentState" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="count" idref="HonoredManuscripts">
                  <where>
                    <comparison compare="eq">
                      <operand idref="LocationInput.State" type="string" />
                      <operand idref="HonoredManuscriptsOutput.State" type="string" />
                    </comparison>
                  </where>
                  <customQuery idref="LocationPrivate.NumberHonoredStatesForCurrentStateXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.AddHonoredManuscriptObject" caption="" type="string" alwaysRun="1">
              <value>
                <request verb="ManuScript.addObjectRecordRq" get="@status">
                  <onFailure value="" />
                  <modifySession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="HonoredManuscripts" name="objectID" dataType="attribute" />
                    <nameValue idref="LinePrivate.ContextPath" name="context" dataType="attribute" />
                    <nameValue idref="LocationInput.State" name="field" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
              <affects>
                <reference idref="LocationPrivate.SetHonoredManuscriptsState" effect="postEffect" />
                <reference idref="LocationPrivate.SetHonoredManuscriptsIDs" effect="postEffect" />
              </affects>
            </private>
            <private id="LocationPrivate.SetHonoredManuscriptsState" caption="" type="string" alwaysRun="1">
              <value>
                <iterator type="string" scope="last" action="sum" idref="HonoredManuscripts">
                  <reference idref="HonoredManuscriptsPrivate.SetStateFromState" type="string" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.NumberHonoredStatesForCurrentStateXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="honoredmanuscripts[State='" />
                  <argument op="add" idref="LocationInput.State" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.SetHonoredManuscriptsIDs" caption="" type="string" alwaysRun="1">
              <value>
                <iterator type="string" scope="first" action="sum" idref="HonoredManuscripts">
                  <reference idref="HonoredManuscriptsPrivate.SetManuscriptIDs" type="string" />
                  <customQuery idref="LocationPrivate.NumberHonoredStatesForCurrentStateXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.IsManuscriptIDSetForCurrentState" caption="" type="boolean" alwaysRun="1">
              <value>
                <iterator type="boolean" scope="all" action="count" idref="HonoredManuscripts">
                  <where>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="LocationInput.State" type="string" />
                          <operand idref="HonoredManuscriptsOutput.State" type="string" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="HonoredManuscriptsOutput.RiskManuscriptID" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                      <comparison compare="ne">
                        <operand idref="HonoredManuscriptsOutput.RiskManuscriptID" type="string" />
                        <operand type="string" value="0" />
                      </comparison>
                    </comparison>
                  </where>
                  <customQuery idref="LocationPrivate.NumberHonoredStatesForCurrentStateXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.IsLocationUsedOnRisk" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="LocationPrivate.LocationUsedOnRiskCount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedOnRiskCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Risk">
                  <customQuery idref="LocationPrivate.LocationUsedOnRiskXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedOnRiskXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="/session/data/policy//line/risk[LocationID='" />
                  <argument op="add" idref="LocationOutput.LocationID" type="string" />
                  <argument op="add" type="string" value="'][@deleted!=1]" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.DeleteObjectRequest" caption="" type="string">
              <value>
                <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                  <onFailure value="" />
                  <modifySession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="Location" name="objectID" dataType="attribute" />
                    <nameValue idref="LocationPrivate.ContextPath" name="context" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <object id="LocationTaxManuscript">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="LocationTaxManuscript.ManuScriptID" type="string" comment="" path="TaxManuScriptID">
                <definition>
                  <caption value="Tax ManuscriptID" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="PolicyInput.HonorRates" type="boolean" />
                              <operand idref="True" type="int" />
                            </comparison>
                            <comparison compare="ne">
                              <operand idref="LocationTaxManuscript.ManuScriptID" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LocationTaxManuscript.CurrentManuScriptIDState" type="string" />
                            <operand idref="LocationTaxManuscript.StateKey" type="string" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="LocationTaxManuscript.ManuScriptID" />
                      <else idref="LocationTaxManuscript.ManuScriptIDBroker" />
                    </if>
                  </value>
                </rules>
              </public>
              <private id="LocationTaxManuscript.ManuScriptIDBroker" type="string" comment="" caption="Location Tax Manuscript ID Broker">
                <value>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="LocationTaxManuscript.ManuScriptIDBrokerByCarrier" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="LocationTaxManuscript.ManuScriptIDBrokerByCarrier" />
                    <else idref="LocationTaxManuscript.ManuScriptIDBrokerByNonCarrier" />
                  </if>
                </value>
              </private>
              <private id="LocationTaxManuscript.LineOfBusinessKeyByCarrier" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="Carrier" />
                    <argument op="add" idref="LocationTaxManuscript.LineOfBusinessKey" type="string" />
                  </calculation>
                </value>
              </private>
              <private id="LocationTaxManuscript.ManuScriptIDBrokerByCarrier" type="string" comment="" caption="Location Tax Manu Script ID Broker">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LocationTaxManuscript.LineOfBusinessKeyByCarrier" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LocationTaxManuscript.StateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LocationTaxManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LocationTaxManuscript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="productCode" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue value="Tax" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LocationTaxManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LocationTaxManuscript.ManuScriptIDBrokerByNonCarrier" type="string" comment="" caption="Carrier Location Tax Manu Script ID Broker">
                <value>
                  <request verb="ManuScriptBroker.listRq" get="items/item/@id">
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue value="" name="keys" dataType="element">
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="lob" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LocationTaxManuscript.LineOfBusinessKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="state" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue idref="LocationTaxManuscript.StateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue idref="LocationTaxManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="&lt;=" name="operator" dataType="attribute" />
                          <nameValue idref="LocationTaxManuscript.EffectiveDateKey" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="key" dataType="element">
                          <nameValue value="productCode" name="name" dataType="attribute" />
                          <nameValue value="=" name="operator" dataType="attribute" />
                          <nameValue value="Tax" name="value" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue idref="LocationTaxManuscript.EffectiveDateKeyName" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                        <nameValue value="" name="sort" dataType="element">
                          <nameValue value="version" name="name" dataType="attribute" />
                          <nameValue value="descending" name="direction" dataType="attribute" />
                        </nameValue>
                      </nameValue>
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LocationTaxManuscript.EffectiveDateKeyName" caption="" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                        <operand type="string" value="Renew" />
                      </comparison>
                    </condition>
                    <then idref="ManuScriptKeys.effectiveDateRenewal" />
                    <else idref="ManuScriptKeys.effectiveDateNew" />
                  </if>
                </value>
              </private>
              <private id="LocationTaxManuscript.EffectiveDateKey" caption="" type="string">
                <value idref="PolicyInput.EffectiveDate" />
              </private>
              <private id="LocationTaxManuscript.StateKey" caption="" type="string">
                <value idref="LocationInput.State" />
              </private>
              <private id="LocationTaxManuscript.LineOfBusinessKey" caption="" type="string">
                <value value="Product" />
              </private>
              <private id="LocationTaxManuscript.CurrentManuScriptIDState" caption="" type="string">
                <value>
                  <subString subStrMethod="delimitedList">
                    <sourceString idref="LocationTaxManuscript.ManuScriptID" />
                    <separatorChar value="_" />
                    <ordPosition value="4" />
                  </subString>
                </value>
              </private>
            </object>
            <private id="LocationPrivate.CanDelete" type="boolean">
              <value idref="False" />
            </private>
            <private id="LocationPrivate.CanDeleteVersion1" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="ne">
                    <operand idref="LocationOutputNonShredded.Number" type="int" />
                    <operand type="int" value="1" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LocationPrivate.RiskCount" type="int" />
                    <operand type="int" value="0" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.CannotDeleteMessage" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.IsPrimaryLocation" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.CannotDeleteMessagePrimary" />
                  <else idref="LocationPrivate.CannotDeleteMessageSecondary" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.CannotDeleteMessagePrimary" type="string">
              <value value="Primary location cannot be deleted." />
            </private>
            <private id="LocationPrivate.CannotDeleteMessageSecondary" type="string">
              <value value="To delete this location, you must first reassign or delete the following vehicles assigned to the location." />
            </private>
            <private id="LocationPrivate.DescriptionValue" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.IsPrimaryLocation" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then value="Primary Location" />
                  <else idref="LocationPrivate.SecondaryLocationDescription" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.HideTaxCounty" caption="" type="boolean">
              <value>
                <comparison compare="or">
                  <operand idref="LocationInput.KYMunicipalTaxExemption" type="boolean" />
                  <comparison compare="and">
                    <comparison compare="ne">
                      <operand idref="LocationInput.TaxCity" type="string" />
                      <operand type="string" value="Not Listed" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.TaxCityCodeAB" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsPrimaryLocation" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationOutputNonShredded.Number" type="int" />
                  <operand type="int" value="1" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.LocationSelectDescription" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.LocationDescriptionAddress" />
                  <else value="All Locations" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.RiskCount" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="count" idref="Risk">
                  <where>
                    <comparison compare="eq">
                      <operand idref="RiskPrivate.BelongsToLocation" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </where>
                </iterator>
              </value>
              <affects>
                <reference idref="LocationPrivate.SetLocationIDToCompare" effect="preEffect" />
              </affects>
            </private>
            <private id="LocationPrivate.SecondaryLocationDescription" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="Location #" />
                  <argument op="add" idref="LocationOutputNonShredded.Number" type="int" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.SetLocationIDToCompare" type="string">
              <value idref="LocationOutput.LocationID" />
              <affects>
                <reference idref="GlobalOutput.LocationIDToCompare" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ShowTaxCity" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="eq">
                    <operand idref="LocationInput.State" type="string" />
                    <operand type="string" value="KY" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LineKYMunicipalTaxPrivate.TaxAvailableForCurrentLine" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedOnBuildingCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Building">
                  <customQuery idref="LocationPrivate.LocationUsedOnBuildingXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedOnBuildingXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="building[BuildingLocationID='" />
                  <argument op="add" idref="LocationOutput.LocationID" type="string" />
                  <argument op="add" type="string" value="'][not(@deleted='1')]" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.IsLocationUsedOnBuilding" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="LocationPrivate.LocationUsedOnBuildingCount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsLocationUsed" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="LocationPrivate.LocationUsedCount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Risk">
                  <customQuery idref="LocationPrivate.LocationUsedXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="/session/data/policy/line/risk[LocationID='" />
                  <argument op="add" idref="LocationOutput.LocationID" type="string" />
                  <argument op="add" type="string" value="'][@deleted!=1 or not(@deleted)]" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.CheckResetLocationID" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationOutput.LocationID" type="string" />
                      <operand idref="LocationSelectInput.LocationID" type="string" />
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.ResetLocationID" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.ResetLocationID" caption="" type="string">
              <affects>
                <reference idref="LocationSelectInput.LocationID" effect="setValue" />
              </affects>
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationOutput.LocationID" type="string" />
                      <operand idref="LocationGroup.DefaultID" type="string" />
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.ResetLocationIDToLast" />
                  <else idref="LocationPrivate.ResetLocationIDToFirst" />
                </if>
              </value>
            </private>
            <object id="Location_Page">
              <minOccurs value="1" />
              <maxOccurs value="1" />
            </object>
            <private id="LocationPrivate.CurrentIteration" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="current" idref="Location" />
              </value>
            </private>
            <object id="LocationPremiumSubtotals">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <object id="LocationKYMunicipalTax">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LocationKYMunicipalTax.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                  <value idref="LocationPrivateKYTax.MunicipalTaxPremium" />
                </private>
                <private id="LocationKYMunicipalTax.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                  <value idref="LocationPrivateKYTax.MunicipalTaxPremiumChange" />
                </private>
                <private id="LocationKYMunicipalTax.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                  <value idref="LocationPrivateKYTax.MunicipalTaxPremiumWritten" />
                </private>
              </object>
              <object id="LocationKYSurcharge">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LocationKYSurcharge.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationKYSurcharge.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationKYSurcharge.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
              </object>
              <object id="LocationWVPolicyholderSurcharge">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LocationWVPolicyholderSurcharge.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationWVPolicyholderSurcharge.SubtotalChange" type="float" caption="e Taxes Surcharges Change" comment="Sum of change premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationWVPolicyholderSurcharge.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
              </object>
              <object id="LocationNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LocationNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.SubtotalChange" type="float" caption="e Taxes Surcharges Change" comment="Sum of change premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationNJPropertyLiabilityInsuranceGuarantyAssociationSurcharge.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
              </object>
              <object id="LocationFLInsuranceGuarantyAssociationAssessment">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="LocationFLInsuranceGuarantyAssociationAssessment.Subtotal" type="float" comment="Sum of full term premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationFLInsuranceGuarantyAssociationAssessment.SubtotalChange" type="float" comment="Sum of change premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
                <private id="LocationFLInsuranceGuarantyAssociationAssessment.SubtotalWritten" type="float" comment="Sum of written premiums used to calculate specific tax/surcharge">
                  <value value="0" />
                </private>
              </object>
            </object>
            <private id="LocationPrivate.ResetLocationIDToFirst" caption="" type="string">
              <value idref="LocationGroup.DefaultID" />
            </private>
            <private id="LocationPrivate.ResetLocationIDToLast" caption="" type="string">
              <value idref="LocationGroup.LastID" />
            </private>
            <private id="LocationPrivate.NumberOfBuildingNumberRecordsForCurrentLocation" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="first" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.NumberOfBuildingNumberRecordsForCurrentLocation" type="int" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
              <affects>
                <reference idref="LocationPrivate.SetCurrentLocationNumberIDForAdd" effect="preEffect" />
              </affects>
            </private>
            <private id="LocationPrivate.LocationNumberReset" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="current" idref="Location" />
              </value>
              <affects>
                <reference idref="LocationOutputNonShredded.Number" effect="setValue" />
                <reference idref="LocationOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
              </affects>
            </private>
            <private id="LocationPrivate.AddBuildingNumberObjectIfNeeded" caption="" type="string" alwaysRun="1">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.NumberOfBuildingNumberRecordsForCurrentLocation" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.AddBuildingNumberObject" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.AddBuildingNumberObject" caption="" type="string" alwaysRun="1">
              <value>
                <iterator type="string" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                  <reference idref="AvailableBuildingNumberPrivate.AddBuildingNumberObject" type="string" />
                  <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.ValidLocationRenumberNewTerm" caption="" type="int" alwaysRun="1" path="ValidLocationRenumberNewTerm">
              <value idref="PolicyPrivate_LocationNumbering.ResetLocationNumber" />
            </private>
            <private id="LocationPrivate.LocationNumberResetMidTerm" caption="" type="int" path="LocationNumberResetMidTerm">
              <affects>
                <reference idref="LocationOutputNonShredded.Number" effect="setValue" />
              </affects>
              <value idref="PolicyPrivate_LocationNumbering.NextAvailableLocationNumber" />
            </private>
            <private id="LocationPrivate.SetCurrentLocationNumberIDForAdd" type="string" comment="" alwaysRun="1" path="SetCurrentLocationNumberID">
              <value idref="LocationOutput.LocationID" />
              <affects>
                <reference idref="_processingData.CurrentLocationNumberIDForAdd" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.IsValidToRenumber" caption="" type="boolean" alwaysRun="1">
              <misc>
                <if>
                  <condition idref="PolicyPrivate.IsValidToRenumber" />
                  <then idref="True" />
                </if>
                <if>
                  <condition>
                    <comparison compare="le">
                      <operand idref="PolicyPrivate_LocationNumbering.NextAvailableLocationNumberAtStart" type="int" />
                      <operand idref="LocationOutputNonShredded.Number" type="int" />
                    </comparison>
                  </condition>
                  <then idref="True" />
                </if>
              </misc>
              <value idref="False" />
            </private>
            <private id="LocationPrivate.ValidLocationRenumberCheck" caption="" type="int" alwaysRun="1">
              <value>
                <if>
                  <condition idref="LocationPrivate.IsValidToRenumber" />
                  <then idref="LocationPrivate.ValidLocationRenumber" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.ValidLocationRenumber" caption="" type="int" alwaysRun="1">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <operand idref="ConstantsPolicyAdminProcessing.IsNewTerm" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="LocationPrivate.ValidLocationRenumberNewTerm" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.SetCurrentLocationNumberID" type="string" comment="" alwaysRun="1" path="SetCurrentLocationNumberID">
              <value idref="LocationOutput.LocationID" />
              <affects>
                <reference idref="AccountPrivate.CurrentLocationNumberID" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.IsLocationUsedInCurrentLine" caption="" type="boolean" comment="This field can only be referenced within a specific line of business manuscript.">
              <value>
                <comparison compare="gt">
                  <operand idref="LocationPrivate.LocationUsedInCurrentLineCount" type="boolean" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedInCurrentLineCount" caption="" type="boolean" comment="This field can only be referenced within a specific line of business manuscript.">
              <value>
                <iterator type="boolean" scope="first" action="count" idref="Risk">
                  <customQuery idref="LocationPrivate.LocationUsedInCurrentLineCountXPath" />
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.LocationUsedInCurrentLineCountXPath" caption="" type="string" comment="This field can only be referenced within a specific line of business manuscript.">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="/session/data/policy/line[Type='" />
                  <argument op="add" idref="LineOutput.Type" type="string" />
                  <argument op="add" type="string" value="']//*[LocationID='" />
                  <argument op="add" idref="LocationOutput.LocationID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.AddressReadOnly" caption="" type="boolean">
              <misc>
                <if>
                  <condition idref="PitneyBowesOutput.GeocodingEnabled" />
                  <then idref="Location_GeocodePrivate.AddressReadOnly" />
                </if>
              </misc>
            </private>
            <private id="LocationPrivate.LastLocationXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="location[last()]" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.LocationFilterXPath" caption="" type="string" alwaysRun="1">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="AccountOutputNonShredded.LocationScheduleSearch" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </condition>
                  <then value="" />
                  <else idref="LocationPrivate.LocationFilterXPathCalc" />
                </if>
              </value>
            </private>
            <private id="LocationPrivate.LocationFilterXPathCalc" caption="" type="string" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="/session/data/account/location[dcfn:contains(string(" />
                  <argument op="add" idref="AccountOutputNonShredded.LocationScheduleFilter" type="string" />
                  <argument op="add" type="string" value="), dcfn:xml-decode('" />
                  <argument op="add" idref="AccountOutputNonShredded.LocationScheduleSearch" type="string" />
                  <argument op="add" type="string" value="'))][@deleted!=1]" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.ShowFilter" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationSchedulePage.IsReadOnly" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.LocationDescriptionAddress" type="string">
              <value>
                <calculation>
                  <argument op="eq" idref="LocationInput.Description" type="string" />
                  <argument op="add" type="string" value=", " />
                  <argument op="eq" idref="LocationInput.Address1" type="string" />
                  <argument op="add" type="string" value=", " />
                  <argument op="add" idref="LocationInput.City" type="string" />
                  <argument op="add" type="string" value=", " />
                  <argument op="add" idref="LocationInput.State" type="string" />
                  <argument op="add" type="string" value="  " />
                  <argument op="add" idref="LocationInput.ZipCode" type="string" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.StorePolicyRq" caption="" type="string" alwaysRun="1" path="StorePolicyRqb">
              <value>
                <request verb="OnlineData.storePolicyRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuScriptID" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="LocationPrivate.TaxCityCodeAB" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="LocationPrivate.StateIsKY" type="boolean" />
                  <comparison compare="or">
                    <comparison compare="contains">
                      <operand idref="LocationOutput.TaxCodeCity" type="string" />
                      <operand type="string" value="A" />
                    </comparison>
                    <comparison compare="contains">
                      <operand idref="LocationOutput.TaxCodeCity" type="string" />
                      <operand type="string" value="B" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.HideTaxCity" caption="" type="boolean">
              <value>
                <comparison idref="LocationInput.KYMunicipalTaxExemption" type="boolean" />
              </value>
            </private>
            <private id="LocationPrivate.IsLocationImported" caption="" type="boolean">
              <value>
                <comparison compare="ne">
                  <operand idref="LocationOutputNonShredded.ImportID" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.ShowImportID" caption="" type="boolean">
              <value>
                <comparison idref="LocationPrivate.IsLocationImported" type="boolean" />
              </value>
            </private>
            <private id="LocationPrivate.HideDeleteAllColumn" caption="" type="boolean">
              <misc>
                <if>
                  <condition idref="PolicyPrivate.IsInAudit" />
                  <then idref="True" type="int" />
                </if>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="True" type="int" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="True" type="int" />
                </if>
              </misc>
              <value idref="False" />
            </private>
            <private id="LocationPrivate.ShowDeleteAll" caption="" type="boolean" path="ShowDeleteAll">
              <value>
                <comparison compare="or">
                  <comparison compare="eq">
                    <operand idref="LocationPrivate.IsLocationUsed" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LocationPrivate.IsLocationUsedOnBuilding" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="PolicyPrivate.IsInAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="LocationPrivate.IsExcludedLocationCurrentLine" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="LocationPrivate.HideTaxCodeCity" caption="" type="boolean">
              <value>
                <comparison compare="or">
                  <comparison compare="or">
                    <operand idref="LocationPrivate.HideTaxCity" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationInput.TaxCity" type="string" />
                      <operand type="string" value="Not Listed" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LocationInput.TaxCity" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.HideTaxCodeCounty" caption="" type="boolean">
              <value>
                <comparison compare="or">
                  <comparison compare="or">
                    <operand idref="LocationPrivate.HideTaxCounty" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="LocationInput.TaxCounty" type="string" />
                      <operand type="string" value="Not Listed" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="LocationInput.TaxCounty" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.ClearTaxFields" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="LocationOutput.TaxCodeCity" effect="setValue" />
                <reference idref="LocationOutput.TaxCodeCounty" effect="setValue" />
                <reference idref="LocationInput.TaxCounty" effect="setValue" />
              </affects>
            </private>
            <object id="LocationPrivate_NumberSetup">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LocationPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" caption="" type="string" path="AvailableNumberIDForCurrentTerm3">
                <value value="" />
                <affects>
                  <reference idref="LocationOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="setValue" />
                </affects>
              </private>
              <private id="LocationPrivate_NumberSetup.ReconcileInitialSetup" caption="" type="string" path="LocationNumberOOSSetup">
                <value value="" />
                <affects>
                  <reference idref="LocationPrivate.LocationNumberResetMidTerm" effect="postEffect" />
                  <reference idref="LocationPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" effect="postEffect" />
                  <reference idref="LocationOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
                  <reference idref="LocationPrivate_NumberSetup.UpdateAvailableNumberBackup" effect="postEffect" />
                </affects>
              </private>
              <private id="LocationPrivate_NumberSetup.ReconcileSetupCheck" caption="" type="string" path="ReconcileSetupCheck">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationPrivate_NumberSetup.BackupNumberCount" type="int" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then idref="LocationPrivate_NumberSetup.ReconcileInitialSetup" />
                    <else idref="LocationPrivate_NumberSetup.ReconcileBackupSetup" />
                  </if>
                </value>
              </private>
              <private id="LocationPrivate_NumberSetup.BackupNumberXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="availableNumbersBackup[@groupID='" />
                    <argument op="add" idref="LocationOutput.LocationID" type="string" />
                    <argument op="add" type="string" value="'][@availableNumberTermID='" />
                    <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="LocationPrivate_NumberSetup.BackupNumberCount" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="count" idref="AvailableNumbersBackup">
                    <customQuery idref="LocationPrivate_NumberSetup.BackupNumberXPath" />
                  </iterator>
                </value>
              </private>
              <private id="LocationPrivate_NumberSetup.SetBackupNumberValue" caption="" type="string">
                <value>
                  <iterator type="string" scope="first" action="sum" idref="AvailableNumbersBackup">
                    <reference idref="AvailableNumbersBackupOutput.Value" type="string" />
                    <customQuery idref="LocationPrivate_NumberSetup.BackupNumberXPath" />
                  </iterator>
                </value>
                <affects>
                  <reference idref="LocationOutputNonShredded.Number" effect="setValue" />
                </affects>
              </private>
              <private id="LocationPrivate_NumberSetup.ReconcileBackupSetup" caption="" type="string" path="LocationNumberOOSSetup">
                <value value="" />
                <affects>
                  <reference idref="LocationPrivate_NumberSetup.SetBackupNumberValue" effect="postEffect" />
                  <reference idref="LocationPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" effect="postEffect" />
                  <reference idref="LocationOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
                </affects>
              </private>
              <private id="LocationPrivate_NumberSetup.UpdateAvailableNumberBackup" caption="" type="string">
                <value>
                  <request verb="Session.setElementRq" get="">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="LocationPrivate_NumberSetup.UpdateAvailableNumberBackupPath" name="path" dataType="attribute" />
                      <nameValue idref="LocationOutputNonShredded.Number" name="value" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="LocationPrivate_NumberSetup.UpdateAvailableNumberBackupPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="_temporaryTemplateData^availableNumbersBackup[@groupID='" />
                    <argument op="add" idref="LocationOutput.LocationID" type="string" />
                    <argument op="add" type="string" value="' and @availableNumberTermID='" />
                    <argument op="add" idref="LocationOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                    <argument op="add" type="string" value="']/@value" />
                  </calculation>
                </value>
              </private>
            </object>
            <private id="LocationPrivate.IsExcludedLocationCurrentLine" caption="" type="boolean">
              <value>
                <comparison idref="False" type="int" />
              </value>
            </private>
            <private id="LocationPrivate.ShowDetail" caption="" type="boolean">
              <misc>
                <if>
                  <condition idref="LocationPrivate.IsExcludedLocationCurrentLine" />
                  <then idref="False" />
                </if>
              </misc>
              <value idref="True" />
            </private>
            <private id="LocationPrivate.HideExcludeLocationColumn" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsValidCurrentLine" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationPrivate.IsExcludedLocationCurrentLine" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.DateLocationAdded" caption="" type="date" path="DateLocationAdded">
              <value>
                <iterator type="date" scope="all" action="sum" idref="Transaction">
                  <reference idref="TransactionInput.EffectiveDate" type="date" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="LocationOutputNonShredded.TransactionIDWhenAdded" type="string" />
                      <operand idref="TransactionOutput.ID" type="string" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <private id="LocationPrivate.DateLocationRemoved" caption="" type="date" path="DateLocationAdded">
              <value>
                <iterator type="date" scope="first" action="sum" idref="Transaction">
                  <reference idref="TransactionInput.EffectiveDate" type="date" />
                  <customQuery idref="LocationPrivate.DateLocationRemovedXPath" />
                </iterator>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationPrivate.DateLocationRemoved" type="date" />
                      <operand type="string" value="" />
                    </comparison>
                  </condition>
                  <then idref="TransactionInput.ExpirationDate" />
                </if>
              </misc>
            </private>
            <private id="LocationPrivate.DateLocationRemovedXPath" caption="" type="string" path="DateLocationAdded">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="transactions/transaction[@id='" />
                  <argument op="add" idref="LocationOutputNonShredded.TransactionIDWhenRemoved" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="LocationPrivate.DaysOnPolicy" caption="" type="int">
              <value>
                <dateDifference unit="days">
                  <dateArgument idref="LocationPrivate.DateLocationRemoved" />
                  <dateArgument idref="LocationPrivate.DateLocationAdded" />
                </dateDifference>
              </value>
            </private>
            <private id="LocationPrivate.SetPreviouslyAddedTransactionID" caption="" type="string">
              <value idref="LocationOutputNonShredded.TransactionIDWhenAdded" />
              <affects>
                <reference idref="LocationOutputNonShredded.PreviouslyAddedTransactionID" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.IsCommercialAutoTaxValueInvalidForLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCommercialAutoSelected" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsGeneralLiabilityTaxValueInvalidForLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCommercialGeneralLiabilitySelected" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.ClearCommercialAutoTaxValues" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LocationOutput.TaxCityChangeAmountCommercialAuto" effect="setValue" />
                <reference idref="LocationOutput.TaxCityWrittenAmountCommercialAuto" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyChangeAmountCommercialAuto" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyWrittenAmountCommercialAuto" effect="setValue" />
                <reference idref="LocationOutput.TaxPremiumCommercialAuto" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearGeneralLiabilityTaxValues" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LocationOutput.TaxCityChangeAmountGeneralLiability" effect="setValue" />
                <reference idref="LocationOutput.TaxCityWrittenAmountGeneralLiability" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyChangeAmountGeneralLiability" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyWrittenAmountGeneralLiability" effect="setValue" />
                <reference idref="LocationOutput.TaxPremiumGeneralLiability" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearBusinessOwnersTaxValues" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LocationOutput.TaxCityChangeAmountBusinessOwners" effect="setValue" />
                <reference idref="LocationOutput.TaxCityWrittenAmountBusinessOwners" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyChangeAmountBusinessOwners" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyWrittenAmountBusinessOwners" effect="setValue" />
                <reference idref="LocationOutput.TaxPremiumBusinessOwners" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearCrimeTaxValues" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LocationOutput.TaxCityChangeAmountCrime" effect="setValue" />
                <reference idref="LocationOutput.TaxCityWrittenAmountCrime" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyChangeAmountCrime" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyWrittenAmountCrime" effect="setValue" />
                <reference idref="LocationOutput.TaxPremiumCrime" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearInlandMarineTaxValues" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LocationOutput.TaxCityChangeAmountInlandMarine" effect="setValue" />
                <reference idref="LocationOutput.TaxCityWrittenAmountInlandMarine" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyChangeAmountInlandMarine" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyWrittenAmountInlandMarine" effect="setValue" />
                <reference idref="LocationOutput.TaxPremiumInlandMarine" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearInlandMarineAAISTaxValues" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LocationOutput.TaxCityChangeAmountInlandMarineAAIS" effect="setValue" />
                <reference idref="LocationOutput.TaxCityWrittenAmountInlandMarineAAIS" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyChangeAmountInlandMarineAAIS" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyWrittenAmountInlandMarineAAIS" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.ClearPropertyTaxValues" caption="" type="float">
              <value value="0" />
              <affects>
                <reference idref="LocationOutput.TaxCityChangeAmountProperty" effect="setValue" />
                <reference idref="LocationOutput.TaxCityWrittenAmountProperty" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyChangeAmountProperty" effect="setValue" />
                <reference idref="LocationOutput.TaxCountyWrittenAmountProperty" effect="setValue" />
                <reference idref="LocationOutput.TaxPremiumProperty" effect="setValue" />
              </affects>
            </private>
            <private id="LocationPrivate.IsBusinessOwnersTaxValueInvalidForLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsCrimeTaxValueInvalidForLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCommercialCrimeSelected" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsPropertyTaxValueInvalidForLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCommercialPropertySelected" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsInlandMarineTaxValueInvalidForLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCommercialInlandMarineSelected" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="LocationPrivate.IsInlandMarineAAISTaxValueInvalidForLocation" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyPrivate.IsCommercialInlandMarineAAISSelected" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
          </object>
          <object id="LocationOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="LocationOutputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="LocationOutputNonShredded.InLocationEditMode" path="InLocationEditMode" type="boolean">
                <definition>
                  <caption value="In Location Edit Mode" />
                </definition>
                <rules>
                  <default idref="True" />
                </rules>
              </public>
              <public id="LocationOutputNonShredded.InLocationAddMode" path="InLocationAddMode" type="boolean">
                <definition>
                  <caption value="Location Output Non Shredded In Location Add Mode" />
                </definition>
                <rules>
                  <default>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LocationPrivate.CurrentIteration" type="int" />
                          <operand type="int" value="1" />
                        </comparison>
                      </condition>
                      <then idref="True" />
                      <else idref="False" />
                    </if>
                  </default>
                </rules>
              </public>
              <public id="LocationOutputNonShredded.EditCaption" path="EditCaption" type="string">
                <definition>
                  <caption value="Edit Caption" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value value="Detail" />
                </rules>
              </public>
              <public id="LocationOutputNonShredded.Deleted" path="@deleted" type="boolean">
                <definition>
                  <caption value="Deleted" />
                </definition>
                <rules>
                  <default value="0" />
                </rules>
              </public>
              <public id="LocationOutputNonShredded.AddressDisplay" path="AddressDisplay" type="string">
                <definition>
                  <caption value="Address" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" idref="LocationInput.Address1" type="string" />
                      <argument op="add" type="string" value=", " />
                      <argument op="add" idref="LocationInput.City" type="string" />
                      <argument op="add" type="string" value=", " />
                      <argument op="add" idref="LocationInput.State" type="string" />
                      <argument op="add" type="string" value="  " />
                      <argument op="add" idref="LocationInput.ZipCode" type="string" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="LocationOutputNonShredded.Number" path="Number" type="int">
                <definition>
                  <caption value="Number" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
                <rules>
                  <default>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="LocationPrivate.CurrentIteration" type="int" />
                          <operand type="int" value="1" />
                        </comparison>
                      </condition>
                      <then value="1" />
                      <else idref="PolicyPrivate_LocationNumbering.NextAvailableLocationNumber" />
                    </if>
                  </default>
                  <affects>
                    <reference idref="LocationPrivate.ValidLocationRenumberCheck" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public id="LocationOutputNonShredded.ImportID" path="ImportID" type="int" comment="Value assigned externally if location has been imported using the Spreadsheet import functionality.">
                <definition>
                  <caption value="Import ID: " />
                  <readOnly idref="True" />
                  <formatMask value="#########" />
                </definition>
              </public>
              <public id="LocationOutputNonShredded.TransactionIDWhenAdded" path="TransactionIDWhenAdded" type="string">
                <definition>
                  <caption value="Transaction ID When Added" />
                </definition>
                <rules>
                  <default idref="PolicyOutputNonShredded.CurrentTransactionID" />
                  <nonRating value="1" />
                  <misc>
                    <if>
                      <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                      <then idref="PolicyOutputNonShredded.CurrentTransactionID" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="LocationOutputNonShredded.AvailableNumberIDForCurrentTerm" path="AvailableNumberIDForCurrentTerm" type="string" alwaysRun="1">
                <definition>
                  <caption value="Available Number ID For Current Term" />
                </definition>
                <rules>
                  <default idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" />
                  <misc>
                    <if>
                      <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                      <then idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="LocationOutputNonShredded.PreviouslyAddedTransactionID" path="PreviouslyAddedTransactionID" type="string">
                <definition>
                  <caption value="Previously Added Transaction ID" />
                </definition>
                <rules>
                  <misc>
                    <if>
                      <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                      <then value="" />
                    </if>
                  </misc>
                </rules>
              </public>
              <public id="LocationOutputNonShredded.TransactionIDWhenRemoved" path="TransactionIDWhenRemoved" type="string">
                <definition>
                  <caption value="Location Output Non Shredded Transaction ID When Removed" />
                </definition>
                <rules>
                  <nonRating value="1" />
                  <misc>
                    <if>
                      <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                      <then value="" />
                    </if>
                  </misc>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="eq">
                              <operand idref="LocationOutputNonShredded.TransactionIDWhenRemoved" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                            <operand idref="LocationOutputNonShredded.Deleted" type="boolean" />
                          </comparison>
                          <comparison compare="ne">
                            <operand idref="LocationOutputNonShredded.PreviouslyAddedTransactionID" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="PolicyOutputNonShredded.CurrentTransactionID" />
                    </if>
                  </value>
                </rules>
              </public>
            </object>
            <public id="LocationOutput.TaxPremiumBusinessOwners" path="TaxPremiumBusinessOwners" type="float">
              <definition>
                <caption value="Tax Premium Business Owners" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="LocationOutput.TaxPremiumCommercialAuto" path="TaxPremiumCommercialAuto" type="float">
              <definition>
                <caption value="Tax Premium Commercial Auto" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="LocationOutput.TaxPremiumCrime" path="TaxPremiumCrime" type="float">
              <definition>
                <caption value="Tax Premium Crime" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="LocationOutput.TaxPremiumGeneralLiability" path="TaxPremiumGeneralLiability" type="float">
              <definition>
                <caption value="Tax Premium General Liability" />
                <maxLength idref="MaxLength.fValue" />
                <formatMask idref="FormatMask.Premium" />
              </definition>
            </public>
            <public id="LocationOutput.TaxPremiumInlandMarine" path="TaxPremiumInlandMarine" type="float">
              <definition>
                <caption value="Tax Premium Inland Marine" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="LocationOutput.TaxPremiumProperty" path="TaxPremiumProperty" type="float">
              <definition>
                <caption value="Tax Premium Property" />
                <maxLength idref="MaxLength.fValue" />
              </definition>
            </public>
            <public id="LocationOutput.LocationID" path="@id" type="string">
              <definition>
                <caption value="Location ID" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.ID" />
              </definition>
            </public>
            <public id="LocationOutput.StatCodeState" path="statCode[Type=&quot;State&quot;]/sValue" type="string" class="StatCode">
              <definition>
                <caption value="Stat Code State" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationInput.State" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then value="" />
                    <else>
                      <lookup>
                        <tableRef value="StatCodeStates" />
                        <fieldRef value="Value" />
                        <keyRef idref="LocationInput.State" type="string" name="State" />
                      </lookup>
                    </else>
                  </if>
                </value>
              </rules>
            </public>
            <public id="LocationOutput.TaxCodeCity" path="TaxCodeCity" type="string">
              <definition>
                <caption value="Tax Code City" />
                <maxLength idref="MaxLength.sValue" />
                <readOnly idref="True" />
                <applicable>
                  <comparison compare="ne">
                    <operand idref="LocationPrivateKYTax.TaxCodeLookup" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </applicable>
              </definition>
              <rules>
                <value idref="LocationPrivateKYTax.TaxCodeLookup" />
              </rules>
            </public>
            <public id="LocationOutput.TaxCodeCounty" path="TaxCodeCounty" type="string">
              <definition>
                <caption value="Tax Code County" />
                <maxLength idref="MaxLength.sValue" />
                <readOnly idref="True" />
                <applicable>
                  <comparison compare="ne">
                    <operand idref="LocationPrivateKYTax.TaxCodeLookup_County" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </applicable>
              </definition>
              <rules>
                <value idref="LocationPrivateKYTax.TaxCodeLookup_County" />
              </rules>
            </public>
            <public id="LocationOutput.TaxCityWrittenAmountBusinessOwners" path="TaxCityWrittenAmountBusinessOwners" type="float">
              <definition>
                <caption value="Tax City Written Amount BusinessOwners" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyWrittenAmountBusinessOwners" path="TaxCountyWrittenAmountBusinessOwners" type="float">
              <definition>
                <caption value="Tax County Written Amount BusinessOwners" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityWrittenAmountCommercialAuto" path="TaxCityWrittenAmountCommercialAuto" type="float">
              <definition>
                <caption value="Tax City Written Amount CommercialAuto" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyWrittenAmountCommercialAuto" path="TaxCountyWrittenAmountCommercialAuto" type="float">
              <definition>
                <caption value="Tax County Written Amount CommercialAuto" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityWrittenAmountCrime" path="TaxCityWrittenAmountCrime" type="float">
              <definition>
                <caption value="Tax City Written Amount Crime" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyWrittenAmountCrime" path="TaxCountyWrittenAmountCrime" type="float">
              <definition>
                <caption value="Tax County Written Amount Crime" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityWrittenAmountGeneralLiability" path="TaxCityWrittenAmountGeneralLiability" type="float">
              <definition>
                <caption value="Tax City Written Amount GeneralLiability" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyWrittenAmountGeneralLiability" path="TaxCountyWrittenAmountGeneralLiability" type="float">
              <definition>
                <caption value="Tax County Written Amount GeneralLiability" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityWrittenAmountInlandMarine" path="TaxCityWrittenAmountInlandMarine" type="float">
              <definition>
                <caption value="Tax City Written Amount InlandMarine" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyWrittenAmountInlandMarine" path="TaxCountyWrittenAmountInlandMarine" type="float">
              <definition>
                <caption value="Tax County Written Amount InlandMarine" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityWrittenAmountInlandMarineAAIS" path="TaxCityWrittenAmountInlandMarineAAIS" type="float">
              <definition>
                <caption value="Tax City Written Amount InlandMarineAAIS" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyWrittenAmountInlandMarineAAIS" path="TaxCountyWrittenAmountInlandMarineAAIS" type="float">
              <definition>
                <caption value="Tax County Written Amount InlandMarineAAIS" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityWrittenAmountProperty" path="TaxCityWrittenAmountProperty" type="float">
              <definition>
                <caption value="Tax City Written Amount Property" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyWrittenAmountProperty" path="TaxCountyWrittenAmountProperty" type="float">
              <definition>
                <caption value="Tax County Written Amount Property" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityChangeAmountBusinessOwners" path="TaxCityChangeAmountBusinessOwners" type="float">
              <definition>
                <caption value="Location Output Tax City Change Amount Business Owners" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityChangeAmountCommercialAuto" path="TaxCityChangeAmountCommercialAuto" type="float">
              <definition>
                <caption value="Location Output Tax City Change Amount Commercial Auto" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityChangeAmountCrime" path="TaxCityChangeAmountCrime" type="float">
              <definition>
                <caption value="Location Output Tax City Change Amount Crime" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityChangeAmountGeneralLiability" path="TaxCityChangeAmountGeneralLiability" type="float">
              <definition>
                <caption value="Location Output Tax City Change Amount General Liability" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityChangeAmountInlandMarine" path="TaxCityChangeAmountInlandMarine" type="float">
              <definition>
                <caption value="Location Output Tax City Change Amount Inland Marine" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityChangeAmountInlandMarineAAIS" path="TaxCityChangeAmountInlandMarineAAIS" type="float">
              <definition>
                <caption value="Location Output Tax City Change Amount Inland Marine AAIS" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCityChangeAmountProperty" path="TaxCityChangeAmountProperty" type="float">
              <definition>
                <caption value="Location Output Tax City Change Amount Property" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyChangeAmountBusinessOwners" path="TaxCountyChangeAmountBusinessOwners" type="float">
              <definition>
                <caption value="Location Output Tax County Change Amount Business Owners" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyChangeAmountCommercialAuto" path="TaxCountyChangeAmountCommercialAuto" type="float">
              <definition>
                <caption value="Location Output Tax County Change Amount Commercial Auto" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyChangeAmountCrime" path="TaxCountyChangeAmountCrime" type="float">
              <definition>
                <caption value="Location Output Tax County Change Amount Crime" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyChangeAmountGeneralLiability" path="TaxCountyChangeAmountGeneralLiability" type="float">
              <definition>
                <caption value="Location Output Tax County Change Amount General Liability" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyChangeAmountInlandMarine" path="TaxCountyChangeAmountInlandMarine" type="float">
              <definition>
                <caption value="Location Output Tax County Change Amount Inland Marine" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyChangeAmountInlandMarineAAIS" path="TaxCountyChangeAmountInlandMarineAAIS" type="float">
              <definition>
                <caption value="Location Output Tax County Change Amount Inland Marine AAIS" />
              </definition>
            </public>
            <public id="LocationOutput.TaxCountyChangeAmountProperty" path="TaxCountyChangeAmountProperty" type="float">
              <definition>
                <caption value="Location Output Tax County Change Amount Property" />
              </definition>
            </public>
          </object>
          <object id="Location_Geocode">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="Location_GeocodeOutput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="Location_GeocodeOutput.Confidence" path="Confidence" type="string">
                <definition>
                  <caption value="Confidence" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="Location_GeocodeOutput.GeocodeMatchCode" path="GeocodeMatchCode" type="string">
                <definition>
                  <caption value="Geocode Match Code" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="Location_GeocodeOutput.GeocodeStatus" type="string" path="GeocodeStatus">
                <rules>
                  <misc>
                    <if>
                      <condition>
                        <comparison compare="gt">
                          <operand idref="Location_GeocodeOutput.LastVerified" type="date" />
                          <operand idref="DateTime.CurrentDate30DaysPrior" />
                        </comparison>
                      </condition>
                      <then value="Verified" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="gt">
                            <operand idref="Location_GeocodeOutput.LastVerified" type="date" />
                            <operand idref="DateTime.Minimum" />
                          </comparison>
                          <comparison compare="le">
                            <operand idref="Location_GeocodeOutput.LastVerified" type="date" />
                            <operand idref="DateTime.CurrentDate30DaysPrior" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then value="Expired" />
                    </if>
                    <if>
                      <condition>
                        <comparison compare="le">
                          <operand idref="Location_GeocodeOutput.LastVerified" type="date" />
                          <operand idref="DateTime.Minimum" />
                        </comparison>
                      </condition>
                      <then value="Unverified" />
                    </if>
                  </misc>
                </rules>
                <definition>
                  <maxLength idref="MaxLength.sValue" />
                </definition>
              </public>
              <public id="Location_GeocodeOutput.LastVerified" path="LastVerified" type="date">
                <definition>
                  <caption value="Last Verified" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.DateTime" />
                </definition>
                <rules>
                  <default>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="and">
                                <comparison compare="and">
                                  <comparison compare="and">
                                    <comparison compare="eq">
                                      <operand idref="LocationOutputNonShredded.Number" type="int" />
                                      <operand type="int" value="1" />
                                    </comparison>
                                    <comparison compare="eq">
                                      <operand idref="Location_GeocodeOutputNonShredded.IsFirstLocationVerifiedFromAccount" type="boolean" />
                                      <operand idref="True" type="int" />
                                    </comparison>
                                  </comparison>
                                  <comparison compare="eq">
                                    <operand idref="LocationInput.Address1" type="string" />
                                    <operand idref="AccountInput.Address1" type="string" />
                                  </comparison>
                                </comparison>
                                <comparison compare="eq">
                                  <operand idref="LocationInput.Address2" type="string" />
                                  <operand idref="AccountInput.Address2" type="string" />
                                </comparison>
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="LocationInput.City" type="string" />
                                <operand idref="AccountInput.City" type="string" />
                              </comparison>
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LocationInput.State" type="string" />
                              <operand idref="AccountInput.State" type="string" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LocationInput.ZipCode" type="string" />
                            <operand idref="AccountInput.ZipCode" type="string" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="Account_GeocodeOutput.LastVerified" />
                    </if>
                  </default>
                </rules>
              </public>
              <public id="Location_GeocodeOutput.Latitude" path="Latitude" type="string">
                <definition>
                  <caption value="Latitude" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <default>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="and">
                                <comparison compare="and">
                                  <comparison compare="and">
                                    <comparison compare="eq">
                                      <operand idref="LocationOutputNonShredded.Number" type="int" />
                                      <operand type="int" value="1" />
                                    </comparison>
                                    <comparison compare="eq">
                                      <operand idref="Location_GeocodeOutputNonShredded.IsFirstLocationVerifiedFromAccount" type="boolean" />
                                      <operand idref="True" type="int" />
                                    </comparison>
                                  </comparison>
                                  <comparison compare="eq">
                                    <operand idref="LocationInput.Address1" type="string" />
                                    <operand idref="AccountInput.Address1" type="string" />
                                  </comparison>
                                </comparison>
                                <comparison compare="eq">
                                  <operand idref="LocationInput.Address2" type="string" />
                                  <operand idref="AccountInput.Address2" type="string" />
                                </comparison>
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="LocationInput.City" type="string" />
                                <operand idref="AccountInput.City" type="string" />
                              </comparison>
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LocationInput.State" type="string" />
                              <operand idref="AccountInput.State" type="string" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LocationInput.ZipCode" type="string" />
                            <operand idref="AccountInput.ZipCode" type="string" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="Account_GeocodeOutput.Latitude" />
                    </if>
                  </default>
                </rules>
              </public>
              <public id="Location_GeocodeOutput.Longitude" path="Longitude" type="string">
                <definition>
                  <caption value="Longitude" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <default>
                    <if>
                      <condition>
                        <comparison compare="and">
                          <comparison compare="and">
                            <comparison compare="and">
                              <comparison compare="and">
                                <comparison compare="and">
                                  <comparison compare="and">
                                    <comparison compare="eq">
                                      <operand idref="LocationOutputNonShredded.Number" type="int" />
                                      <operand type="int" value="1" />
                                    </comparison>
                                    <comparison compare="eq">
                                      <operand idref="Location_GeocodeOutputNonShredded.IsFirstLocationVerifiedFromAccount" type="boolean" />
                                      <operand idref="True" type="int" />
                                    </comparison>
                                  </comparison>
                                  <comparison compare="eq">
                                    <operand idref="LocationInput.Address1" type="string" />
                                    <operand idref="AccountInput.Address1" type="string" />
                                  </comparison>
                                </comparison>
                                <comparison compare="eq">
                                  <operand idref="LocationInput.Address2" type="string" />
                                  <operand idref="AccountInput.Address2" type="string" />
                                </comparison>
                              </comparison>
                              <comparison compare="eq">
                                <operand idref="LocationInput.City" type="string" />
                                <operand idref="AccountInput.City" type="string" />
                              </comparison>
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LocationInput.State" type="string" />
                              <operand idref="AccountInput.State" type="string" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LocationInput.ZipCode" type="string" />
                            <operand idref="AccountInput.ZipCode" type="string" />
                          </comparison>
                        </comparison>
                      </condition>
                      <then idref="Account_GeocodeOutput.Longitude" />
                    </if>
                  </default>
                </rules>
              </public>
              <object id="Location_GeocodeOutputNonShredded">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <public id="Location_GeocodeOutputNonShredded.AddressInVerifyState" path="AddressInVerifyState" type="boolean">
                  <definition>
                    <caption value="Address In Verify State" />
                  </definition>
                </public>
                <public id="Location_GeocodeOutputNonShredded.GeoCodeQuickDisplay" path="GeoCodeQuickDisplay" type="string">
                  <definition>
                    <caption value="Geo Code Quick Display" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="LocationGeocode.IsVerified" type="boolean" />
                            <operand type="int" value="0" />
                          </comparison>
                        </condition>
                        <then value="" />
                        <else>
                          <calculation>
                            <argument op="eq" type="string" value="Latitude:  " />
                            <argument op="add" idref="Location_GeocodeOutput.Latitude" type="string" />
                            <argument op="add" type="string" value="&#xD;&#xA;" />
                            <argument op="add" type="string" value="Longitude:  " />
                            <argument op="add" idref="Location_GeocodeOutput.Longitude" type="string" />
                            <argument op="add" type="string" value="&#xD;&#xA;" />
                            <argument op="add" idref="Location_GeocodePrivate.GeocodeStatusWithDate" type="string" />
                          </calculation>
                        </else>
                      </if>
                    </value>
                  </rules>
                </public>
                <public id="Location_GeocodeOutputNonShredded.GeocodeStatusDisplay" type="string" path="GeocodeStatusDisplay">
                  <rules>
                    <value>
                      <if>
                        <condition>
                          <comparison compare="eq">
                            <operand idref="Location_GeocodeOutput.GeocodeStatus" type="string" />
                            <operand type="string" value="Unverified" />
                          </comparison>
                        </condition>
                        <then idref="Location_GeocodeOutput.GeocodeStatus" />
                        <else idref="Location_GeocodePrivate.GeocodeStatusWithDate" />
                      </if>
                    </value>
                    <default value="Unverified" />
                  </rules>
                  <definition>
                    <readOnly idref="True" />
                    <caption value="" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
                <public id="Location_GeocodeOutputNonShredded.IsFirstLocationVerifiedFromAccount" path="IsFirstLocationVerifiedFromAccount" type="boolean">
                  <definition>
                    <caption value="Is First Location Verified From Account" />
                  </definition>
                  <rules>
                    <default idref="True" />
                  </rules>
                </public>
                <public id="Location_GeocodeOutputNonShredded.StateBeforeVerify" path="StateBeforeVerify" type="string">
                  <definition>
                    <caption value="State Before Verify" />
                    <maxLength idref="MaxLength.sValue" />
                  </definition>
                </public>
              </object>
            </object>
            <object id="Location_GeocodePrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="Location_GeocodePrivate.AddressReadOnly" caption="" type="boolean" path="AddressReadOnly">
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="Location_GeocodeOutputNonShredded.AddressInVerifyState" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="Location_GeocodePrivate.IsLocationInputLocked" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="Location_GeocodePrivate.AddressVerifiable" caption="" type="string" path="AddressVerifiable">
                <value>
                  <if>
                    <condition>
                      <comparison compare="or">
                        <comparison compare="or">
                          <comparison compare="or">
                            <comparison compare="eq">
                              <operand idref="LocationInput.Address1" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                            <comparison compare="eq">
                              <operand idref="LocationInput.City" type="string" />
                              <operand type="string" value="" />
                            </comparison>
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LocationInput.State" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LocationInput.ZipCode" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then value="Must enter Address 1, City, State &amp; Zip before address verification." />
                    <else value="" />
                  </if>
                </value>
                <affects>
                  <reference idref="Location_GeocodePrivate.SetStateBeforeVerify" effect="postEffect" />
                  <reference idref="Location_GeocodePrivate.GeocodeRq" effect="postEffect" />
                </affects>
              </private>
              <private id="Location_GeocodePrivate.ClearLastVerified" caption="" type="date" path="ClearLastVerified">
                <value value="" />
                <affects>
                  <reference idref="Location_GeocodePrivate.SetIsFirstLocationVerifiedFromAccountFalse" effect="postEffect" />
                  <reference idref="Location_GeocodeOutput.LastVerified" effect="setValue" />
                </affects>
              </private>
              <private id="Location_GeocodePrivate.Export" caption="" type="string" path="Export">
                <value>
                  <request verb="ManuScript.exportRq" get="/*" validRef="Location_GeocodePrivate.IsAddressVerifiable">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue idref="LocationOutput.LocationID" name="contextId" dataType="attribute" />
                      <nameValue value="PBBI Location Geocoding" name="mappingId" dataType="attribute" />
                      <nameValue value="geo" name="rootName" dataType="attribute" />
                      <nameValue value="_IntegrationData^pitneybowes" name="responseSessionPath" dataType="attribute" />
                      <nameValue value="descendant::GeocodeUS" name="responseSelect" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="Location_GeocodePrivate.GeocodeRq" type="string" caption="Search Rq" path="searchRq">
                <affects>
                  <reference idref="Location_GeocodePrivate.Export" effect="preEffect" />
                </affects>
                <value idref="PitneyBowesPrivate.GeocodeRq" />
              </private>
              <private id="Location_GeocodePrivate.GeocodeStatusWithDate" caption="" type="string" path="GeocodeStatusWithDate">
                <value>
                  <calculation>
                    <argument op="eq" idref="Location_GeocodeOutput.GeocodeStatus" type="string" />
                    <argument op="add" type="string" value=", " />
                    <argument op="add" idref="Location_GeocodeOutput.LastVerified" type="date" />
                  </calculation>
                </value>
              </private>
              <private id="Location_GeocodePrivate.IsLocationInputLocked" caption="" type="boolean" path="IsLocationInputLocked">
                <value idref="LocationGeocode.IsVerified" />
              </private>
              <private id="Location_GeocodePrivate.IsLocationInputNotLocked" caption="" type="boolean" path="IsLocationInputNotLocked">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationGeocode.IsVerified" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                    <else idref="True" />
                  </if>
                </value>
              </private>
              <private id="Location_GeocodePrivate.ManuscriptID" caption="" type="string">
                <value idref="PitneyBowesPrivate.ManuscriptID" />
              </private>
              <private id="Location_GeocodePrivate.SetLastVerifiedToToday" caption="" type="date" path="SetLastVerifiedToToday">
                <value idref="DateTime.CurrentDate" />
                <affects>
                  <reference idref="Location_GeocodeOutput.LastVerified" effect="setValue" />
                </affects>
              </private>
              <private id="Location_GeocodePrivate.ShowPBBIEditAddress" caption="" type="boolean" path="ShowPBBIEditAddress">
                <value>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LocationGeocode.IsVerified" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="LocationSchedulePage.IsReadOnly" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </value>
              </private>
              <private id="Location_GeocodePrivate.ShowPBBIVerifyAddress" caption="" type="boolean" path="ShowPBBIVerifyAddress">
                <value>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="Location_GeocodePrivate.IsLocationInputNotLocked" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LocationSchedulePage.IsReadOnly" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="Location_GeocodeOutputNonShredded.AddressInVerifyState" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </value>
              </private>
              <private id="Location_GeocodePrivate.ViewMapPreEvent" caption="" type="string" path="ViewMapPreEvent">
                <value>
                  <request verb="ManuScript.exportRq" get="@status">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="PBBI Location View Map" name="mappingId" dataType="attribute" />
                      <nameValue idref="LocationOutput.LocationID" name="contextId" dataType="attribute" />
                      <nameValue value="viewmap" name="rootName" dataType="attribute" />
                      <nameValue value="_Integration^data/pitneybowes/viewmap" name="responseSessionPath" dataType="attribute" />
                      <nameValue value="ManuScript.exportRs/viewmap/ViewMap" name="responseSelect" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="Location_GeocodePrivate.ViewMapPreEvent" type="string" />
                        <operand type="string" value="success" />
                      </comparison>
                    </condition>
                    <then value="" />
                  </if>
                </misc>
              </private>
              <private id="Location_GeocodePrivate.SetIsFirstLocationVerifiedFromAccountFalse" caption="" type="boolean">
                <value idref="False" />
                <affects>
                  <reference idref="Location_GeocodeOutputNonShredded.IsFirstLocationVerifiedFromAccount" effect="setValue" />
                </affects>
              </private>
              <private id="Location_GeocodePrivate.SetStateBeforeVerify" caption="" type="string" path="SetLastVerifiedToToday">
                <value idref="LocationInput.State" />
                <affects>
                  <reference idref="Location_GeocodeOutputNonShredded.StateBeforeVerify" effect="setValue" />
                </affects>
              </private>
              <private id="Location_GeocodePrivate.SetLastVerifiedToTodayCheck" caption="" type="date" path="SetLastVerifiedToToday" alwaysRun="1">
                <value>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="LocationPrivate.IsLocationUsedOnRisk" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="Location_GeocodeOutputNonShredded.StateBeforeVerify" type="string" />
                          <operand idref="LocationInput.State" type="string" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="Location_GeocodePrivate.SetStateAfterVerify" />
                    <else idref="Location_GeocodePrivate.SetLastVerifiedToToday" />
                  </if>
                </value>
              </private>
              <private id="Location_GeocodePrivate.SetStateAfterVerify" caption="" type="string" path="SetLastVerifiedToToday">
                <value idref="Location_GeocodeOutputNonShredded.StateBeforeVerify" />
                <affects>
                  <reference idref="LocationInput.State" effect="setValue" />
                  <reference idref="Account_GeocodePrivate.ClearLastVerified" effect="postEffect" />
                </affects>
              </private>
              <private id="Location_GeocodePrivate.IsAddressVerifiable" caption="" type="string" path="AddressVerifiable">
                <value>
                  <comparison compare="eq">
                    <operand idref="Location_GeocodePrivate.AddressVerifiable" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </value>
              </private>
            </object>
            <object id="Location_InteractiveMap">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="Location_InteractiveMap.JavaScriptMapInit" caption="" type="string" path="JavaScriptMapInit">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="DCT.Integration.PBBI.RIA.mapInit('LocationMap', 'LocationInteractiveMap.FileLocation', '" />
                    <argument op="add" idref="LocationOutput.LocationID" type="string" />
                    <argument op="add" type="string" value="','" />
                    <argument op="add" idref="Location_GeocodePrivate.ManuscriptID" type="string" />
                    <argument op="add" type="string" value="');" />
                  </calculation>
                </value>
              </private>
              <private id="Location_InteractiveMap.ShowPBBIInteractiveMapLink" caption="" type="boolean" path="ShowPBBIInteractiveMapLink">
                <value>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="Location_GeocodePrivate.IsLocationInputLocked" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PitneyBowesOutput.InteractiveMapEnabled" type="string" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="LocationSchedulePage.IsReadOnly" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="Context.IsConsumer" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </value>
              </private>
            </object>
            <object id="LocationGeocode">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LocationGeocode.IsVerified" type="boolean" path="IsVerified">
                <value>
                  <comparison compare="eq">
                    <operand idref="Location_GeocodeOutput.GeocodeStatus" type="string" />
                    <operand type="string" value="Verified" />
                  </comparison>
                </value>
              </private>
            </object>
          </object>
        </object>
        <object id="AccountPrivate" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="LocationGroup">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="LocationGroup.Count" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Location" />
              </value>
            </private>
            <private id="LocationGroup.DefaultID" type="string">
              <value>
                <iterator type="string" scope="first" action="max" idref="Location">
                  <reference idref="LocationOutput.LocationID" type="string" />
                </iterator>
              </value>
            </private>
            <private id="LocationGroup.LastID" type="string">
              <value>
                <iterator type="string" scope="last" action="max" idref="Location">
                  <reference idref="LocationOutput.LocationID" type="string" />
                </iterator>
              </value>
            </private>
          </object>
          <object id="BuildingGroup">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="BuildingGroup.Count" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Building" />
              </value>
            </private>
            <private id="BuildingGroup.DefaultID" type="string">
              <value>
                <iterator type="string" scope="first" action="max" idref="Building">
                  <reference idref="BuildingOutput.BuildingID" type="string" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="LocationSelectInput.LocationID" type="string" />
                      <operand idref="BuildingInput.BuildingLocationID" type="string" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <private id="BuildingGroup.IsRequired" type="boolean">
              <value>
                <comparison idref="PolicyPrivate.IsCommercialPropertySelected" type="boolean" />
              </value>
            </private>
            <private id="BuildingGroup.RequiredCount" type="int">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingGroup.IsRequired" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then value="1" />
                  <else value="0" />
                </if>
              </value>
            </private>
            <private id="BuildingGroup.AddRec" type="string">
              <value>
                <request verb="ManuScript.addObjectRecordRq" get="@status">
                  <default value="" />
                  <nameValues>
                    <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="Building" name="objectID" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="BuildingGroup.AddRecord" type="string" comment="" caption="Building Group Add Record">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingGroup.Count" type="int" />
                      <operand type="int" value="0" />
                    </comparison>
                  </condition>
                  <then idref="BuildingGroup.AddRec" />
                  <else value="" />
                </if>
              </value>
            </private>
            <private id="BuildingGroup.DetailPage" type="string">
              <value value="BuildingDetail" />
            </private>
            <private id="BuildingGroup.SchedulePage" type="string">
              <value value="BuildingSchedule" />
            </private>
            <private id="BuildingGroup.WhichPage" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="le">
                      <operand idref="BuildingGroup.Count" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </condition>
                  <then idref="BuildingGroup.DetailPage" />
                  <else idref="BuildingGroup.SchedulePage" />
                </if>
              </value>
            </private>
            <private id="BuildingGroup.IsAnyBuilding" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="BuildingGroup.Count" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="BuildingGroup.CountCurrentLocation" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Building">
                  <where idref="BuildingPrivate.LocationIsSelected" />
                </iterator>
              </value>
            </private>
          </object>
          <object id="BusinessGroup">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="BusinessGroup.IsRequired" type="boolean">
              <value idref="True" />
            </private>
            <private id="BusinessGroup.RequiredCount" type="int">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BusinessGroup.IsRequired" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then value="1" />
                  <else value="0" />
                </if>
              </value>
            </private>
          </object>
          <object id="AOIGroup" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
          </object>
          <object id="LocationToOtherInterestGroup">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="LocationToOtherInterestGroup.Count" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="LocationToOtherInterest" />
              </value>
            </private>
            <private id="LocationToOtherInterestGroup.DefaultID" type="string" />
            <private id="LocationToOtherInterestGroup.IsRequired" type="boolean">
              <value idref="True" />
            </private>
            <private id="LocationToOtherInterestGroup.RequiredCount" type="int">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="LocationToOtherInterestGroup.IsRequired" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then value="1" />
                  <else value="0" />
                </if>
              </value>
            </private>
          </object>
          <private id="AccountPrivate.ClearInLocationEditMode" caption="" type="boolean" alwaysRun="1">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="Location">
                <reference idref="LocationPrivate.ClearLocationAddMode" type="boolean" />
                <reference idref="LocationPrivate.ClearLocationEditMode" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.SetLastLocationInLocationEditMode" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="last" action="sum" idref="Location">
                <reference idref="LocationPrivate.SetLocationAddMode" type="boolean" />
                <reference idref="LocationPrivate.SetLocationEditMode" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.ClearInCovMiscEditMode" caption="" type="boolean" alwaysRun="1">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="CovMiscellaneous">
                <reference idref="CovMiscellaneousPrivate.ClearLocationAddMode" type="boolean" />
                <reference idref="CovMiscellaneousPrivate.ClearLocationEditMode" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.SetLastCovMiscInLocationEditMode" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="last" action="sum" idref="CovMiscellaneous">
                <reference idref="CovMiscellaneousPrivate.SetCovMiscAddMode" type="boolean" />
                <reference idref="CovMiscellaneousPrivate.SetCovMiscEditMode" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.SetLastAOIEditMode" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="last" action="sum" idref="AdditionalOtherInterest">
                <reference idref="AdditionalOtherInterestPrivate.SetAOIAddMode" type="boolean" />
                <reference idref="AdditionalOtherInterestPrivate.SetAOIEditMode" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.ClearInAOIEditMode" caption="" type="boolean" alwaysRun="1">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="AdditionalOtherInterest">
                <reference idref="AdditionalOtherInterestPrivate.ClearAOIAddMode" type="boolean" />
                <reference idref="AdditionalOtherInterestPrivate.ClearAOIEditMode" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AnyLocationsInEditMode" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="count" idref="Location">
                <where idref="LocationOutputNonShredded.InLocationEditMode" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AnyInCovMiscEditMode" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="count" idref="CovMiscellaneous">
                <where idref="CovMiscellaneousOutputNonShredded.InCovMiscEditMode" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AnyInAOIEditMode" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="count" idref="AdditionalOtherInterest">
                <where idref="AdditionalOtherInterestOutputNonShredded.InAOIEditMode" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AllowAOIAdd" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.AnyInAOIEditMode" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AllowLocationAdd" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.AnyLocationsInEditMode" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AllowCovMiscAdd" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.AnyInCovMiscEditMode" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AllowAOIEdit" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.AnyInAOIEditMode" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AllowCovMiscEdit" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.AnyInCovMiscEditMode" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AllowLocationEdit" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.AnyLocationsInEditMode" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <object id="OccupancyGroup">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="OccupancyGroup.Count" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Occupancy" />
              </value>
            </private>
            <private id="OccupancyGroup.IsRequired" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="PolicyInput.LineOfBusiness" type="string" />
                  <operand idref="PropertyLinePrivate.LOBCode" type="string" />
                </comparison>
              </value>
            </private>
          </object>
          <private id="AccountPrivate.IsAnyLocationCA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="CA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationIL" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="IL" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMD" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="MD" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationGA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="GA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNC" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="NC" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationLA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="LA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="WA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationVT" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="VT" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationOK" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="OK" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="MA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationAK" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="AK" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationAL" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="AL" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationAR" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="AR" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationAZ" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="AZ" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationCO" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="CO" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationCT" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="CT" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationDC" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="DC" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationDE" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="DE" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationFL" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="FL" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationHI" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="HI" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationIA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="IA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationID" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="ID" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationIN" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="IN" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationKS" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="KS" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationKY" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="KY" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationME" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="ME" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMI" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="MI" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMN" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="MN" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMO" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="MO" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMS" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="MS" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMT" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="MT" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationND" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="ND" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNE" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="NE" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNH" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="NH" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNJ" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="NJ" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNM" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="NM" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNV" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="NV" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNY" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="NY" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationOH" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="OH" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationOR" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="OR" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationPA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="PA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationRI" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="RI" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationSC" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="SC" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationSD" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="SD" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationTN" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="TN" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationTX" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="TX" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationUT" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="UT" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationVA" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="VA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWI" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="WI" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWV" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="WV" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWY" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocations" type="string" />
                <operand type="string" value="WY" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AddAOICaption" caption="" type="string">
            <value value="Add Additional Interest" />
          </private>
          <private id="AccountPrivate.IsAnyLocationAKXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='AK']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationALXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='AL']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationARXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='AR']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationAZXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='AZ']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationCAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='CA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationCOXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='CO']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationCTXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='CT']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationDCXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='DC']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationDEXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='DE']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationFLXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='FL']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationGAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='GA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationHIXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='HI']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationIAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='IA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationIDXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='ID']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationILXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='IL']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationINXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='IN']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationKSXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='KS']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationKYXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='KY']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationLAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='LA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='MA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMDXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='MD']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMEXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='ME']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMIXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='MI']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMNXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='MN']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMOXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='MO']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMSXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='MS']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMTXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='MT']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNCXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='NC']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNDXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='ND']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNEXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='NE']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNHXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='NH']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNJXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='NJ']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNMXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='NM']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNVXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='NV']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNYXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='NY']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationOHXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='OH']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationOKXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='OK']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationORXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='OR']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationPAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='PA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationRIXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='RI']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationSCXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='SC']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationSDXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='SD']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationTNXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='TN']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationTXXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='TX']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationUTXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='UT']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationVAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='VA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationVTXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='VT']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWAXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='WA']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWIXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='WI']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWVXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='WV']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWYXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="location[address[State='WY']]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.DeleteObjectRecord" caption="" type="string">
            <value>
              <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                  <nameValue value="Account" name="objectID" dataType="attribute" />
                  <nameValue idref="AccountPrivate.ContextPath" name="context" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="AccountPrivate.ContextPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//*[@id='" />
                <argument op="add" idref="AccountInput.ID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.AllLocations" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Location">
                <reference idref="LocationInput.State" type="string" />
                <reference idref="AccountPrivate.Comma" type="string" />
                <where>
                  <comparison compare="eq">
                    <operand idref="LocationPrivate.IsExcludedLocationCurrentLine" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </where>
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.Comma" caption="" type="string">
            <value value="," />
          </private>
          <private id="AccountPrivate.ClearInBuildingEditMode" caption="" type="boolean" alwaysRun="1">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="Building">
                <reference idref="BuildingPrivate.ClearAddMode" type="boolean" />
                <reference idref="BuildingPrivate.ClearEditMode" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AllowBuildingEdit" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="AccountPrivate.AnyBuildingsInEditMode" type="int" />
                  <operand type="int" value="0" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AnyBuildingsInEditMode" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="count" idref="Building">
                <customQuery idref="AccountPrivate.BuildingEditModeXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.BuildingEditModeXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="building[InEditMode='" />
                <argument op="add" idref="True" type="int" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.AllowBuildingAdd" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="AccountPrivate.AnyBuildingsInEditMode" type="int" />
                  <operand type="int" value="0" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.ShowEntityOtherType" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountInput.EntityType" type="string" />
                <operand type="string" value="Other" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.LocationCount" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="count" idref="Location" />
            </value>
          </private>
          <private id="AccountPrivate.HideShowAllLocations" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.LocationCount" type="int" />
                <operand type="int" value="1" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.ShowLocationAdd" caption="" type="boolean">
            <misc>
              <if>
                <condition idref="PolicyAdminPrivate.IsLocked" />
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
            <value idref="True" />
          </private>
          <private id="AccountPrivate.ShowAdditionalOtherInterestAdd" caption="" type="boolean">
            <misc>
              <if>
                <condition idref="PolicyAdminPrivate.IsLocked" />
                <then idref="False" />
              </if>
              <if>
                <condition idref="PolicyPrivate.IsInAudit" />
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
            <value idref="True" />
          </private>
          <private id="AccountPrivate.BuildingNumberXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//building[BuildingLocationID='" />
                <argument op="add" idref="LocationSelectInput.LocationID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.BuildingNumber" caption="" type="int">
            <value>
              <iterator type="int" scope="all" action="count" idref="Building">
                <customQuery idref="AccountPrivate.BuildingNumberXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddNeededBuildingNumberRecords" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Location">
                <reference idref="LocationPrivate.AddBuildingNumberObjectIfNeeded" type="string" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.InitializeNextAvailableBuildingNumber" caption="" type="string" alwaysRun="1">
            <value>
              <iterator type="string" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                <reference idref="AvailableBuildingNumberPrivate.InitializeNextAvailableBuildingNumber" type="int" />
                <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.InitializeNextAvailableBuildingNumberCurrentLocation" caption="" type="int" alwaysRun="1">
            <value>
              <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                <reference idref="AvailableBuildingNumberPrivate.InitializeNextAvailableBuildingNumberCurrentLocation" type="int" />
                <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.InitializeNextAvailableBuildingNumberCurrentLocMidTerm" caption="" type="int" alwaysRun="1">
            <value>
              <iterator type="int" scope="all" action="sum" idref="AvailableNumbersPerTerm">
                <reference idref="AvailableBuildingNumberPrivate.InitializeNextAvailableBuildingNumberCurrentLocMidTerm" type="int" />
                <customQuery idref="PolicyPrivate.AvailableNumbersForCurrentTermXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.SetAllBuildingNumbersLocked" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="Building">
                <reference idref="BuildingPrivate.SetBuildingNumberLocked" type="boolean" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.ClearAllBuildingNumbersLocked" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="all" action="sum" idref="Building">
                <reference idref="BuildingPrivate.ClearBuildingNumberLocked" type="boolean" />
                <customQuery value="building[BuildingNumberLocked='1']" />
              </iterator>
            </value>
          </private>
          <public id="AccountPrivate.CurrentBuildingNumberID" path="CurrentBuildingNumberID" type="string">
            <definition>
              <caption value="Current Building ID" />
            </definition>
          </public>
          <public id="AccountPrivate.CurrentLocationNumberID" path="CurrentLocationNumberID" type="string" comment="These need to stay in the account group or else they are losing context">
            <definition>
              <caption value="Current Location ID" />
            </definition>
          </public>
          <private id="AccountPrivate.IsAnyAdditionalNamedInsured" caption="" type="boolean">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="AdditionalNamedInsured" />
            </value>
          </private>
          <private id="AccountPrivate.AddressReadOnly" caption="" type="boolean" path="AddressReadOnly">
            <misc>
              <if>
                <condition idref="PitneyBowesOutput.GeocodingEnabled" />
                <then idref="Account_GeocodePrivate.AddressReadOnly" />
              </if>
            </misc>
          </private>
          <private id="AccountPrivate.AnyLocationUnverified" caption="" type="boolean" path="AnyLocationUnverified">
            <value>
              <iterator type="boolean" scope="first" action="count" idref="Location">
                <where>
                  <comparison compare="eq">
                    <operand idref="LocationGeocode.IsVerified" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </where>
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.LocationScheduleSearchClear" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="AccountOutputNonShredded.LocationScheduleSearch" effect="setValue" />
            </affects>
          </private>
          <private id="AccountPrivate.PartyTypeCode" caption="" type="string">
            <value value="O" />
          </private>
          <private id="AccountPrivate.AllLocationsIncludeDeleted" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" includeDeleted="1" idref="Location">
                <reference idref="LocationInput.State" type="string" />
                <reference idref="AccountPrivate.Comma" type="string" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationCAIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="CA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationCOIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="CO" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationFLIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="FL" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationKYIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="KY" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationLAIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="LA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMEIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="ME" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMIIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="MI" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationMNIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="MN" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNJIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="NJ" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNYIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="NY" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationTXIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="TX" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWAIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="WA" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationWVIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="WV" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.DeleteAddedCurrentTransactionTransform" caption="" type="string">
            <value>
              <request verb="CustomServer.processRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="" name="dataRequests" dataType="element">
                    <nameValue value="" name="Session.getDocumentRq" dataType="element" />
                  </nameValue>
                  <nameValue value="" name="customData" dataType="element" />
                  <nameValue value="" name="xsltRequests" dataType="element">
                    <nameValue value="http://www.w3.org/1999/XSL/Transform" name="xmlns:xsl" dataType="attribute" />
                    <nameValue value="" name="xsl:for-each" dataType="element">
                      <nameValue idref="AccountPrivate.DeleteAddedCurrentTransactionTransformPath" name="select" dataType="attribute" />
                      <nameValue value="" name="Session.removeElementRq" dataType="element">
                        <nameValue value="//*[@id='{@id}']" name="path" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="AccountPrivate.DeleteAddedCurrentTransactionTransformPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="data/Session.getDocumentRs//*[(TransactionIDWhenAdded='" />
                <argument op="add" idref="PolicyOutputNonShredded.CurrentTransactionID" type="string" />
                <argument op="add" type="string" value="') and (@deleted='1')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.HideDeleteColumn" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AccountPrivate.HideMarkForDeleteColumn" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.HideMarkForDeleteColumn" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <operand idref="Rules.PolicyIsQuote" type="float" />
                <operand idref="Rules.PolicyIsInApplication" type="float" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AddLocationCurrentTransactionIDOnRenew" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Location">
                <reference idref="LocationOutputNonShredded.TransactionIDWhenAdded" type="string" />
                <customQuery idref="AccountPrivate.AddLocationCurrentTransactionIDOnRenewXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddLocationCurrentTransactionIDOnRenewXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="/session/data[policy/LastTransactionType='Renew']/account/location[not(TransactionIDWhenAdded) or (TransactionIDWhenAdded = '')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.AddBuildingCurrentTransactionIDOnRenew" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Building">
                <reference idref="BuildingOutputNonShredded.TransactionIDWhenAdded" type="string" />
                <customQuery idref="AccountPrivate.AddBuildingCurrentTransactionIDOnRenewXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddBuildingCurrentTransactionIDOnRenewXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="/session/data[policy/LastTransactionType='Renew']/account/building[not(TransactionIDWhenAdded) or (TransactionIDWhenAdded = '')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.AddCovMiscellaneousCurrentTransactionIDOnRenew" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="CovMiscellaneous">
                <reference idref="CovMiscellaneousOutputNonShredded.TransactionIDWhenAdded" type="string" />
                <customQuery idref="AccountPrivate.AddCovMiscellaneousCurrentTransactionIDOnRenewXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddCovMiscellaneousCurrentTransactionIDOnRenewXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="/session/data/policy[LastTransactionType='Renew']/line/coverage[Type='Miscellaneous'][not(TransactionIDWhenAdded) or (TransactionIDWhenAdded = '')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.AddAdditionalOtherInterestCurrentTransactionIDOnRenew" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="AdditionalOtherInterest">
                <reference idref="AdditionalOtherInterestOutputNonShredded.TransactionIDWhenAdded" type="string" />
                <customQuery idref="AccountPrivate.AddAdditionalOtherInterestCurrentTransactionIDOnRenewXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddAdditionalOtherInterestCurrentTransactionIDOnRenewXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="/session/data[policy/LastTransactionType='Renew']/account/additionalOtherInterest[not(TransactionIDWhenAdded) or (TransactionIDWhenAdded = '')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.AddAdditionalInterestsCurrentTransactionIDOnRenew" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="AdditionalInterests">
                <reference idref="AdditionalInterestsOutputNonShredded.TransactionIDWhenAdded" type="string" />
                <customQuery idref="AccountPrivate.AddAdditionalInterestsCurrentTransactionIDOnRenewXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddAdditionalInterestsCurrentTransactionIDOnRenewXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="/session/data/policy[LastTransactionType='Renew']/line/coverage[Type='AdditionalInterests'][not(TransactionIDWhenAdded) or (TransactionIDWhenAdded = '')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.AddRiskCurrentTransactionIDOnRenew" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Risk">
                <reference idref="RiskOutputNonShredded.TransactionIDWhenAdded" type="string" />
                <customQuery idref="AccountPrivate.AddRiskCurrentTransactionIDOnRenewXPath" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddRiskCurrentTransactionIDOnRenewXPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="/session/data/policy[LastTransactionType='Renew']/line/risk[not(TransactionIDWhenAdded) or (TransactionIDWhenAdded = '')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationAZIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="AZ" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.IsAnyLocationNCIncludeDeleted" caption="" type="boolean">
            <value>
              <comparison compare="contains">
                <operand idref="AccountPrivate.AllLocationsIncludeDeleted" type="string" />
                <operand type="string" value="NC" />
              </comparison>
            </value>
          </private>
          <private id="AccountPrivate.AddLocationCurrentTransactionIDOnNew" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" idref="Location">
                <reference idref="LocationOutputNonShredded.TransactionIDWhenAdded" type="string" />
              </iterator>
            </value>
          </private>
          <private id="AccountPrivate.AddLocationCurrentTransactionIDOnNewCheck" caption="" type="string">
            <value>
              <if>
                <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                <then idref="AccountPrivate.AddLocationCurrentTransactionIDOnNew" />
              </if>
            </value>
          </private>
          <private id="AccountPrivate.SetAllBuildingNumbersLockedRewrite" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsCurrentTransactionRewrite" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsCurrentTransactionRestart" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="AccountPrivate.SetAllBuildingNumbersLocked" />
              </if>
            </value>
          </private>
          <private id="AccountPrivate.DeleteAddedCurrentTransactionTransformOOS" caption="" type="string">
            <value>
              <request verb="CustomServer.processRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="" name="dataRequests" dataType="element">
                    <nameValue value="" name="Session.getDocumentRq" dataType="element" />
                  </nameValue>
                  <nameValue value="" name="customData" dataType="element" />
                  <nameValue value="" name="xsltRequests" dataType="element">
                    <nameValue value="http://www.w3.org/1999/XSL/Transform" name="xmlns:xsl" dataType="attribute" />
                    <nameValue value="" name="xsl:for-each" dataType="element">
                      <nameValue idref="AccountPrivate.DeleteAddedCurrentTransactionTransformOOSPath" name="select" dataType="attribute" />
                      <nameValue value="" name="Session.removeElementRq" dataType="element">
                        <nameValue value="//*[@id='{@id}']" name="path" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="AccountPrivate.DeleteAddedCurrentTransactionTransformOOSPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="data/Session.getDocumentRs//*[(TransactionIDWhenAdded='" />
                <argument op="add" idref="_processingData.CurrentOSTransactionID" type="string" />
                <argument op="add" type="string" value="') and (@deleted='1')]" />
              </calculation>
            </value>
          </private>
          <private id="AccountPrivate.DeleteAssociatedGroupTransformOOS" caption="" type="string" comment="Request that searches for elements that are associated with instances of Locations or Buildings that have been marked for delete. If the associated item is not already set to deleted then it will be marked for delete  Also checks for orphaned items and will delete those objects if the associated Location or Building no longer exists. This only pertains to OOS transactions.&#xD;&#xA;The &quot;TempGroup&quot; referenced in the deleteObjectRecordRq is a generic placeholder for the Object to be deleted.  The Context value within the request will be controlling which object is actually being deleted.">
            <value>
              <request verb="CustomServer.processRq" get="@status" validRef="OSEventData.inOutOfSequence">
                <responsePath value="" />
                <onFailure idref="GlobalOutput.Spacer" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="" name="dataRequests" dataType="element">
                    <nameValue value="" name="Session.getDocumentRq" dataType="element">
                      <nameValue value="" name="xsltOut" dataType="element">
                        <nameValue value="" name="xsl:stylesheet" dataType="element">
                          <nameValue value="1.0" name="version" dataType="attribute" />
                          <nameValue value="http://www.w3.org/1999/XSL/Transform" name="xmlns:xsl" dataType="attribute" />
                          <nameValue value="" name="xsl:key" dataType="element">
                            <nameValue value="Locations" name="name" dataType="attribute" />
                            <nameValue value="location" name="match" dataType="attribute" />
                            <nameValue value="@id" name="use" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:key" dataType="element">
                            <nameValue value="Buildings" name="name" dataType="attribute" />
                            <nameValue value="building" name="match" dataType="attribute" />
                            <nameValue value="@id" name="use" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:key" dataType="element">
                            <nameValue value="ElementWithLocationID" name="name" dataType="attribute" />
                            <nameValue value="*[LocationID][not(@deleted='1')][LocationID != '']" name="match" dataType="attribute" />
                            <nameValue value="'all'" name="use" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:key" dataType="element">
                            <nameValue value="ElementWithBuildingLocationID" name="name" dataType="attribute" />
                            <nameValue value="*[BuildingLocationID][not(@deleted='1')][BuildingLocationID != '']" name="match" dataType="attribute" />
                            <nameValue value="'all'" name="use" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:key" dataType="element">
                            <nameValue value="ElementWithBuildingID" name="name" dataType="attribute" />
                            <nameValue value="*[BuildingID][not(@deleted='1')][BuildingID != '']" name="match" dataType="attribute" />
                            <nameValue value="'all'" name="use" dataType="attribute" />
                          </nameValue>
                          <nameValue value="" name="xsl:template" dataType="element">
                            <nameValue value="/" name="match" dataType="attribute" />
                            <nameValue value="" name="Session.getDocumentRs" dataType="element">
                              <nameValue value="success" name="status" dataType="attribute" />
                              <nameValue value="" name="session" dataType="element">
                                <nameValue value="" name="xsl:apply-templates" dataType="element">
                                  <nameValue value="key('ElementWithLocationID','all')[key('Locations',LocationID)/@deleted = 1]" name="select" dataType="attribute" />
                                  <nameValue value="markForDelete" name="mode" dataType="attribute" />
                                </nameValue>
                                <nameValue value="" name="xsl:apply-templates" dataType="element">
                                  <nameValue value="key('ElementWithBuildingLocationID','all')[key('Locations',BuildingLocationID)/@deleted = 1]" name="select" dataType="attribute" />
                                  <nameValue value="markForDelete" name="mode" dataType="attribute" />
                                </nameValue>
                                <nameValue value="" name="xsl:apply-templates" dataType="element">
                                  <nameValue value="key('ElementWithBuildingID','all')[key('Buildings',BuildingID)/@deleted = 1]" name="select" dataType="attribute" />
                                  <nameValue value="markForDelete" name="mode" dataType="attribute" />
                                </nameValue>
                                <nameValue value="" name="xsl:apply-templates" dataType="element">
                                  <nameValue value="key('ElementWithLocationID','all')[not(key('Locations',LocationID))]" name="select" dataType="attribute" />
                                  <nameValue value="removeElement" name="mode" dataType="attribute" />
                                </nameValue>
                                <nameValue value="" name="xsl:apply-templates" dataType="element">
                                  <nameValue value="key('ElementWithBuildingLocationID','all')[not(key('Locations',BuildingLocationID))]" name="select" dataType="attribute" />
                                  <nameValue value="removeElement" name="mode" dataType="attribute" />
                                </nameValue>
                                <nameValue value="" name="xsl:apply-templates" dataType="element">
                                  <nameValue value="key('ElementWithBuildingID','all')[not(key('Buildings',BuildingID))]" name="select" dataType="attribute" />
                                  <nameValue value="removeElement" name="mode" dataType="attribute" />
                                </nameValue>
                              </nameValue>
                            </nameValue>
                          </nameValue>
                          <nameValue value="" name="xsl:template" dataType="element">
                            <nameValue value="*" name="match" dataType="attribute" />
                            <nameValue value="markForDelete" name="mode" dataType="attribute" />
                            <nameValue value="" name="MarkForDelete" dataType="element">
                              <nameValue value="" name="xsl:apply-templates" dataType="element">
                                <nameValue value="node()|@*" name="select" dataType="attribute" />
                                <nameValue value="GrabAllChildren" name="mode" dataType="attribute" />
                              </nameValue>
                            </nameValue>
                          </nameValue>
                          <nameValue value="" name="xsl:template" dataType="element">
                            <nameValue value="*" name="match" dataType="attribute" />
                            <nameValue value="removeElement" name="mode" dataType="attribute" />
                            <nameValue value="" name="RemoveElement" dataType="element">
                              <nameValue value="" name="xsl:apply-templates" dataType="element">
                                <nameValue value="node()|@*" name="select" dataType="attribute" />
                                <nameValue value="GrabAllChildren" name="mode" dataType="attribute" />
                              </nameValue>
                            </nameValue>
                          </nameValue>
                          <nameValue value="" name="xsl:template" dataType="element">
                            <nameValue value="node()|@*" name="match" dataType="attribute" />
                            <nameValue value="GrabAllChildren" name="mode" dataType="attribute" />
                            <nameValue value="" name="xsl:copy-of" dataType="element">
                              <nameValue value="." name="select" dataType="attribute" />
                            </nameValue>
                          </nameValue>
                        </nameValue>
                      </nameValue>
                    </nameValue>
                  </nameValue>
                  <nameValue value="" name="customData" dataType="element" />
                  <nameValue value="" name="xsltRequests" dataType="element">
                    <nameValue value="http://www.w3.org/1999/XSL/Transform" name="xmlns:xsl" dataType="attribute" />
                    <nameValue value="" name="xsl:for-each" dataType="element">
                      <nameValue value="data/Session.getDocumentRs[1]/session/MarkForDelete" name="select" dataType="attribute" />
                      <nameValue value="" name="Session.markForDeleteRq" dataType="element">
                        <nameValue value="//*[@id = '{@id}']" name="path" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                    <nameValue value="" name="xsl:for-each" dataType="element">
                      <nameValue value="data/Session.getDocumentRs[1]/session/RemoveElement" name="select" dataType="attribute" />
                      <nameValue value="" name="ManuScript.deleteObjectRecordRq" dataType="element">
                        <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                        <nameValue value="TempGroup" name="objectID" dataType="attribute" />
                        <nameValue value="//*[@id = '{@id}']" name="context" dataType="attribute" />
                      </nameValue>
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="AccountPrivate.LocationPreviouslyAddedTransactionIDSetup" caption="" type="string">
            <value>
              <iterator type="string" scope="all" action="sum" includeDeleted="1" idref="Location">
                <reference idref="LocationPrivate.SetPreviouslyAddedTransactionID" type="string" />
              </iterator>
            </value>
          </private>
        </object>
        <object id="AccountInput" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="AccountInput.EntityType" path="EntityType" type="string">
            <definition>
              <caption value="Entity Type" />
              <options>
                <option value="AssociationLaborUnionReligiousOrganization" caption="Association, Labor Union, Religious Organization" />
                <option value="CommonOwnership" caption="Common Ownership" />
                <option value="Corporation" caption="Corporation" />
                <option value="ExecutororTrustee" caption="Executor or Trustee" />
                <option value="PublicProperty" caption="Governmental Entity/Public Property" />
                <option value="SoleProprietor" caption="Individual/Sole Proprietor" />
                <option value="JointEmployers" caption="Joint Employers" />
                <option value="JointVenture" caption="Joint Venture" />
                <option value="LimitedLiabilityPartnership" caption="Limited Liability Partnership" />
                <option value="LimitedPartnership" caption="Limited Partnership" />
                <option value="LLC" caption="LLC" />
                <option value="MultipleStatus" caption="Multiple Status" />
                <option value="Partnership" caption="Partnership" />
                <option value="Trust" caption="Trust or Estate" />
                <option value="Other" caption="Other" />
              </options>
              <formatMask idref="FormatMask.BlankOption" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
            <corrections>
              <correction operation="bestMatch" condition="incorrect" laxity="high" message="Original Value #{uncorrected} was changed to match an item in the list with #{corrected}." />
            </corrections>
          </public>
          <public id="AccountInput.EntityOtherType" path="EntityOtherType" type="string">
            <definition>
              <caption value="Other Entity Type" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="AccountInput.ID" path="@id" type="string">
            <definition>
              <caption value="ID" />
              <maxLength idref="MaxLength.ID" />
            </definition>
          </public>
          <public id="AccountInput.Address1" path="address/Address1" type="string" override="1">
            <definition>
              <maxLength idref="MaxLength.Address" />
              <caption value="Address 1" />
              <required>
                <comparison compare="eq">
                  <operand idref="PolicyOutput.Status" type="string" />
                  <operand type="string" value="Application" />
                </comparison>
              </required>
              <readOnly>
                <comparison idref="AccountPrivate.AddressReadOnly" />
              </readOnly>
            </definition>
          </public>
          <public id="AccountInput.Address2" path="address/Address2" type="string" override="1">
            <definition>
              <caption value="Address 2" />
              <maxLength idref="MaxLength.Address" />
              <readOnly>
                <comparison idref="AccountPrivate.AddressReadOnly" type="boolean" />
              </readOnly>
            </definition>
          </public>
          <public id="AccountInput.City" path="address/City" type="string" override="1">
            <definition>
              <caption value="City" />
              <maxLength idref="MaxLength.City" />
              <required>
                <comparison compare="eq">
                  <operand idref="PolicyOutput.Status" type="string" />
                  <operand type="string" value="Application" />
                </comparison>
              </required>
              <readOnly>
                <comparison idref="AccountPrivate.AddressReadOnly" type="boolean" />
              </readOnly>
            </definition>
          </public>
          <public id="AccountInput.State" path="address/State" type="string" override="1">
            <definition>
              <caption value="State" />
              <maxLength idref="MaxLength.State" />
              <options idref="StateAbbreviations" name="State" />
              <formatMask idref="FormatMask.BlankOption" />
              <required idref="True" />
              <readOnly>
                <comparison idref="AccountPrivate.AddressReadOnly" type="boolean" />
              </readOnly>
            </definition>
            <corrections>
              <correction operation="bestMatch" condition="incorrect" laxity="high" message="Original Value #{uncorrected} was changed to match an item in the list with #{corrected}." />
            </corrections>
          </public>
          <public id="AccountInput.ZipCode" path="address/ZipCode" type="string" override="1">
            <definition>
              <caption value="ZIP Code" />
              <maxLength idref="MaxLength.Zip" />
              <formatMask idref="FormatMask.Zipcode" />
              <required>
                <comparison compare="eq">
                  <operand idref="PolicyOutput.Status" type="string" />
                  <operand type="string" value="Application" />
                </comparison>
              </required>
              <readOnly>
                <comparison idref="AccountPrivate.AddressReadOnly" type="boolean" />
              </readOnly>
            </definition>
          </public>
          <public id="AccountInput.ZipCodeAddOn" path="ZipCodeAddOn" type="string">
            <definition>
              <caption value="Account Input Zip Code Add On" />
            </definition>
            <rules>
              <value>
                <subString subStrMethod="startPosition">
                  <sourceString idref="AccountInput.ZipCode" />
                  <startPos value="7" />
                  <length value="4" />
                </subString>
              </value>
            </rules>
          </public>
          <public id="AccountInput.ZipCodeBase" path="ZipCodeBase" type="string">
            <definition>
              <caption value="Account Input Zip Code Base" />
            </definition>
            <rules>
              <value>
                <subString subStrMethod="startPosition">
                  <sourceString idref="AccountInput.ZipCode" />
                  <startPos value="1" />
                  <length value="5" />
                </subString>
              </value>
            </rules>
          </public>
        </object>
        <object id="Business" path="business">
          <minOccurs idref="BusinessGroup.RequiredCount" />
          <maxOccurs value="1" />
          <object id="BusinessInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="BusinessInput.FederalID" path="FederalID" type="string">
              <definition>
                <caption value="Federal ID" />
                <maxLength value="12" />
              </definition>
            </public>
            <public id="BusinessInput.NatureOfBusiness" path="NatureOfBusiness" type="string">
              <definition>
                <caption value="Nature Of Business" />
                <maxLength value="30" />
              </definition>
            </public>
            <public id="BusinessInput.YearFounded" path="YearFounded" type="int">
              <definition>
                <caption value="Year Founded" />
                <maxLength idref="MaxLength.Year" />
                <formatMask idref="FormatMask.Year" />
              </definition>
              <rules />
            </public>
          </object>
        </object>
        <object id="Building" path="building">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="BuildingInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="BuildingInput.ConstructionCode" path="ConstructionCode" type="string" comment="Shared">
              <definition>
                <caption value="Construction" />
                <options>
                  <option value="Frame" caption="Frame" />
                  <option value="JoistedMasonry" caption="Joisted Masonry" />
                  <option value="NonCombustible" caption="Non-Combustible" />
                  <option value="MasonryNonCombustible" caption="Masonry Non-Comb" />
                  <option value="ModifiedFireResistive" caption="Modified Fire Resistive" />
                  <option value="FireResistive" caption="Fire Resistive" />
                </options>
                <maxLength value="25" />
              </definition>
              <rules>
                <default value="Frame" />
              </rules>
            </public>
            <public id="BuildingInput.Description" path="Description" type="string" comment="Shared">
              <definition>
                <caption value="Description" />
                <maxLength idref="MaxLength.Description" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="BuildingInput.Description" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="BuildingPrivate.DescriptionValue" />
                  </if>
                </misc>
                <default idref="BuildingPrivate.DescriptionValue" />
              </rules>
            </public>
            <public id="BuildingInput.BuildingLocationID" type="string" comment="Shared" path="BuildingLocationID">
              <rules>
                <default idref="LocationSelectInput.LocationID" />
              </rules>
              <definition>
                <caption value="Location" />
                <options codeRef="Location" captionRef="LocationInput.Description" />
                <maxLength idref="MaxLength.ID" />
              </definition>
              <nameValues />
            </public>
            <public id="BuildingInput.NumberOfStories" path="NumberOfStories" type="int" comment="Shared">
              <definition>
                <caption value="Stories" />
                <formatMask value="??0" />
                <maxLength idref="MaxLength.iValue" />
              </definition>
              <rules>
                <minimum value="1" />
                <maximum value="999" />
                <default value="1" />
              </rules>
            </public>
            <public id="BuildingInput.Sprinkler" path="Sprinkler" type="boolean" comment="Shared">
              <definition>
                <caption value="Sprinkler" />
                <maxLength value="1" />
              </definition>
              <rules>
                <default idref="False" />
              </rules>
            </public>
            <public id="BuildingInput.YearBuilt" path="YearBuilt" type="int" comment="Shared">
              <definition>
                <caption value="Year Built" />
                <formatMask value="????" />
                <maxLength idref="MaxLength.iValue" />
              </definition>
              <rules>
                <default value="1981" />
                <minimum value="1800" />
                <maximum idref="DateTime.ThisYear" />
              </rules>
            </public>
            <public id="BuildingInput.SquareFt" path="SquareFt" type="int" comment="Shared">
              <definition>
                <caption value="Square Feet" />
                <formatMask value="???????" />
                <maxLength idref="MaxLength.iValue" />
              </definition>
              <rules>
                <default value="0" />
                <minimum value="0" />
              </rules>
            </public>
            <object id="BuildingWindstormLossMitigationInput">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="BuildingWindstormLossMitigationInput.DoorType" path="DoorType" type="string" comment="Shared">
                <definition>
                  <caption value="Door Type" />
                  <options>
                    <option value="ReinforcedSingleWidth" caption="Type A" default="1" />
                    <option value="Other" caption="Type B" />
                  </options>
                  <maxLength value="25" />
                </definition>
                <rules>
                  <default value="ReinforcedSingleWidth" />
                </rules>
              </public>
              <public id="BuildingWindstormLossMitigationInput.RoofCovering" path="RoofCovering" type="string" comment="Shared">
                <definition>
                  <caption value="Roof Covering" />
                  <options validRef="BuildingWindstormLossMitigationPrivate.BuildingType2">
                    <option value="SinglePlyMembrane" caption="Single Ply Membrane" />
                    <option value="AsphaltWoodShingles" caption="Asphalt/Wood Shingles" />
                  </options>
                  <options>
                    <option value="AsphaltShinglesWithScrews" caption="Asphalt/Wood Shingles with screws" default="1" />
                    <option value="AsphaltShinglesWithNails" caption="Asphalt/Wood Shingles with nails" />
                  </options>
                  <maxLength value="50" />
                </definition>
                <rules>
                  <default value="AsphaltShinglesWithScrews" />
                </rules>
              </public>
              <public id="BuildingWindstormLossMitigationInput.RoofDeckAttachment" path="RoofDeckAttachment" type="string" comment="Shared">
                <definition>
                  <caption value="Roof Deck Attachment" />
                  <options>
                    <option value="MetalDeck" caption="Type 1" default="1" />
                    <option value="PlywoodWithScrews" caption="Type 2" />
                    <option value="PlywoodWithNails" caption="Type 3" />
                  </options>
                  <maxLength value="25" />
                </definition>
                <rules>
                  <default value="MetalDeck" />
                </rules>
              </public>
              <public id="BuildingWindstormLossMitigationInput.RoofGeometry" path="RoofGeometry" type="string" comment="Shared">
                <definition>
                  <caption value="Roof Geometry" />
                  <options>
                    <option value="Type1" caption="Type 1" default="1" />
                    <option value="Type2" caption="Type 2" />
                    <option value="Type3" caption="Type 3" />
                  </options>
                  <maxLength idref="MaxLength.Value" />
                </definition>
                <rules>
                  <default value="Type1" />
                </rules>
              </public>
              <public id="BuildingWindstormLossMitigationInput.RoofWallConstruction" path="RoofWallConstruction" type="string" comment="Shared">
                <definition>
                  <caption value="Roof Wall Construction" />
                  <options>
                    <option value="AnchorBolts" caption="Type 1" default="1" />
                    <option value="NailsScrews" caption="Type 2" />
                  </options>
                  <maxLength value="15" />
                </definition>
                <rules>
                  <default value="AnchorBolts" />
                </rules>
              </public>
              <public id="BuildingWindstormLossMitigationInput.WindowProtection" path="WindowProtection" type="string" comment="Shared">
                <definition>
                  <caption value="Window Protection" />
                  <options>
                    <option value="EngineeredShutters" caption="Type 1" default="1" />
                    <option value="NonEngineeredShutters" caption="Type 2" />
                    <option value="NoShutters" caption="Type 3" />
                  </options>
                  <maxLength value="30" />
                </definition>
                <rules>
                  <default value="EngineeredShutters" />
                </rules>
              </public>
              <public id="BuildingWindstormLossMitigationInput.WindstormLossMitigationSelect" path="WindstormLossMitigation" type="boolean" comment="Shared">
                <definition>
                  <caption value="Applicable" />
                  <maxLength value="1" />
                </definition>
                <rules>
                  <default idref="False" />
                </rules>
              </public>
              <public id="BuildingWindstormLossMitigationInput.BuildingType" path="BuildingType" type="int" comment="Shared">
                <definition>
                  <caption value="Building Type" />
                  <options>
                    <option value="1" caption="Type I" />
                    <option value="2" caption="Type II" />
                  </options>
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
            </object>
          </object>
          <relationships>
            <relationship>
              <relatedObject idref="Location" />
              <foreignKey idref="BuildingInput.BuildingLocationID" />
            </relationship>
          </relationships>
          <object id="BuildingOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="BuildingOutput.BuildingID" path="@id" type="string">
              <definition>
                <caption value="Building ID" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.ID" />
              </definition>
            </public>
            <public id="BuildingOutput.CSP" path="CSP" type="string">
              <definition>
                <caption value="CSP Code" />
                <maxLength idref="MaxLength.CSP" />
                <readOnly idref="True" />
              </definition>
            </public>
            <object id="BuildingOutputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="BuildingOutputNonShredded.Number" path="Number" type="int">
                <definition>
                  <caption value="Building Number" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
                <rules>
                  <value>
                    <iterator type="int" scope="all" action="current" idref="Building" />
                  </value>
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.Deleted" path="@deleted" type="boolean">
                <definition>
                  <caption value="Deleted" />
                </definition>
                <rules>
                  <default value="0" />
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.InAddMode" path="InAddMode" type="boolean">
                <definition>
                  <caption value="In Add Mode" />
                </definition>
                <rules>
                  <default idref="True" />
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.InEditMode" path="InEditMode" type="boolean">
                <definition>
                  <caption value="In Edit Mode" />
                </definition>
                <rules>
                  <default idref="True" />
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.NumberDisplay" path="NumberDisplay" type="string">
                <definition>
                  <caption value="Building #" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
                <rules>
                  <value>
                    <calculation>
                      <argument op="eq" type="string" value="#" />
                      <argument op="add" idref="BuildingOutputNonShredded.LocationBuildingNumber" type="int" />
                    </calculation>
                  </value>
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.EditCaption" path="EditCaption" type="string">
                <definition>
                  <caption value="Building Output Non Shredded Edit Caption" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value value="Detail" />
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.BuildingLocationNumber" path="BuildingLocationNumber" type="string">
                <definition>
                  <caption value="Location #" />
                  <maxLength idref="MaxLength.Value" />
                </definition>
                <rules>
                  <value>
                    <iterator type="string" scope="first" action="sum" includeDeleted="1" idref="Location">
                      <reference idref="LocationOutputNonShredded.Number" type="int" />
                      <customQuery idref="BuildingPrivate.BuildingLocationXPath" />
                    </iterator>
                  </value>
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.LocationBuildingNumber" path="LocationBuildingNumber" type="int">
                <definition>
                  <caption value="Building #" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
                <rules>
                  <default idref="BuildingPrivate.BuildingNumber" />
                  <affects>
                    <reference idref="BuildingPrivate.ValidBuildingRenumberCheck" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.BuildingNumberLocked" path="BuildingNumberLocked" type="boolean">
                <definition>
                  <caption value="Building Number Locked" />
                </definition>
                <rules>
                  <default idref="False" />
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.TransactionIDWhenAdded" path="TransactionIDWhenAdded" type="string">
                <definition>
                  <caption value="Transaction ID When Added" />
                </definition>
                <rules>
                  <default idref="PolicyOutputNonShredded.CurrentTransactionID" />
                  <nonRating value="1" />
                </rules>
              </public>
              <public id="BuildingOutputNonShredded.AvailableNumberIDForCurrentTerm" path="AvailableNumberIDForCurrentTerm" type="string" alwaysRun="1">
                <definition>
                  <caption value="Available Number ID For Current Term" />
                </definition>
                <rules>
                  <default idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" />
                  <misc>
                    <if>
                      <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                      <then idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" />
                    </if>
                  </misc>
                </rules>
              </public>
            </object>
          </object>
          <object id="BuildingPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="BuildingPrivate.DescriptionValue" type="string" comment="">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="Building #" />
                  <argument op="add" idref="BuildingOutputNonShredded.LocationBuildingNumber" type="int" />
                </calculation>
              </value>
            </private>
            <private id="BuildingPrivate.SetLocationIDToCompare" type="string">
              <value idref="BuildingOutput.BuildingID" />
              <affects>
                <reference idref="GlobalOutput.LocationIDToCompare" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.LastSelectedOccupancyID" type="string" comment="" caption="Last Selected Occupancy ID" />
            <object id="BuildingWindstormLossMitigationPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="BuildingWindstormLossMitigationPrivate.WindstormLossMitigationApplicable" type="boolean" comment="">
                <value>
                  <comparison compare="and">
                    <operand idref="LocationPrivate.StateIsFL" type="boolean" />
                    <operand idref="BuildingWindstormLossMitigationInput.WindstormLossMitigationSelect" type="boolean" />
                  </comparison>
                </value>
              </private>
              <private id="BuildingWindstormLossMitigationPrivate.BuildingType2" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="BuildingWindstormLossMitigationInput.BuildingType" type="int" />
                    <operand type="int" value="2" />
                  </comparison>
                </value>
              </private>
              <private id="BuildingWindstormLossMitigationPrivate.BuildingType1" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="BuildingWindstormLossMitigationInput.BuildingType" type="int" />
                    <operand type="int" value="1" />
                  </comparison>
                </value>
              </private>
            </object>
            <private id="BuildingPrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="BuildingOutput.BuildingID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="BuildingPrivate.DeleteObjectRecord" caption="" type="string">
              <value>
                <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                  <onFailure value="" />
                  <modifySession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="Building" name="objectID" dataType="attribute" />
                    <nameValue idref="BuildingPrivate.ContextPath" name="context" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="BuildingPrivate.ClearAddMode" caption="" type="boolean" alwaysRun="1">
              <value idref="False" />
              <affects>
                <reference idref="BuildingOutputNonShredded.InAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.ClearEditMode" caption="" type="boolean" alwaysRun="1">
              <value idref="False" />
              <affects>
                <reference idref="BuildingOutputNonShredded.InEditMode" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.NotInAddMode" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="BuildingOutputNonShredded.InAddMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="BuildingPrivate.NotInEditMode" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="BuildingOutputNonShredded.InEditMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="BuildingPrivate.SetAddMode" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="BuildingOutputNonShredded.InAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.SetEditMode" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="BuildingOutputNonShredded.InEditMode" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.IsBuildingUsedOnRisk" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="BuildingPrivate.BuildingUsedOnRiskCount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingUsedOnRiskXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//risk[BuildingID='" />
                  <argument op="add" idref="BuildingOutput.BuildingID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="BuildingPrivate.ShowDelete" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="or">
                        <operand idref="Rules.PolicyIsQuote" type="float" />
                        <operand idref="Rules.PolicyIsInApplication" type="float" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="BuildingPrivate.IsBuildingUsedOnRisk" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="BuildingPrivate.IsBuildingUsedOnCrimePremises" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="BuildingPrivate.IsBuildingUsedInAccount" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingSelectInput.ShowAllBuildings" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyPrivate.IsInInterimAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="BuildingPrivate.BuildingUsedOnRiskCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Risk">
                  <customQuery idref="BuildingPrivate.BuildingUsedOnRiskXPath" />
                </iterator>
              </value>
            </private>
            <private id="BuildingPrivate.ShowDeleteMarked" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="and">
                      <operand idref="Rules.PolicyIsNotQuoteOrApplication" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="BuildingPrivate.IsBuildingUsedOnRisk" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="BuildingPrivate.IsBuildingUsedOnCrimePremises" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="BuildingPrivate.IsBuildingUsedInAccount" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingSelectInput.ShowAllBuildings" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyPrivate.IsInInterimAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="BuildingPrivate.SetBuildingLocationID" caption="" type="string">
              <value idref="LocationSelectInput.LocationID" />
              <affects>
                <reference idref="BuildingInput.BuildingLocationID" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.LocationIsSelected" caption="" type="boolean">
              <value>
                <comparison compare="or">
                  <comparison compare="eq">
                    <operand idref="LocationSelectInput.LocationID" type="string" />
                    <operand idref="BuildingInput.BuildingLocationID" type="string" />
                  </comparison>
                  <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                </comparison>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingLocationXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="location[@id='" />
                  <argument op="add" idref="BuildingInput.BuildingLocationID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingSelectDescription" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingSelectInput.ShowAllBuildings" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="BuildingInput.Description" />
                  <else value="All Buildings" />
                </if>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingUsedOnCrimePremisesCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Risk">
                  <customQuery idref="BuildingPrivate.BuildingUsedOnCrimePremisesXPath" />
                </iterator>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingUsedOnCrimePremisesDeletedCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Risk">
                  <customQuery idref="BuildingPrivate.BuildingUsedOnCrimePremisesDeletedXPath" />
                </iterator>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingUsedOnCrimePremisesDeletedXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[CrimePremisesID='" />
                  <argument op="add" idref="BuildingOutput.BuildingID" type="string" />
                  <argument op="add" type="string" value="'][@deleted='" />
                  <argument op="add" idref="True" type="int" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingUsedOnCrimePremisesXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[CrimePremisesID='" />
                  <argument op="add" idref="BuildingOutput.BuildingID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="BuildingPrivate.IsBuildingUsedOnCrimePremises" caption="" type="boolean">
              <value>
                <comparison compare="ne">
                  <operand idref="BuildingPrivate.BuildingUsedOnCrimePremisesCount" type="int" />
                  <operand idref="BuildingPrivate.BuildingUsedOnCrimePremisesDeletedCount" type="int" />
                </comparison>
              </value>
            </private>
            <private id="BuildingPrivate.CheckResetBuildingID" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingOutput.BuildingID" type="string" />
                      <operand idref="BuildingSelectInput.BuildingID" type="string" />
                    </comparison>
                  </condition>
                  <then idref="BuildingPrivate.ResetBuildingID" />
                </if>
              </value>
            </private>
            <private id="BuildingPrivate.ResetBuildingID" caption="" type="string">
              <value idref="BuildingGroup.DefaultID" />
              <affects>
                <reference idref="BuildingSelectInput.BuildingID" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.BuildingNumber" caption="" type="int" alwaysRun="1">
              <affects>
                <reference idref="BuildingPrivate.SetCurrentLocationNumberID" effect="preEffect" />
                <reference idref="AccountPrivate.AddNeededBuildingNumberRecords" effect="preEffect" />
                <reference idref="PolicyPrivate_BuildingNumbering.NextAvailableBuildingNumberIncrement" effect="postEffect" />
              </affects>
              <value idref="PolicyPrivate_BuildingNumbering.NextAvailableBuildingNumber" />
            </private>
            <private id="BuildingPrivate.ResetBuildingNumber" caption="" type="string" alwaysRun="1">
              <value idref="BuildingPrivate.BuildingNumber" />
              <affects>
                <reference idref="BuildingOutputNonShredded.LocationBuildingNumber" effect="setValue" />
                <reference idref="BuildingOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
              </affects>
            </private>
            <private id="BuildingPrivate.ValidBuildingRenumberNewBusiness" caption="" type="int" path="ValidBuildingRenumberNewBusiness">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingInput.BuildingLocationID" type="string" />
                      <operand idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                    </comparison>
                  </condition>
                  <then idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocation" />
                </if>
              </value>
            </private>
            <private id="BuildingPrivate.SetCurrentLocationNumberID" caption="" type="string" path="SetCurrentLocationNumberID">
              <value idref="BuildingInput.BuildingLocationID" />
              <affects>
                <reference idref="AccountPrivate.CurrentLocationNumberID" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.SetCurrentBuildingNumberID" caption="" type="string" path="SetCurrentBuildingNumberID">
              <value idref="BuildingOutput.BuildingID" />
              <affects>
                <reference idref="AccountPrivate.CurrentBuildingNumberID" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.SetCurrentIDValues" caption="" type="string" alwaysRun="1">
              <affects>
                <reference idref="BuildingPrivate.SetCurrentLocationNumberID" effect="postEffect" />
                <reference idref="BuildingPrivate.SetCurrentBuildingNumberID" effect="postEffect" />
              </affects>
            </private>
            <private id="BuildingPrivate.IsValidToRenumber" caption="" type="boolean">
              <misc>
                <if>
                  <condition idref="PolicyPrivate.IsValidToRenumber" />
                  <then idref="True" />
                </if>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="ge">
                        <operand idref="BuildingOutputNonShredded.LocationBuildingNumber" type="int" />
                        <operand idref="PolicyPrivate_BuildingNumbering.NextAvailableBuildingNumberAtStart" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="True" />
                </if>
                <if>
                  <condition idref="OSEventData.inOutOfSequence" />
                  <then idref="False" />
                </if>
              </misc>
              <value idref="False" />
            </private>
            <private id="BuildingPrivate.ValidBuildingRenumberMidTerm" caption="" type="int" alwaysRun="1">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="BuildingPrivate.IsBuildingNumberLocked" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="PolicyPrivate_BuildingNumbering.ResetBuildingNumberCurrentLocMidTerm" />
                </if>
              </value>
            </private>
            <private id="BuildingPrivate.ValidBuildingRenumberCheck" caption="" type="int">
              <value>
                <if>
                  <condition idref="BuildingPrivate.IsValidToRenumber" />
                  <then idref="BuildingPrivate.ValidBuildingRenumber" />
                </if>
              </value>
            </private>
            <private id="BuildingPrivate.ValidBuildingRenumber" caption="" type="int">
              <value>
                <if>
                  <condition idref="PolicyPrivate.IsCurrentTransactionNewBusiness" />
                  <then idref="BuildingPrivate.ValidBuildingRenumberNewBusiness" />
                  <else idref="BuildingPrivate.ValidBuildingRenumberMidTerm" />
                </if>
              </value>
              <affects>
                <reference idref="BuildingPrivate.SetCurrentIDValues" effect="preEffect" />
              </affects>
            </private>
            <private id="BuildingPrivate.SetDeletedTrue" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="BuildingOutputNonShredded.Deleted" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.SetBuildingNumberLocked" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="BuildingOutputNonShredded.BuildingNumberLocked" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.ClearBuildingNumberLocked" caption="" type="boolean">
              <value idref="False" />
              <affects>
                <reference idref="BuildingOutputNonShredded.BuildingNumberLocked" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingPrivate.IsBuildingNumberLocked" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="BuildingOutputNonShredded.BuildingNumberLocked" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </value>
            </private>
            <private id="BuildingPrivate.IsBuildingUsedInAccount" caption="" type="boolean">
              <value>
                <comparison compare="gt">
                  <operand idref="BuildingPrivate.BuildingUsedInAccount" type="int" />
                  <operand type="int" value="0" />
                </comparison>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingUsedInAccount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Account">
                  <customQuery idref="BuildingPrivate.BuildingUsedInAccountXPath" />
                </iterator>
              </value>
            </private>
            <private id="BuildingPrivate.BuildingUsedInAccountXPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="/session/data/account//*[BuildingID='" />
                  <argument op="add" idref="BuildingOutput.BuildingID" type="string" />
                  <argument op="add" type="string" value="']" />
                  <argument op="add" type="string" value="[not (@deleted='1')]" />
                </calculation>
              </value>
            </private>
            <object id="BuildingPrivate_NumberSetup">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="BuildingPrivate_NumberSetup.BackupNumberCount" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="count" idref="AvailableNumbersBackup">
                    <customQuery idref="BuildingPrivate_NumberSetup.BackupNumberXPath" />
                  </iterator>
                </value>
              </private>
              <private id="BuildingPrivate_NumberSetup.BackupNumberXPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="availableNumbersBackup[@groupID='" />
                    <argument op="add" idref="BuildingOutput.BuildingID" type="string" />
                    <argument op="add" type="string" value="'][@availableNumberTermID='" />
                    <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                    <argument op="add" type="string" value="']" />
                  </calculation>
                </value>
              </private>
              <private id="BuildingPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" caption="" type="string" path="AvailableNumberIDForCurrentTerm3">
                <value value="" />
                <affects>
                  <reference idref="BuildingOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="setValue" />
                </affects>
              </private>
              <private id="BuildingPrivate_NumberSetup.ReconcileBackupSetup" caption="" type="string" path="LocationNumberOOSSetup">
                <value value="" />
                <affects>
                  <reference idref="BuildingPrivate_NumberSetup.SetBackupNumberValue" effect="postEffect" />
                  <reference idref="BuildingPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" effect="postEffect" />
                  <reference idref="BuildingOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
                </affects>
              </private>
              <private id="BuildingPrivate_NumberSetup.ReconcileInitialSetup" caption="" type="string" path="LocationNumberOOSSetup">
                <value value="" />
                <affects>
                  <reference idref="BuildingPrivate.ClearBuildingNumberLocked" effect="postEffect" />
                  <reference idref="BuildingPrivate.ResetBuildingNumber" effect="postEffect" />
                  <reference idref="BuildingPrivate_NumberSetup.ClearAvailableNumberIDForCurrentTerm" effect="postEffect" />
                  <reference idref="BuildingOutputNonShredded.AvailableNumberIDForCurrentTerm" effect="postEffect" />
                  <reference idref="BuildingPrivate_NumberSetup.UpdateAvailableNumberBackup" effect="postEffect" />
                </affects>
              </private>
              <private id="BuildingPrivate_NumberSetup.ReconcileSetupCheck" caption="" type="string" path="ReconcileSetupCheck">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="BuildingPrivate_NumberSetup.BackupNumberCount" type="int" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then idref="BuildingPrivate_NumberSetup.ReconcileInitialSetup" />
                    <else idref="BuildingPrivate_NumberSetup.ReconcileBackupSetup" />
                  </if>
                </value>
              </private>
              <private id="BuildingPrivate_NumberSetup.SetBackupNumberValue" caption="" type="string">
                <value>
                  <iterator type="string" scope="first" action="sum" idref="AvailableNumbersBackup">
                    <reference idref="AvailableNumbersBackupOutput.Value" type="string" />
                    <customQuery idref="BuildingPrivate_NumberSetup.BackupNumberXPath" />
                  </iterator>
                </value>
                <affects>
                  <reference idref="BuildingOutputNonShredded.LocationBuildingNumber" effect="setValue" />
                </affects>
              </private>
              <private id="BuildingPrivate_NumberSetup.UpdateAvailableNumberBackup" caption="" type="string">
                <value>
                  <request verb="Session.setElementRq" get="">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="BuildingPrivate_NumberSetup.UpdateAvailableNumberBackupPath" name="path" dataType="attribute" />
                      <nameValue idref="BuildingOutputNonShredded.LocationBuildingNumber" name="value" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="BuildingPrivate_NumberSetup.UpdateAvailableNumberBackupPath" caption="" type="string">
                <value>
                  <calculation>
                    <argument op="eq" type="string" value="_temporaryTemplateData^availableNumbersBackup[@groupID='" />
                    <argument op="add" idref="BuildingOutput.BuildingID" type="string" />
                    <argument op="add" type="string" value="' and @availableNumberTermID='" />
                    <argument op="add" idref="BuildingOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                    <argument op="add" type="string" value="']/@value" />
                  </calculation>
                </value>
              </private>
            </object>
          </object>
        </object>
        <object id="Occupancy" path="occupancy">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="OccupancyOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="OccupancyOutput.Description" path="Description" type="string" alwaysRun="1" comment="Shared">
              <definition>
                <caption value="Description" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.LongDescription" />
              </definition>
              <rules>
                <value idref="OccupancyPrivate.DescriptionValue" />
                <misc>
                  <if>
                    <condition idref="OccupancyPrivate.IsLongDescription" />
                    <then idref="OccupancyPrivate.LongDescription" />
                  </if>
                </misc>
                <affects>
                  <reference idref="OccupancyOutputNonShredded.ShortDescription" effect="postEffect" />
                </affects>
              </rules>
            </public>
            <public id="OccupancyOutput.OccupancyID" path="@id" type="string">
              <definition>
                <caption value="Occupancy ID" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.ID" />
              </definition>
            </public>
            <public id="OccupancyOutput.CSP" path="CSP" type="string" comment="Shared" alwaysRun="1">
              <definition>
                <caption value="CSP" />
                <maxLength idref="MaxLength.CSP" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="OccupancyInput.CSPOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.CSPOverride" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="OccupancyOutput.ClassLimit" path="ClassLimit" type="string" comment="Shared" alwaysRun="1">
              <definition>
                <caption value="Class Limit" />
                <maxLength value="6" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="OccupancyInput.ClassLimitOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.ClassLimitOverride" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="OccupancyOutput.CrimeClass" path="CrimeClass" type="string" alwaysRun="1">
              <definition>
                <caption value="Crime Class" />
                <maxLength idref="MaxLength.CSP" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="OccupancyInput.CrimeClassOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.CrimeClassOverride" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="OccupancyOutput.GLClassCode" path="GLClassCode" type="string" comment="Shared" alwaysRun="1">
              <definition>
                <caption value="Class Code" />
                <maxLength value="5" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="OccupancyInput.GLClassCodeOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.GLClassCodeOverride" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="OccupancyOutput.GLPremiumBasis" path="GLPremiumBasis" type="string" comment="Shared" alwaysRun="1">
              <definition>
                <caption value="Premium Basis" />
                <maxLength value="2" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="OccupancyInput.GLPremiumBasisOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.GLPremiumBasisOverride" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="OccupancyOutput.OccupancyType" path="OccupancyType" type="string" comment="Shared" alwaysRun="1">
              <definition>
                <caption value="Occupancy Type" />
                <maxLength value="6" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="OccupancyInput.OccupancyTypeOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.OccupancyTypeOverride" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="or">
                          <comparison compare="or">
                            <operand idref="OccupancyPrivate.IsPropertyMonoline" type="boolean" />
                            <operand idref="OccupancyPrivate.IsGLMonoline" type="boolean" />
                          </comparison>
                          <operand idref="OccupancyPrivate.IsCrimeMonoline" type="boolean" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="OccupancyInput.OccupancyTypeMonoline" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.OccupancyTypeMonoline" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="OccupancyOutput.RateGroup" path="RateGroup" type="string" comment="Shared" alwaysRun="1">
              <definition>
                <caption value="Rate Group" />
                <maxLength value="3" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="ne">
                        <operand idref="OccupancyInput.RateGroupOverride" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </condition>
                    <then idref="OccupancyInput.RateGroupOverride" />
                  </if>
                </misc>
              </rules>
            </public>
            <object id="OccupancyOutputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="OccupancyOutputNonShredded.ShortDescription" type="string" comment="Shared" path="ShortDescription" alwaysRun="1">
                <definition>
                  <caption type="string" value="Occupancy Output Non Shredded Short Description" />
                  <maxLength idref="MaxLength.Description" />
                </definition>
                <rules>
                  <value idref="OccupancyPrivate.DescriptionValue" />
                </rules>
              </public>
              <public id="OccupancyOutputNonShredded.Number" type="int" comment="" path="Number">
                <rules>
                  <value>
                    <iterator type="int" scope="all" action="current" idref="Occupancy" />
                  </value>
                </rules>
                <definition>
                  <caption value="Number" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.iValue" />
                </definition>
              </public>
              <public id="OccupancyOutputNonShredded.ApplicableToCrime" type="boolean" comment="" path="ApplicableToCrime">
                <rules>
                  <default>
                    <comparison compare="or">
                      <comparison compare="eq">
                        <operand idref="LineOutput.Type" type="string" />
                        <operand type="string" value="Crime" />
                      </comparison>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="OccupancyPrivate.ClassTableGeneralLiability" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="OccupancyPrivate.ClassTableProperty" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="OccupancyPrivate.ClassTableCrime" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </default>
                </rules>
                <definition>
                  <caption value="Applicable To Crime" />
                </definition>
              </public>
              <public id="OccupancyOutputNonShredded.ApplicableToGeneralLiability" type="boolean" comment="" path="ApplicableToGeneralLiability">
                <rules>
                  <default>
                    <comparison compare="or">
                      <comparison compare="eq">
                        <operand idref="LineOutput.Type" type="string" />
                        <operand type="string" value="GeneralLiability" />
                      </comparison>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="OccupancyPrivate.ClassTableProperty" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="OccupancyPrivate.ClassTableGeneralLiability" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="OccupancyPrivate.ClassTableCrime" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </default>
                </rules>
                <definition>
                  <caption value="Applicable To General Liability" />
                </definition>
              </public>
              <public id="OccupancyOutputNonShredded.ApplicableToProperty" type="boolean" comment="" path="ApplicableToProperty">
                <rules>
                  <default>
                    <comparison compare="or">
                      <comparison compare="eq">
                        <operand idref="LineOutput.Type" type="string" />
                        <operand type="string" value="Property" />
                      </comparison>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="OccupancyPrivate.ClassTableGeneralLiability" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="OccupancyPrivate.ClassTableProperty" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="OccupancyPrivate.ClassTableCrime" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </comparison>
                  </default>
                </rules>
                <definition>
                  <caption value="Applicable To Property" />
                </definition>
              </public>
              <public id="OccupancyOutputNonShredded.Deleted" path="@deleted" type="boolean">
                <definition>
                  <caption value="Deleted" />
                </definition>
                <rules>
                  <default value="0" />
                </rules>
              </public>
              <public id="OccupancyOutputNonShredded.ApplicableToBusinessowners" type="boolean" comment="" path="ApplicableToBusinessowners">
                <rules>
                  <default>
                    <comparison compare="eq">
                      <operand idref="LineOutput.Type" type="string" />
                      <operand type="string" value="BusinessOwners" />
                    </comparison>
                  </default>
                </rules>
                <definition>
                  <caption value="Applicable To Businessowners" />
                </definition>
              </public>
            </object>
          </object>
          <object id="OccupancyInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="OccupancySearchInputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="OccupancySearchInputNonShredded.SearchResults" path="SearchResults" type="string" alwaysRun="1">
                <definition>
                  <caption value="Search Results" />
                  <options combine="1">
                    <request verb="DataKey.listContainingRq">
                      <responsePath value="listContainingRs/o" />
                      <captionPath value="@c" />
                      <valuePath value="@v" />
                      <nameValues>
                        <nameValue idref="OccupancyPrivate.DataKeyFile" name="datakey" dataType="attribute" />
                        <nameValue idref="OccupancySearchInputNonShredded.SearchValue" name="filter" dataType="attribute" />
                      </nameValues>
                    </request>
                  </options>
                  <formatMask idref="FormatMask.BlankOption" />
                  <maxLength value="255" />
                </definition>
                <rules>
                  <affects>
                    <reference idref="OccupancyLookup.CSP" effect="postEffect" />
                    <reference idref="OccupancyLookup.ClassLimit" effect="postEffect" />
                    <reference idref="OccupancyLookup.CrimeClass" effect="postEffect" />
                    <reference idref="OccupancyLookup.GLClassCode" effect="postEffect" />
                    <reference idref="OccupancyLookup.GLPremiumBasis" effect="postEffect" />
                    <reference idref="OccupancyLookup.OccupancyType" effect="postEffect" />
                    <reference idref="OccupancyLookup.RateGroup" effect="postEffect" />
                  </affects>
                </rules>
              </public>
              <public id="OccupancySearchInputNonShredded.SearchValue" path="SearchValue" type="string">
                <definition>
                  <caption value="Search Value" />
                  <maxLength value="255" />
                </definition>
                <rules />
              </public>
            </object>
            <public id="OccupancyInput.CSPOverride" path="CSPOverride" type="string">
              <definition>
                <caption value="CSP Override" />
                <maxLength idref="MaxLength.CSP" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="OccupancyInput.ClassLimitOverride" path="ClassLimitOverride" type="string">
              <definition>
                <caption value="Class Limit Override" />
                <maxLength value="6" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="OccupancyInput.CrimeClassOverride" path="CrimeClassOverride" type="string">
              <definition>
                <caption value="Crime Class Override" />
                <maxLength idref="MaxLength.CSP" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="OccupancyInput.GLClassCodeOverride" path="GLClassCodeOverride" type="string">
              <definition>
                <caption value="GL Class Code Override" />
                <maxLength value="5" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="OccupancyInput.GLPremiumBasisOverride" path="GLPremiumBasisOverride" type="string">
              <definition>
                <caption value="GL Premium Basis Override" />
                <maxLength value="2" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="OccupancyInput.OccupancyTypeOverride" path="OccupancyTypeOverride" type="string">
              <definition>
                <caption value="Occupancy Type Override" />
                <maxLength value="2" />
                <options>
                  <option value="A" caption="Apartment House" />
                  <option value="C" caption="Contractors" />
                  <option value="MH" caption="Motel/Hotel" />
                  <option value="IP" caption="Industrial and Processing" />
                  <option value="I" caption="Institutional" />
                  <option value="M" caption="Mercantile" />
                  <option value="O" caption="Office" />
                  <option value="S" caption="Service" />
                </options>
                <required>
                  <comparison compare="contains">
                    <operand idref="OccupancyOutput.OccupancyType" type="string" />
                    <operand type="string" value="," />
                  </comparison>
                </required>
                <formatMask idref="FormatMask.BlankOption" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="OccupancyInput.RateGroupOverride" path="RateGroupOverride" type="string">
              <definition>
                <caption value="Rate Group Override" />
                <maxLength value="1" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="OccupancyInput.OccupancyTypeMonoline" path="OccupancyTypeMonoline" type="string">
              <definition>
                <caption value="Occupancy Type" />
                <formatMask idref="FormatMask.BlankOption" />
                <options>
                  <option value="A" caption="Apartment House" />
                  <option value="C" caption="Contractors" />
                  <option value="MH" caption="Motel/Hotel" />
                  <option value="IP" caption="Industrial and Processing" />
                  <option value="I" caption="Institutional" />
                  <option value="M" caption="Mercantile" />
                  <option value="O" caption="Office" />
                  <option value="S" caption="Service" />
                </options>
                <maxLength value="2" />
                <required>
                  <comparison idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                </required>
              </definition>
              <rules>
                <default idref="PolicyPrivate.OccupancyTypeDefault" />
              </rules>
            </public>
          </object>
          <object id="OccupancyPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="OccupancyPrivate.DescriptionValue" type="string">
              <value>
                <subString subStrMethod="startPosition">
                  <sourceString idref="OccupancyPrivate.FullDescription" />
                  <startPos value="1" />
                  <length value="250" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.FullDescription" type="string">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="OccupancySearchInputNonShredded.SearchResults" />
                  <separatorChar value="|" />
                  <ordPosition value="2" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.CanDelete" type="boolean">
              <value>
                <comparison compare="ne">
                  <operand idref="OccupancyOutputNonShredded.Number" type="int" />
                  <operand type="int" value="1" />
                </comparison>
              </value>
            </private>
            <object id="OccupancyLookup">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="OccupancyLookup.CSP" type="string" comment="" caption="CSP">
                <value>
                  <lookup>
                    <tableRef value="ClassTable" />
                    <fieldRef value="FireClassCode" />
                    <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="OccupancyOutput.CSP" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyLookup.ClassLimit" type="string" comment="" caption="Class Limit">
                <value>
                  <lookup>
                    <tableRef value="ClassTable" />
                    <fieldRef value="ContentsClassLimit" />
                    <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="OccupancyOutput.ClassLimit" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyLookup.CrimeClass" type="string" comment="" caption="Crime Class">
                <value>
                  <lookup>
                    <tableRef value="ClassTable" />
                    <fieldRef value="CrimeClass" />
                    <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="OccupancyOutput.CrimeClass" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyLookup.GLClassCode" type="string" comment="" caption="GL Class Code">
                <value>
                  <if>
                    <condition>
                      <comparison compare="contains">
                        <operand idref="OccupancySearchInputNonShredded.SearchResults" type="string" />
                        <operand type="string" value="*****" />
                      </comparison>
                    </condition>
                    <then value="00000" />
                    <else>
                      <lookup>
                        <tableRef value="ClassTable" />
                        <fieldRef value="GLClassCode" />
                        <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                      </lookup>
                    </else>
                  </if>
                </value>
                <affects>
                  <reference idref="OccupancyOutput.GLClassCode" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyLookup.GLPremiumBasis" type="string" comment="" caption="GL Premium Base">
                <value>
                  <lookup>
                    <tableRef value="ClassTable" />
                    <fieldRef value="GLPremiumBase" />
                    <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="OccupancyOutput.GLPremiumBasis" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyLookup.OccupancyType" type="string" comment="" caption="Occupancy Type" alwaysRun="1">
                <value>
                  <lookup>
                    <tableRef value="ClassTable" />
                    <fieldRef value="MultipleLineCPPPMA" />
                    <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="OccupancyOutput.OccupancyType" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyLookup.RateGroup" type="string" comment="" caption="Rate Group">
                <value>
                  <lookup>
                    <tableRef value="ClassTable" />
                    <fieldRef value="ContentsRateGroup" />
                    <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                  </lookup>
                </value>
                <affects>
                  <reference idref="OccupancyOutput.RateGroup" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyLookup.LongDescription" type="string" comment="" caption="CSP">
                <value>
                  <lookup>
                    <tableRef value="ClassTable" />
                    <fieldRef value="LongDescription" />
                    <keyRef idref="OccupancyPrivate.SearchID" type="string" name="KeyID" />
                  </lookup>
                </value>
              </private>
            </object>
            <private id="OccupancyPrivate.DataKeyFile" type="string">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.ClassTable" />
                  <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="dk" name="DataServicesFile" />
                  <keyRef idref="OccupancyPrivate.CurrentState" type="string" name="State" />
                  <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <private id="OccupancyPrivate.DataSetFile" type="string">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.ClassTable" />
                  <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="ds" name="DataServicesFile" />
                  <keyRef idref="OccupancyPrivate.CurrentState" type="string" name="State" />
                  <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <private id="OccupancyPrivate.IsLongDescription" type="boolean">
              <value>
                <comparison compare="ne">
                  <operand idref="OccupancyLookup.LongDescription" type="string" />
                  <operand type="string" value="" />
                </comparison>
              </value>
            </private>
            <private id="OccupancyPrivate.LongDescription" type="string" comment="" caption="Long Description">
              <value>
                <calculation>
                  <argument op="eq" idref="OccupancyPrivate.ClassCodes" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="OccupancyLookup.LongDescription" type="string" />
                </calculation>
              </value>
            </private>
            <private id="OccupancyPrivate.ClassCodes" type="string">
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="OccupancyPrivate.IsGLMonoline" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="OccupancyPrivate.IsPropertyMonoline" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="OccupancyPrivate.IsCrimeMonoline" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="OccupancyPrivate.ClassCodesCombined" />
                </if>
                <if>
                  <condition idref="OccupancyPrivate.IsGLMonoline" />
                  <then idref="OccupancyPrivate.ClassCodesMonolineGL" />
                </if>
                <if>
                  <condition>
                    <comparison compare="or">
                      <operand idref="OccupancyPrivate.IsPropertyMonoline" type="boolean" />
                      <operand idref="OccupancyPrivate.IsCrimeMonoline" type="boolean" />
                    </comparison>
                  </condition>
                  <then idref="OccupancyPrivate.ClassCodesMonolineOther" />
                </if>
              </misc>
            </private>
            <private id="OccupancyPrivate.SearchID" type="string">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="OccupancySearchInputNonShredded.SearchResults" />
                  <separatorChar value="|" />
                  <ordPosition value="1" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.IsLastOccupancy" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="OccupancyOutputNonShredded.Number" type="int" />
                  <operand idref="OccupancyPrivate.OccupancyCount" type="int" />
                </comparison>
              </value>
            </private>
            <private id="OccupancyPrivate.OccupancyCount" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="count" idref="Occupancy" />
              </value>
            </private>
            <private id="OccupancyPrivate.ClassTableLOB" caption="" type="string">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="TableNames.ClassTable" />
                  <separatorChar value="_" />
                  <ordPosition value="2" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.IsPropertyMonoline" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="OccupancyPrivate.ClassTableLOB" type="string" />
                  <operand type="string" value="Property" />
                </comparison>
              </value>
            </private>
            <private id="OccupancyPrivate.IsGLMonoline" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="OccupancyPrivate.ClassTableLOB" type="string" />
                  <operand type="string" value="GL" />
                </comparison>
              </value>
            </private>
            <private id="OccupancyPrivate.ClassTableProperty" caption="" type="string">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="TableNames.ClassTableProperty" />
                  <separatorChar value="_" />
                  <ordPosition value="2" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.ClassTableGeneralLiability" caption="" type="string">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="TableNames.ClassTableGeneralLiability" />
                  <separatorChar value="_" />
                  <ordPosition value="2" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.ClassTableCrime" caption="" type="string">
              <value>
                <subString subStrMethod="delimitedList">
                  <sourceString idref="TableNames.ClassTableCrime" />
                  <separatorChar value="_" />
                  <ordPosition value="2" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.IsCrimeMonoline" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="OccupancyPrivate.ClassTableLOB" type="string" />
                  <operand type="string" value="Crime" />
                </comparison>
              </value>
            </private>
            <private id="OccupancyPrivate.ClassCodesCombined" type="string">
              <value>
                <subString subStrMethod="startPosition">
                  <sourceString idref="OccupancyOutputNonShredded.ShortDescription" />
                  <startPos value="1" />
                  <length value="13" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.ClassCodesMonolineGL" type="string">
              <value>
                <subString subStrMethod="startPosition">
                  <sourceString idref="OccupancyOutputNonShredded.ShortDescription" />
                  <startPos value="1" />
                  <length value="7" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.ClassCodesMonolineOther" type="string">
              <value>
                <subString subStrMethod="startPosition">
                  <sourceString idref="OccupancyOutputNonShredded.ShortDescription" />
                  <startPos value="1" />
                  <length value="6" />
                </subString>
              </value>
            </private>
            <private id="OccupancyPrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="OccupancyOutput.OccupancyID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="OccupancyPrivate.DeleteObjectRecord" caption="" type="string">
              <value>
                <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                  <onFailure value="" />
                  <modifySession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="Occupancy" name="objectID" dataType="attribute" />
                    <nameValue idref="OccupancyPrivate.ContextPath" name="context" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="OccupancyPrivate.CurrentState" caption="" type="string" comment="DuckCreekTech_GeneralLiability_Pages_US_4_0_0_0">
              <value>
                <iterator type="string" scope="first" action="sum" idref="Location">
                  <reference idref="LocationInput.State" type="string" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="LocationOutput.LocationID" type="string" />
                      <operand idref="LocationSelectInput.LocationID" type="string" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <object id="Occupancy_Page">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="Occupancy_Page.HideLongDescription" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="OccupancyPrivate.IsLongDescription" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
            </object>
          </object>
          <nameValues />
          <table id="ClassTable" tableType="dataService">
            <fields>
              <field type="int" name="CrimeClass" />
              <field type="int" name="GLPremiumBase" />
              <field type="int" name="GLClassCode" />
              <field type="int" name="FireClassCode" />
              <field type="int" name="ContentsRateGroup" />
              <field type="int" name="ContentsClassLimit" />
              <field type="int" name="MultipleLineCPPPMA" />
              <field type="int" name="LongDescription" />
            </fields>
            <dataService serviceType="dataSet" idref="OccupancyPrivate.DataSetFile">
              <dataKey name="KeyID" type="string" find="eq" />
            </dataService>
          </table>
        </object>
        <object id="AdditionalOtherInterest" path="additionalOtherInterest" override="1">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="AdditionalOtherInterestInput" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AdditionalOtherInterestInput.FirstName" path="FirstName" type="string">
              <definition>
                <caption value="First" />
                <maxLength idref="MaxLength.Name" />
                <required idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AdditionalOtherInterestInput.NameSplit" type="boolean" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="AdditionalOtherInterestInput.LastName" path="LastName" type="string">
              <definition>
                <caption value="Last" />
                <maxLength idref="MaxLength.Name" />
                <required idref="True" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AdditionalOtherInterestInput.NameSplit" type="boolean" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="AdditionalOtherInterestInput.MiddleName" path="MiddleName" type="string">
              <definition>
                <caption value="Middle" />
                <maxLength idref="MaxLength.Name" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AdditionalOtherInterestInput.NameSplit" type="boolean" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="AdditionalOtherInterestInput.Prefix" path="Prefix" type="string">
              <definition>
                <caption value="Prefix" />
                <maxLength idref="MaxLength.Name" />
                <options>
                  <option value="MR" caption="Mr." />
                  <option value="MRS" caption="Mrs." />
                  <option value="MISS" caption="Miss" />
                  <option value="MS" caption="Ms." />
                  <option value="DR" caption="Dr." />
                  <option value="REV" caption="Rev." />
                  <option value="PROF" caption="Prof." />
                </options>
                <formatMask idref="FormatMask.BlankOption" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AdditionalOtherInterestInput.NameSplit" type="boolean" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="AdditionalOtherInterestInput.Suffix" path="Suffix" type="string">
              <definition>
                <caption value="Suffix" />
                <maxLength idref="MaxLength.Name" />
                <options>
                  <option value="JR" caption="Jr." />
                  <option value="SR" caption="Sr." />
                  <option value="II" caption="II" />
                  <option value="III" caption="III" />
                  <option value="MD" caption="M.D." />
                  <option value="PHD" caption="Ph.D." />
                  <option value="ESQ" caption="Esquire" />
                  <option value="CPA" caption="CPA" />
                </options>
                <formatMask idref="FormatMask.BlankOption" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AdditionalOtherInterestInput.NameSplit" type="boolean" />
                        <operand type="int" value="0" />
                      </comparison>
                    </condition>
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="AdditionalOtherInterestInput.NameSplit" path="NameSplit" type="boolean">
              <definition>
                <caption value="First/Middle/Last" />
              </definition>
              <rules>
                <affects>
                  <reference idref="AdditionalOtherInterestInput.Prefix" effect="onChange" />
                  <reference idref="AdditionalOtherInterestInput.FirstName" effect="onChange" />
                  <reference idref="AdditionalOtherInterestInput.MiddleName" effect="onChange" />
                  <reference idref="AdditionalOtherInterestInput.LastName" effect="onChange" />
                  <reference idref="AdditionalOtherInterestInput.Suffix" effect="onChange" />
                </affects>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AdditionalOtherInterestPrivate.ShowNameSplit" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </rules>
            </public>
          </object>
          <object id="AdditionalOtherInterestPrivate" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AdditionalOtherInterestPrivate.ClearAOIAddMode" caption="" type="boolean">
              <value idref="False" />
              <affects>
                <reference idref="AdditionalOtherInterestOutputNonShredded.InAOIAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="AdditionalOtherInterestPrivate.SetAOIAddMode" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="AdditionalOtherInterestOutputNonShredded.InAOIAddMode" effect="setValue" />
              </affects>
            </private>
            <private id="AdditionalOtherInterestPrivate.ClearAOIEditMode" caption="" type="boolean">
              <value idref="False" />
              <affects>
                <reference idref="AdditionalOtherInterestOutputNonShredded.InAOIEditMode" effect="setValue" />
              </affects>
            </private>
            <private id="AdditionalOtherInterestPrivate.SetAOIEditMode" caption="" type="boolean">
              <value idref="True" />
              <affects>
                <reference idref="AdditionalOtherInterestOutputNonShredded.InAOIEditMode" effect="setValue" />
              </affects>
            </private>
            <private id="AdditionalOtherInterestPrivate.NotInAOIAddMode" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="AdditionalOtherInterestOutputNonShredded.InAOIAddMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.NotInAOIEditMode" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="AdditionalOtherInterestOutputNonShredded.InAOIEditMode" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="AdditionalOtherInterestOutput.AdditionalOtherInterestID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.ShowDelete" caption="" type="boolean">
              <value>
                <comparison compare="or">
                  <operand idref="Rules.PolicyIsQuote" type="float" />
                  <operand idref="Rules.PolicyIsInApplication" type="float" />
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="AdditionalOtherInterestPrivate.ShowMarkForDelete" caption="" type="boolean">
              <value>
                <comparison idref="Rules.PolicyIsNotQuoteOrApplication" type="boolean" />
              </value>
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
                <if>
                  <condition idref="PolicyPrivate.IsInAudit" />
                  <then idref="False" />
                </if>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="AdditionalOtherInterestPrivate.ShowAdditionalInterestOnSchedule" caption="" type="boolean">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="AdditionalOtherInterestPrivate.IsAdditionalOtherInterestWithCurrentLine" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="AdditionalOtherInterestOutput.Indicator" />
                  <else idref="False" />
                </if>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.IsAdditionalOtherInterestWithCurrentLine" caption="" type="boolean">
              <value>
                <iterator type="boolean" scope="first" action="count" idref="AdditionalInterests">
                  <where>
                    <comparison compare="eq">
                      <operand idref="AdditionalOtherInterestOutput.AdditionalInterestsID" type="string" />
                      <operand idref="AdditionalInterestsOutput.ID" type="string" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.DeleteObjectRecord" caption="" type="string">
              <value>
                <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                  <onFailure value="" />
                  <modifySession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="GlobalOutput.MasterManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="AdditionalOtherInterest" name="objectID" dataType="attribute" />
                    <nameValue idref="AdditionalOtherInterestPrivate.ContextPath" name="context" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.SetDeleteFlagOnCoverage" caption="" type="boolean">
              <value value="1" />
              <affects>
                <reference idref="AdditionalInterestsOutput.Deleted" effect="setValue" />
              </affects>
            </private>
            <private id="AdditionalOtherInterestPrivate.NameSplitCalc" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" idref="AdditionalOtherInterestPrivate.PrefixCaption" type="string" />
                  <argument op="eq" idref="AdditionalOtherInterestPrivate.PrefixSpace" type="string" />
                  <argument op="eq" idref="AdditionalOtherInterestInput.FirstName" type="string" />
                  <argument op="add" type="string" value=" " />
                  <argument op="add" idref="AdditionalOtherInterestInput.MiddleName" type="string" />
                  <argument op="add" idref="AdditionalOtherInterestPrivate.MiddleSpace" type="string" />
                  <argument op="add" idref="AdditionalOtherInterestInput.LastName" type="string" />
                  <argument op="add" idref="AdditionalOtherInterestPrivate.SuffixSpace" type="string" />
                  <argument op="add" idref="AdditionalOtherInterestPrivate.SuffixCaption" type="string" />
                </calculation>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.MiddleSpace" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="AdditionalOtherInterestInput.MiddleName" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </condition>
                  <then value="" />
                  <else value=" " />
                </if>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.PrefixSpace" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="AdditionalOtherInterestInput.Prefix" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </condition>
                  <then value="" />
                  <else value=" " />
                </if>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.SuffixSpace" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="AdditionalOtherInterestInput.Suffix" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </condition>
                  <then value="" />
                  <else value=" " />
                </if>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.SuffixCaption" type="string">
              <value>
                <select idref="AdditionalOtherInterestInput.Suffix">
                  <case type="string" value="Jr." select="JR" />
                  <case type="string" value="Sr." select="SR" />
                  <case type="string" value="II" select="II" />
                  <case type="string" value="III" select="III" />
                  <case type="string" value="M.D." select="MD" />
                  <case type="string" value="Ph.D." select="PHD" />
                  <case type="string" value="Esquire" select="ESQ" />
                  <case type="string" value="CPA" select="CPA" />
                  <otherwise type="string" value="" />
                </select>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.PrefixCaption" caption="" type="string">
              <value>
                <select idref="AdditionalOtherInterestInput.Prefix">
                  <case type="string" value="Mr." select="MR" />
                  <case type="string" value="Mrs." select="MRS" />
                  <case type="string" value="Miss" select="MISS" />
                  <case type="string" value="Ms." select="MS" />
                  <case type="string" value="Dr." select="DR" />
                  <case type="string" value="Rev." select="REV" />
                  <case type="string" value="Prof." select="PROF" />
                  <otherwise type="string" value="" />
                </select>
              </value>
            </private>
            <private id="AdditionalOtherInterestPrivate.ShowNameSplit" caption="" type="boolean" />
          </object>
          <object id="AdditionalOtherInterestOutput" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="AdditionalOtherInterestOutputNonShredded" abstract="1">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="AdditionalOtherInterestOutputNonShredded.InAOIAddMode" path="InAOIAddMode" type="boolean">
                <definition>
                  <caption value="In AOI Add Mode" />
                </definition>
                <rules>
                  <default idref="True" />
                </rules>
              </public>
              <public id="AdditionalOtherInterestOutputNonShredded.InAOIEditMode" path="InAOIEditMode" type="boolean">
                <definition>
                  <caption value="Additional Other Interest Output Non Shredded In AOI Edit Mode" />
                </definition>
                <rules>
                  <default idref="True" />
                </rules>
              </public>
              <public id="AdditionalOtherInterestOutputNonShredded.EditCaption" path="EditCaption" type="string">
                <definition>
                  <caption value="Edit Caption" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value value="Detail" />
                </rules>
              </public>
              <public id="AdditionalOtherInterestOutputNonShredded.TransactionIDWhenAdded" path="TransactionIDWhenAdded" type="string">
                <definition>
                  <caption value="Transaction ID When Added" />
                </definition>
                <rules>
                  <default idref="PolicyOutputNonShredded.CurrentTransactionID" />
                  <nonRating value="1" />
                </rules>
              </public>
            </object>
            <public id="AdditionalOtherInterestOutput.AdditionalInterestsID" path="AdditionalInterestsID" type="string">
              <definition>
                <caption value="Additional Interests ID" />
                <maxLength idref="MaxLength.ID" />
              </definition>
              <rules>
                <default idref="AdditionalInterestsOutput.ID" />
              </rules>
            </public>
            <public id="AdditionalOtherInterestOutput.Indicator" path="Indicators[Type=&quot;AdditionalOtherInterest&quot;]/bValue" type="boolean">
              <definition>
                <caption value="Indicator" />
              </definition>
              <rules>
                <default idref="True" />
              </rules>
            </public>
            <public id="AdditionalOtherInterestOutput.Deleted" path="@deleted" type="boolean">
              <definition>
                <caption value="Deleted" />
              </definition>
              <rules>
                <default value="0" />
              </rules>
            </public>
          </object>
          <relationships>
            <relationship linkType="mirror">
              <relatedObject idref="AdditionalInterests" />
              <foreignKey idref="AdditionalOtherInterestOutput.AdditionalInterestsID" />
            </relationship>
          </relationships>
        </object>
        <object id="LocationToOtherInterest" path="locationtootherinterest">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="LocationToOtherInterestInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="LocationToOtherInterestInput.LocationID" path="LocationID" type="string">
              <definition>
                <caption value="Location" />
                <options codeRef="Location" captionRef="LocationInput.Description" />
                <maxLength idref="MaxLength.ID" />
              </definition>
            </public>
            <public id="LocationToOtherInterestInput.OtherInterestID" path="OtherInterestID" type="string">
              <definition>
                <caption value="Other Interest" />
                <options codeRef="AdditionalOtherInterest" captionRef="AdditionalOtherInterestOutputNonShredded.Description" />
                <maxLength idref="MaxLength.ID" />
              </definition>
            </public>
          </object>
          <object id="LocationToOtherInsuredsOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="LocationToOtherInsuredsOutput.Description" path="Description" type="string">
              <definition>
                <caption value="Description" />
                <maxLength idref="MaxLength.Description" />
              </definition>
              <rules>
                <value>
                  <calculation>
                    <argument op="eq" idref="AdditionalOtherInterestOutputNonShredded.Description" type="string" />
                    <argument op="add" type="string" value="  @ " />
                    <argument op="add" idref="LocationInput.Description" type="string" />
                  </calculation>
                </value>
              </rules>
            </public>
          </object>
          <relationships>
            <relationship>
              <relatedObject idref="Location" />
              <foreignKey idref="LocationToOtherInterestInput.LocationID" />
            </relationship>
            <relationship>
              <relatedObject idref="AdditionalOtherInterest" />
              <foreignKey idref="LocationToOtherInterestInput.OtherInterestID" />
            </relationship>
          </relationships>
          <object id="LocationToOtherInsuredsPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="LocationToOtherInsuredsPrivate.AssignLocations" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="gt">
                    <operand idref="AOIGroup.Count" type="int" />
                    <operand type="int" value="0" />
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="LocationToOtherInsuredsPrivate.CorrectLocation" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="LocationSelectInput.LocationID" type="string" />
                  <operand idref="LocationToOtherInterestInput.LocationID" type="string" />
                </comparison>
              </value>
            </private>
          </object>
        </object>
        <object id="AdditionalNamedInsured" path="additionalnamedinsured">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <object id="AdditionalNamedInsuredInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AdditionalNamedInsuredInput.Name" path="AdditionalNamedInsuredName" type="string">
              <definition>
                <caption value="Name" />
                <maxLength idref="MaxLength.Description" />
              </definition>
            </public>
            <object id="AdditionalNamedInsuredPolicyUnderwriting">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="AdditionalNamedInsuredPolicyUnderwriting.Address1" path="address/Address1" type="string">
                <definition>
                  <caption value="Address 1" />
                  <maxLength idref="MaxLength.Address" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.Address2" path="address/Address2" type="string">
                <definition>
                  <caption value="Address 2" />
                  <maxLength idref="MaxLength.Address" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.BusinessPhoneNumber" path="BusinessPhoneNumber" type="string">
                <definition>
                  <caption value="Business Phone #" />
                  <formatMask idref="FormatMask.PhoneFax" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.City" path="address/City" type="string">
                <definition>
                  <caption value="City" />
                  <maxLength idref="MaxLength.City" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.EntityType" path="EntityType" type="string">
                <definition>
                  <caption value="Entity Type" />
                  <options>
                    <option value="Corporation" caption="Corporation" />
                    <option value="Individual" caption="Individual" />
                    <option value="JointVenture" caption="Joint Venture" />
                    <option value="LLC" caption="LLC" />
                    <option value="NotForProfitOrg" caption="Not For Profit Org" />
                    <option value="Partnership" caption="Partnership" />
                    <option value="SCorporation" caption="Subchapter &quot;S&quot; Corporation" />
                    <option value="Trust" caption="Trust" />
                    <option value="Other" caption="Other" />
                  </options>
                  <formatMask idref="FormatMask.BlankOption" />
                  <maxLength idref="MaxLength.Type" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.FEINSSN" path="FEINSSN" type="string">
                <definition>
                  <caption value="FEIN or Soc Sec #" />
                  <maxLength idref="MaxLength.SSN" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.GLCode" path="GLCode" type="string">
                <definition>
                  <caption value="GL Code" />
                  <maxLength value="12" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.NAICS" path="NAICS" type="string">
                <definition>
                  <caption value="NAICS" />
                  <maxLength value="6" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.NumberMembersManagers" path="NumberMembersManagers" type="int">
                <definition>
                  <caption value="No. of Members and Managers" />
                  <maxLength value="3" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.SIC" path="SIC" type="string">
                <definition>
                  <caption value="SIC" />
                  <maxLength value="6" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.State" path="address/State" type="string">
                <definition>
                  <caption value="State" />
                  <maxLength idref="MaxLength.State" />
                  <options idref="StateAbbreviations" name="State" />
                  <formatMask idref="FormatMask.BlankOption" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.WebsiteAddress" path="WebsiteAddress" type="string">
                <definition>
                  <caption value="Website Address" />
                </definition>
              </public>
              <public id="AdditionalNamedInsuredPolicyUnderwriting.ZipCode" path="address/ZipCode" type="string">
                <definition>
                  <caption value="Zip Code" />
                  <maxLength idref="MaxLength.Zip" />
                  <formatMask idref="FormatMask.Zipcode" />
                </definition>
              </public>
            </object>
            <public id="AdditionalNamedInsuredInput.DatabaseID" path="@DatabaseId" type="string">
              <definition>
                <caption value="Database ID" />
              </definition>
              <rules>
                <default value="0" />
              </rules>
            </public>
          </object>
          <object id="AdditionalNamedInsuredOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AdditionalNamedInsuredOutput.ID" path="@id" type="string">
              <definition>
                <caption value="ID" />
              </definition>
            </public>
            <object id="AdditionalNamedInsuredOutputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="AdditionalNamedInsuredOutputNonShredded.PartyTypeCode" path="PartyTypeCode" type="string">
                <definition>
                  <caption value="Party Type Code" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <default value="O" />
                </rules>
              </public>
            </object>
          </object>
          <object id="AdditionalNamedInsuredPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AdditionalNamedInsuredPrivate.ShowNumberMembersManagers" caption="" type="boolean">
              <value>
                <comparison compare="eq">
                  <operand idref="AdditionalNamedInsuredPolicyUnderwriting.EntityType" type="string" />
                  <operand type="string" value="LLC" />
                </comparison>
              </value>
            </private>
            <private id="AdditionalNamedInsuredPrivate.ContextPath" type="string" comment="">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="AdditionalNamedInsuredOutput.ID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="AdditionalNamedInsuredPrivate.AddPartyRequest" caption="" type="string">
              <value>
                <request verb="PartyMap.policyToPartyRq" get="@DatabaseId">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession idref="True" />
                  <usesSession idref="True" />
                  <default value="0" />
                  <nameValues>
                    <nameValue idref="AccountDetailPage.ClientID" name="partyId" dataType="attribute" />
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="AdditionalNamedInsured" name="mappingId" dataType="attribute" />
                    <nameValue idref="AdditionalNamedInsuredOutput.ID" name="contextId" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
              <affects>
                <reference idref="AdditionalNamedInsuredInput.DatabaseID" effect="setValue" />
              </affects>
            </private>
            <private id="AdditionalNamedInsuredPrivate.ShowAddToParty" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="AdditionalNamedInsuredInput.DatabaseID" type="string" />
                        <operand type="int" value="0" />
                      </comparison>
                      <comparison compare="ne">
                        <operand idref="AdditionalNamedInsuredInput.Name" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </comparison>
                    <comparison compare="ne">
                      <operand idref="AdditionalNamedInsuredPolicyUnderwriting.State" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </comparison>
                  <comparison compare="ne">
                    <operand idref="AdditionalNamedInsuredPolicyUnderwriting.BusinessPhoneNumber" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </comparison>
              </value>
            </private>
          </object>
        </object>
        <object id="Account_Geocode">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="Account_GeocodeOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="Account_GeocodeOutput.Confidence" path="Confidence" type="string">
              <definition>
                <caption value="Confidence:" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <public id="Account_GeocodeOutput.GeocodeMatchCode" path="GeocodeMatchCode" type="string">
              <definition>
                <caption value="Geocode Match Code" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <public id="Account_GeocodeOutput.GeocodeStatus" path="GeocodeStatus" type="string">
              <definition>
                <caption value="Geocode Status" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="Account_GeocodeOutput.LastVerified" type="date" />
                        <operand idref="DateTime.CurrentDate30DaysPrior" type="date" />
                      </comparison>
                    </condition>
                    <then value="Verified" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="gt">
                          <operand idref="Account_GeocodeOutput.LastVerified" type="date" />
                          <operand idref="DateTime.Minimum" type="date" />
                        </comparison>
                        <comparison compare="le">
                          <operand idref="Account_GeocodeOutput.LastVerified" type="date" />
                          <operand idref="DateTime.CurrentDate30DaysPrior" type="date" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then value="Expired" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="le">
                        <operand idref="Account_GeocodeOutput.LastVerified" type="date" />
                        <operand idref="DateTime.Minimum" type="date" />
                      </comparison>
                    </condition>
                    <then value="Unverified" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="Account_GeocodeOutput.LastVerified" path="LastVerified" type="date">
              <definition>
                <caption value="Last Verified" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.DateTime" />
              </definition>
            </public>
            <public id="Account_GeocodeOutput.Latitude" path="Latitude" type="string">
              <definition>
                <caption value="Latitude" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <public id="Account_GeocodeOutput.Longitude" path="Longitude" type="string">
              <definition>
                <caption value="Longitude" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
            <object id="Account_GeocodeOutputNonShredded">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <public id="Account_GeocodeOutputNonShredded.AddressInVerifyState" type="boolean" path="AddressInVerifyState" alwaysRun="1" />
              <public id="Account_GeocodeOutputNonShredded.GeocodeStatusDisplay" path="GeocodeStatusDisplay" type="string">
                <definition>
                  <readOnly idref="True" />
                  <caption value="" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value>
                    <if>
                      <condition>
                        <comparison compare="eq">
                          <operand idref="Account_GeocodeOutput.GeocodeStatus" type="string" />
                          <operand type="string" value="Unverified" />
                        </comparison>
                      </condition>
                      <then idref="Account_GeocodeOutput.GeocodeStatus" />
                      <else idref="Account_GeocodePrivate.GeocodeStatusWithDate" />
                    </if>
                  </value>
                </rules>
              </public>
            </object>
          </object>
          <object id="Account_GeocodePrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="Account_GeocodePrivate.AddressReadOnly" caption="" type="boolean" path="AddressReadOnly2">
              <misc>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="Account_GeocodeOutputNonShredded.AddressInVerifyState" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="True" />
                </if>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="Account_GeocodePrivate.IsAccountInputLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="True" />
                </if>
              </misc>
            </private>
            <private id="Account_GeocodePrivate.AddressVerifiable" caption="" type="string" path="AddressVerifiable">
              <value>
                <if>
                  <condition>
                    <comparison compare="or">
                      <comparison compare="or">
                        <comparison compare="or">
                          <comparison compare="eq">
                            <operand idref="AccountInput.Address1" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="AccountInput.City" type="string" />
                            <operand type="string" value="" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="AccountInput.State" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="AccountInput.ZipCode" type="string" />
                        <operand type="string" value="" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="Must enter Address 1, City, State &amp; Zip before address verification." />
                  <else value="" />
                </if>
              </value>
              <affects>
                <reference idref="Account_GeocodePrivate.GeocodeRq" effect="postEffect" />
              </affects>
            </private>
            <private id="Account_GeocodePrivate.ClearLastVerified" caption="" type="date" path="ClearLastVerified">
              <value value="" />
              <affects>
                <reference idref="Account_GeocodeOutput.LastVerified" effect="setValue" />
              </affects>
            </private>
            <private id="Account_GeocodePrivate.Export" caption="" type="string" path="Export">
              <value>
                <request verb="ManuScript.exportRq" get="/*" validRef="Account_GeocodePrivate.IsAddressVerifiable">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="PBBI Account Geocoding" name="mappingId" dataType="attribute" />
                    <nameValue value="geo" name="rootName" dataType="attribute" />
                    <nameValue value="_IntegrationData^pitneybowes" name="responseSessionPath" dataType="attribute" />
                    <nameValue value="descendant::GeocodeUS" name="responseSelect" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="Account_GeocodePrivate.GeocodeRq" type="string" caption="Search Rq" path="SearchRq">
              <affects>
                <reference idref="Account_GeocodePrivate.Export" effect="preEffect" />
              </affects>
              <value idref="PitneyBowesPrivate.GeocodeRq" />
            </private>
            <private id="Account_GeocodePrivate.GeocodeStatusWithDate" type="string" caption="Geocode Status">
              <value>
                <calculation>
                  <argument op="eq" idref="Account_GeocodeOutput.GeocodeStatus" type="string" />
                  <argument op="add" type="string" value=", " />
                  <argument op="add" idref="Account_GeocodeOutput.LastVerified" type="date" />
                </calculation>
              </value>
            </private>
            <private id="Account_GeocodePrivate.IsAccountInputLocked" caption="" type="boolean" path="IsAccountInputLocked">
              <value idref="Geocode.IsVerified" />
            </private>
            <private id="Account_GeocodePrivate.IsAccountInputNotLocked" caption="" type="boolean" path="IsAccountInputNotLocked">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="Geocode.IsVerified" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then idref="False" />
                  <else idref="True" />
                </if>
              </value>
            </private>
            <private id="Account_GeocodePrivate.ManuscriptID" caption="" type="string">
              <value idref="PitneyBowesPrivate.ManuscriptID" />
            </private>
            <private id="Account_GeocodePrivate.SetLastVerifiedToToday" caption="" type="string">
              <value idref="DateTime.CurrentDate" />
              <affects>
                <reference idref="Account_GeocodeOutput.LastVerified" effect="setValue" />
              </affects>
            </private>
            <private id="Account_GeocodePrivate.ShowPBBIEditAddress" caption="" type="boolean" path="ShowPBBIEditAddress">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="Account_GeocodePrivate.IsAccountInputLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="AccountDetailPage.IsReadOnly" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="Geocode.IsVerified" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="Account_GeocodePrivate.ShowPBBIVerifyAddress" caption="" type="boolean" path="ShowPBBIVerifyAddress">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="Account_GeocodePrivate.IsAccountInputNotLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="AccountDetailPage.IsReadOnly" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="Account_GeocodeOutputNonShredded.AddressInVerifyState" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="Account_GeocodePrivate.IsAddressVerifiable" caption="" type="boolean" path="AddressVerifiable">
              <value>
                <comparison compare="eq">
                  <operand idref="Account_GeocodePrivate.AddressVerifiable" type="string" />
                  <operand type="string" value="" />
                </comparison>
              </value>
            </private>
          </object>
          <object id="Account_InteractiveMap">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="Account_InteractiveMap.JavaScript" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="DCT.Integration.PBBI.RIA.mapInit('ApplicationMap', 'InteractiveMap.FileLocation', '', '" />
                  <argument op="add" idref="Account_GeocodePrivate.ManuscriptID" type="string" />
                  <argument op="add" type="string" value="','" />
                  <argument op="add" idref="PolicyPrivate.PolicyID" type="string" />
                  <argument op="add" type="string" value="');" />
                </calculation>
              </value>
            </private>
            <private id="Account_InteractiveMap.ShowPBBIInteractiveMapLink" caption="" type="boolean" path="ShowPBBIInteractiveMapLink">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="Account_GeocodePrivate.IsAccountInputLocked" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PitneyBowesOutput.InteractiveMapEnabled" type="string" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="AccountDetailPage.IsReadOnly" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="Geocode.IsVerified" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="Context.IsConsumer" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <private id="Account_InteractiveMap.ViewMapPreEvent" type="string" caption="View Map" path="ViewMapPreEvent">
              <value>
                <request verb="ManuScript.exportRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="PBBI Account View Map" name="mappingId" dataType="attribute" />
                    <nameValue idref="AccountInput.ID" name="contextId" dataType="attribute" />
                    <nameValue value="viewmap" name="rootName" dataType="attribute" />
                    <nameValue value="_Integration^data/pitneybowes/viewmap" name="responseSessionPath" dataType="attribute" />
                    <nameValue value="ManuScript.exportRs/viewmap/ViewMap" name="responseSelect" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="Account_InteractiveMap.ViewMapPreEvent" type="string" />
                      <operand type="string" value="success" />
                    </comparison>
                  </condition>
                  <then value="" />
                </if>
              </misc>
            </private>
          </object>
          <object id="Geocode">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="Geocode.IsVerified" type="boolean" path="IsVerified">
              <value>
                <comparison compare="eq">
                  <operand idref="Account_GeocodeOutput.GeocodeStatus" type="string" />
                  <operand type="string" value="Verified" />
                </comparison>
              </value>
            </private>
          </object>
        </object>
        <object id="AccountOutput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="AccountOutputNonShredded">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="AccountOutputNonShredded.LocationScheduleFilter" path="LocationScheduleFilter" type="string">
              <definition>
                <caption value="Filter By" />
                <options>
                  <option value="Description" caption="Location Name" />
                  <option value="address/Address1" caption="Address 1" />
                  <option value="address/City" caption="City" />
                  <option value="address/State" caption="State" />
                  <option value="address/ZipCode" caption="ZIP Code" />
                </options>
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <default value="Description" />
              </rules>
            </public>
            <public id="AccountOutputNonShredded.LocationScheduleSearch" path="LocationScheduleSearch" type="string">
              <definition>
                <caption value="" />
                <maxLength idref="MaxLength.Address" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition idref="LocationSchedulePage.IsReadOnly" />
                    <then value="" />
                  </if>
                </misc>
              </rules>
            </public>
          </object>
        </object>
      </object>
      <object id="System" path="system" abstract="1">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="Global" path="global" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="GlobalOutput" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="GlobalPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="GlobalPrivate.ProductManuScriptID" type="string" comment="" caption="Loss Cost Table ManuScript ID" alwaysRun="1">
                <value idref="PolicyPrivate.ProductManuscriptID" />
              </private>
              <private id="GlobalPrivate.LeavingCPP" caption="" type="boolean">
                <value>
                  <comparison compare="and">
                    <comparison compare="and">
                      <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                      <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                    </comparison>
                    <operand idref="PolicyPrivate.IsNotPackagePolilcy" type="boolean" />
                  </comparison>
                </value>
              </private>
              <private id="GlobalPrivate.LeavingLOB" caption="" type="boolean">
                <value>
                  <comparison compare="and">
                    <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                    <comparison compare="eq">
                      <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </value>
              </private>
              <public id="GlobalPrivate.SetLineDescription" path="GlobalPrivateSetLineDescription" type="string" alwaysRun="1">
                <definition>
                  <caption value="Set Line Description" />
                  <maxLength idref="MaxLength.sValue" />
                </definition>
                <rules>
                  <value idref="LineOutput.Type" />
                  <affects>
                    <reference idref="SelectedLineInput.LineDescription" effect="setValue" />
                  </affects>
                </rules>
              </public>
              <private id="GlobalPrivate.ShowPricing" caption="" type="boolean" alwaysRun="1">
                <value>
                  <comparison compare="and">
                    <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                    <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                  </comparison>
                </value>
              </private>
            </object>
            <public id="GlobalOutput.StartedInCPP" path="StartedInCPP" type="boolean">
              <definition>
                <caption value="Started In CPP" />
              </definition>
              <rules>
                <default idref="True" />
              </rules>
            </public>
            <public id="GlobalOutput.CurrentlyInCPP" type="boolean" comment="" path="CurrentlyInCPP">
              <rules>
                <default idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="gt">
                        <operand idref="PolicyPrivate.LineCount" type="int" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </rules>
              <definition>
                <caption value="Currently in CPP" />
              </definition>
            </public>
            <private id="GlobalOutput.CurrentlyInCPPTrue" caption="" type="boolean" alwaysRun="1">
              <value idref="True" />
              <affects>
                <reference idref="GlobalOutput.CurrentlyInCPP" effect="setValue" />
              </affects>
            </private>
            <private id="GlobalOutput.CurrentlyInCPPFalse" caption="" type="boolean" alwaysRun="1">
              <value idref="False" />
              <affects>
                <reference idref="GlobalOutput.CurrentlyInCPP" effect="setValue" />
                <reference idref="GlobalPrivate.SetLineDescription" effect="postEffect" />
              </affects>
            </private>
            <public id="GlobalOutput.CannotDeleteLocationMessage" path="GlobalOutput" type="string">
              <definition>
                <caption value="Cannot Delete Location Message" />
                <readOnly idref="True" />
                <maxLength value="50" />
              </definition>
              <rules>
                <value idref="LocationPrivate.CannotDeleteMessage" />
              </rules>
            </public>
            <public id="GlobalOutput.LocationIDToCompare" path="LocationIDToCompare" type="string">
              <definition>
                <caption value="Location ID To Compare" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.ID" />
              </definition>
            </public>
            <public id="GlobalOutput.Spacer" path="GlobalOutputSpacer" type="string">
              <definition>
                <caption value="" />
                <maxLength value="0" />
                <readOnly idref="True" />
              </definition>
              <rules>
                <default value="" />
              </rules>
            </public>
            <public id="GlobalOutput.MasterManuScriptID" path="MasterManuScriptID" type="string" comment="Shared" alwaysRun="1">
              <definition>
                <caption value="Master ManuScript ID" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <value>
                  <session sessionValue="manuscriptID" />
                </value>
              </rules>
            </public>
            <private id="GlobalOutput.MonolineToPackageSetup" caption="" type="string">
              <affects>
                <reference idref="GlobalOutput.SetStartedInCPPTrue" effect="postEffect" />
                <reference idref="GlobalOutput.CurrentlyInCPPTrue" effect="postEffect" />
                <reference idref="PolicyPrivate.SetLineOfBusinessPackage" effect="postEffect" />
              </affects>
            </private>
            <private id="GlobalOutput.GlobalRootPath" caption="" type="string">
              <value>
                <request verb="Settings.getGlobalRootPathRq" get="@path">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                </request>
              </value>
            </private>
            <private id="GlobalOutput.SetStartedInCPPTrue" caption="" type="boolean" alwaysRun="1">
              <value idref="True" />
              <affects>
                <reference idref="GlobalOutput.StartedInCPP" effect="setValue" />
              </affects>
            </private>
          </object>
        </object>
        <object id="Page" path="page" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="PageOutput" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
          </object>
          <object id="PagePrivate" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="LocationDetailPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LocationDetailPage.Show" type="boolean">
                <value idref="LocationDetailPage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="LocationDetailPage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationDetailPage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Location Detail" />
                    <else idref="LocationDetailPage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="LocationDetailPage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Location Detail" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="LocationDetailPage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Location Detail Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="LocationDetailPage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="LocationDetailPage.SetPageName" effect="postEffect" />
                  <reference idref="LocationDetailPage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="LocationDetailPage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="LocationDetailPage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="LocationDetailPage.IsINotInDialogMode" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="LocationDetailPage.IsInDialogMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="LocationDetailPage.IsInDialogMode" type="boolean">
                <value>
                  <comparison compare="gt">
                    <operand idref="LocationGroup.Count" type="int" />
                    <operand type="int" value="1" />
                  </comparison>
                </value>
              </private>
              <private id="LocationDetailPage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="LocationDetailPage.Name" type="string">
                <value value="LocationDetail" />
              </private>
              <private id="LocationDetailPage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="LocationDetailPage.SetPageName" type="string">
                <value idref="LocationDetailPage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="LocationDetailPage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Location Detail Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="LocationSchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LocationSchedulePage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationSchedulePage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Location Schedule" />
                    <else idref="LocationSchedulePage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="LocationSchedulePage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Location Schedule" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="LocationSchedulePage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Location Schedule Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="LocationSchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="LocationSchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="LocationSchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="LocationSchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="LocationSchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="LocationSchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="LocationSchedulePage.Name" type="string">
                <value value="LocationSchedule" />
              </private>
              <private id="LocationSchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="LocationSchedulePage.SetPageName" type="string">
                <value idref="LocationSchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="LocationSchedulePage.Show" type="boolean">
                <value idref="LocationSchedulePage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                        <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="LocationSchedulePage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Location Schedule Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="OccupancySchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="OccupancySchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="OccupancySchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="OccupancySchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="OccupancySchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="OccupancySchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="OccupancySchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="OccupancySchedulePage.Name" type="string">
                <value value="OccupancySchedule" />
              </private>
              <private id="OccupancySchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="OccupancySchedulePage.SetPageName" type="string">
                <value idref="OccupancySchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancySchedulePage.Show" type="boolean">
                <value idref="OccupancySchedulePage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="OccupancyDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="OccupancyGroup.IsRequired" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="OccupancySchedulePage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Occupancy Schedule Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="OccupancySchedulePage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Occupancy Schedule" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="OccupancySchedulePage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="OccupancySchedulePage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Occupancy Schedule" />
                    <else idref="OccupancySchedulePage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="OccupancySchedulePage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Occupancy Schedule Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="OccupancyDetailPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="OccupancyDetailPage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="OccupancyDetailPage.SetPageName" effect="postEffect" />
                  <reference idref="OccupancyDetailPage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="OccupancyDetailPage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="OccupancyDetailPage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="OccupancyDetailPage.IsINotInDialogMode" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="OccupancyDetailPage.IsInDialogMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="OccupancyDetailPage.IsInDialogMode" type="boolean">
                <value>
                  <comparison compare="gt">
                    <operand idref="OccupancyGroup.Count" type="int" />
                    <operand type="int" value="1" />
                  </comparison>
                </value>
              </private>
              <private id="OccupancyDetailPage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="OccupancyDetailPage.Name" type="string">
                <value value="OccupancyDetail" />
              </private>
              <private id="OccupancyDetailPage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="OccupancyDetailPage.SetPageName" type="string">
                <value idref="OccupancyDetailPage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="OccupancyDetailPage.Show" type="boolean">
                <value idref="OccupancyDetailPage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="OccupancyDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="OccupancyGroup.IsRequired" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="OccupancyDetailPage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Occupancy Detail Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="OccupancyDetailPage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Occupancy Detail" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="OccupancyDetailPage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="OccupancyDetailPage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Occupancy Detail" />
                    <else idref="OccupancyDetailPage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="OccupancyDetailPage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Occupancy Detail Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="RateSchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="RateSchedulePage.Show" type="boolean" alwaysRun="1">
                <value idref="RateSchedulePage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition idref="GlobalPrivate.ShowPricing" />
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="RateSchedulePage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="RateSchedulePage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Rate" />
                    <else idref="RateSchedulePage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="RateSchedulePage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Rate Schedule" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="RateSchedulePage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Rate Schedule Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="RateSchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="RateSchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="RateSchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="RateSchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="RateSchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="RateSchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="RateSchedulePage.Name" type="string">
                <value value="RateSchedule" />
              </private>
              <private id="RateSchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="RateSchedulePage.SetPageName" type="string">
                <value idref="RateSchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="RateSchedulePage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Rate Schedule Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="RiskSchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="RiskSchedulePage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="RiskSchedulePage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Risk" />
                    <else idref="RiskSchedulePage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="RiskSchedulePage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Risk Schedule" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="RiskSchedulePage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Risk Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="RiskSchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="RiskSchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="RiskSchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="RiskSchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="RiskSchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="RiskSchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="RiskSchedulePage.Name" type="string">
                <value value="RiskSchedule" />
              </private>
              <private id="RiskSchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="RiskSchedulePage.SetPageName" type="string">
                <value idref="RiskSchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="RiskSchedulePage.Show" type="boolean">
                <value idref="RiskSchedulePage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="RiskSchedulePage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Risk Schedule Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="LineSchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LineSchedulePage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LineSchedulePage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Line Schedule" />
                    <else idref="LineSchedulePage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="LineSchedulePage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Line Schedule" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="LineSchedulePage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Line Schedule Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="LineSchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="LineSchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="LineSchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="LineSchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="LineSchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="LineSchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="LineSchedulePage.Name" type="string">
                <value value="LineSchedule" />
              </private>
              <private id="LineSchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="LineSchedulePage.SetPageName" type="string">
                <value idref="LineSchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="LineSchedulePage.Show" type="boolean">
                <value idref="LineSchedulePage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="LineSchedulePage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Line Schedule Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="BuildingDetailPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="BuildingDetailPage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="BuildingDetailPage.CheckForInitialEntry" effect="postEffect" />
                  <reference idref="BuildingDetailPage.SetPageName" effect="postEffect" />
                  <reference idref="BuildingDetailPage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="BuildingDetailPage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="BuildingDetailPage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="BuildingDetailPage.IsINotInDialogMode" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="BuildingDetailPage.IsInDialogMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="BuildingDetailPage.IsInDialogMode" type="boolean">
                <value>
                  <comparison compare="gt">
                    <operand idref="BuildingGroup.Count" type="int" />
                    <operand type="int" value="1" />
                  </comparison>
                </value>
              </private>
              <private id="BuildingDetailPage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="BuildingDetailPage.Name" type="string">
                <value value="BuildingDetail" />
              </private>
              <private id="BuildingDetailPage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="BuildingDetailPage.SetPageName" type="string">
                <value idref="BuildingDetailPage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="BuildingDetailPage.Show" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="BuildingDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="BuildingGroup.IsRequired" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="BuildingDetailPage.SetCSP" type="string" alwaysRun="1">
                <value idref="SelectedOccupancyPrivate.CSPForThisOccupancy" />
                <affects>
                  <reference idref="BuildingOutput.CSP" effect="setValue" />
                  <reference idref="BuildingDetailPage.SetCSP" effect="postEffect" />
                </affects>
              </private>
              <private id="BuildingDetailPage.SetSelectedOccupancy" type="string">
                <value idref="BuildingOutput.CSP" />
              </private>
              <private id="BuildingDetailPage.SetSelectedOccupancyID" type="string">
                <value idref="BuildingPrivate.LastSelectedOccupancyID" />
                <affects>
                  <reference idref="SelectedOccupancyInput.OccupancyID" effect="setValue" />
                </affects>
              </private>
              <private id="BuildingDetailPage.SetLastSelectedOccupancyID" type="string">
                <value idref="SelectedOccupancyInput.OccupancyID" />
                <affects>
                  <reference idref="BuildingPrivate.LastSelectedOccupancyID" effect="setValue" />
                </affects>
              </private>
              <private id="BuildingDetailPage.OnInitialEntry" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="BuildingDetailPage.SetSelectedOccupancyID" effect="postEffect" />
                </affects>
              </private>
              <private id="BuildingDetailPage.CheckForInitialEntry" type="boolean">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="BuildingDetailPage.IsCurrentPage" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="BuildingDetailPage.OnRefreshEntry" />
                    <else idref="BuildingDetailPage.OnInitialEntry" />
                  </if>
                </value>
              </private>
              <private id="BuildingDetailPage.OnRefreshEntry" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="BuildingDetailPage.SetCSP" effect="postEffect" />
                  <reference idref="BuildingDetailPage.SetLastSelectedOccupancyID" effect="postEffect" />
                </affects>
              </private>
            </object>
            <object id="BuildingSchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="BuildingSchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="BuildingSchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="BuildingSchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="BuildingSchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="BuildingSchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="BuildingSchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="BuildingSchedulePage.Name" type="string">
                <value value="BuildingSchedule" />
              </private>
              <private id="BuildingSchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="BuildingSchedulePage.SetPageName" type="string">
                <value idref="BuildingSchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="BuildingSchedulePage.Show" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="BuildingDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="AOISchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="AOISchedulePage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show AOI Schedule Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="AOISchedulePage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AOISchedulePage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Other Interests Schedule" />
                    <else idref="AOISchedulePage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="AOISchedulePage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="AOI Schedule" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="AOISchedulePage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="AOI Schedule Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="AOISchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="AOISchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="AOISchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="AOISchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="AOISchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="AOISchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="AOISchedulePage.Name" type="string">
                <value value="AOISchedule" />
              </private>
              <private id="AOISchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="AOISchedulePage.SetPageName" type="string">
                <value idref="AOISchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="AOISchedulePage.Show" type="boolean">
                <value idref="AOISchedulePage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AOIDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AOIGroup.IsRequired" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="AOIDetailPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="AOIDetailPage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AOIDetailPage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Other Interests" />
                    <else idref="AOIDetailPage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="AOIDetailPage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="AOI Detail" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="AOIDetailPage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="AOI Detail Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="AOIDetailPage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="AOIDetailPage.SetPageName" effect="postEffect" />
                  <reference idref="AOIDetailPage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="AOIDetailPage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="AOIDetailPage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="AOIDetailPage.IsINotInDialogMode" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="AOIDetailPage.IsInDialogMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="AOIDetailPage.IsInDialogMode" type="boolean">
                <value idref="True" />
              </private>
              <private id="AOIDetailPage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="AOIDetailPage.Name" type="string">
                <value value="AOIDetail" />
              </private>
              <private id="AOIDetailPage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="AOIDetailPage.SetPageName" type="string">
                <value idref="AOIDetailPage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="AOIDetailPage.Show" type="boolean">
                <value idref="AOIDetailPage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AOIDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AOIGroup.IsRequired" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="AOIDetailPage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show AOI Detail Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="LocationToOtherInterestDetailPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LocationToOtherInterestDetailPage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="LocationToOtherInterestSchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="LocationToOtherInterestDetailPage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="LocationToOtherInterestDetailPage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="LocationToOtherInterestDetailPage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="LocationToOtherInterestDetailPage.IsINotInDialogMode" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="LocationToOtherInterestDetailPage.IsInDialogMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="LocationToOtherInterestDetailPage.IsInDialogMode" type="boolean">
                <value idref="True" />
              </private>
              <private id="LocationToOtherInterestDetailPage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="LocationToOtherInterestDetailPage.Name" type="string">
                <value value="LocationToOtherInsuredDetail" />
              </private>
              <private id="LocationToOtherInterestDetailPage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="LocationToOtherInterestDetailPage.SetPageName" type="string">
                <value idref="LocationToOtherInterestDetailPage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="LocationToOtherInterestDetailPage.Show" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationToOtherInterestDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationToOtherInterestGroup.IsRequired" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="LocationToOtherInterestSchedulePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LocationToOtherInterestSchedulePage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="LocationToOtherInterestSchedulePage.SetPageName" effect="postEffect" />
                  <reference idref="LocationToOtherInterestSchedulePage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="LocationToOtherInterestSchedulePage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="LocationToOtherInterestSchedulePage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="LocationToOtherInterestSchedulePage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="LocationToOtherInterestSchedulePage.Name" type="string">
                <value value="LocationToOtherInsuredSchedule" />
              </private>
              <private id="LocationToOtherInterestSchedulePage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="LocationToOtherInterestSchedulePage.SetPageName" type="string">
                <value idref="LocationToOtherInterestSchedulePage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="LocationToOtherInterestSchedulePage.Show" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationToOtherInterestDetailPage.IsInDialogMode" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="LocationToOtherInterestGroup.IsRequired" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="AgencyDetailPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="AgencyDetailPage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AgencyDetailPage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Agency" />
                    <else idref="AgencyDetailPage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="AgencyDetailPage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Agency Detail" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="AgencyDetailPage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Agency Detail Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="AgencyDetailPage.InitializePage" type="boolean">
                <value idref="True" />
                <affects>
                  <reference idref="AccountDetailPage.SetPageName" effect="postEffect" />
                  <reference idref="AccountDetailPage.OnEntry" effect="postEffect" />
                </affects>
              </private>
              <private id="AgencyDetailPage.IsCurrentPage" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.CurrentPage" type="string" />
                    <operand idref="AgencyDetailPage.Name" type="string" />
                  </comparison>
                </value>
              </private>
              <private id="AgencyDetailPage.IsReadOnly" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="AgencyDetailPage.Name" type="string">
                <value value="AgencyDetail" />
              </private>
              <private id="AgencyDetailPage.OnEntry" type="boolean">
                <value idref="True" />
              </private>
              <private id="AgencyDetailPage.SetPageName" type="string">
                <value idref="AgencyDetailPage.Name" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
              <private id="AgencyDetailPage.Show" type="boolean">
                <value idref="AgencyDetailPage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="AgencyDetailPage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Agency Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="MiscEndorsementsPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="MiscEndorsementsPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" type="int" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" type="int" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" type="int" />
                  </if>
                </misc>
              </private>
              <private id="MiscEndorsementsPage.Show" caption="" type="float">
                <value>
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PageOutput.DialogMode" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <operand idref="LinePrivate.ShowMiscEndorsements" type="boolean" />
                  </comparison>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="ReinsurancePage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="ReinsurancePage.IsReadOnly" caption="" type="string">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="ReinsurancePage.Show" caption="" type="boolean" alwaysRun="1">
                <value idref="True" />
              </private>
            </object>
            <object id="ExperienceRatingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="ExperienceRatingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" type="int" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" type="int" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="isnot">
                        <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                        <operand type="string" value="New,Renew,Rewrite,Restart" />
                      </comparison>
                    </condition>
                    <then idref="True" type="int" />
                  </if>
                </misc>
              </private>
              <private id="ExperienceRatingPage.Show" caption="" type="float">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.DialogMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
            </object>
            <object id="AdditionalNamedInsuredPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="AdditionalNamedInsuredPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition idref="PolicyPrivate.IsInInterimAudit" />
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="AdditionalNamedInsuredPage.Show" caption="" type="float">
                <value>
                  <comparison compare="eq">
                    <operand idref="PageOutput.DialogMode" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="AdditionalNamedInsuredPage.AllowAdd" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="AdditionalNamedInsuredPage.IsReadOnly" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="AdditionalNamedInsuredPage.AllowDelete" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="AdditionalNamedInsuredPage.IsReadOnly" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
            </object>
            <object id="LineUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LineUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="LineUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="ApplicantContactUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="ApplicantContactUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="ApplicantContactUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="GeneralInformationUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="GeneralInformationUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="GeneralInformationUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="GeneralInformationUnderwritingPage.IsPlacedInTrust" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="GeneralPolicyInformation.BusinessPlacedInTrust" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </value>
              </private>
            </object>
            <object id="CommercialGeneralLiabilityHistoryUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialGeneralLiabilityHistoryUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="CommercialGeneralLiabilityHistoryUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="CommercialAutoHistoryUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialAutoHistoryUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="CommercialAutoHistoryUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="CommercialPropertyHistoryUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="CommercialPropertyHistoryUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="CommercialPropertyHistoryUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="OtherInsuranceHistoryUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="OtherInsuranceHistoryUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="OtherInsuranceHistoryUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="LossHistoryUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="LossHistoryUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="LossHistoryUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="AccountDetailPage" abstract="1">
              <private id="AccountDetailPage.Show" type="boolean" override="1">
                <value idref="AccountDetailPage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
                <affects>
                  <reference idref="PagePrivate.SetDialogModeFalse" effect="preEffect" />
                </affects>
              </private>
              <private id="AccountDetailPage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Account Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="AccountDetailPage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AccountDetailPage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Account" />
                    <else idref="AccountDetailPage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="AccountDetailPage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Account Detail Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="AccountDetailPage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Account Detail" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="AccountDetailPage.IsReadOnly" type="boolean" override="1">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="AccountDetailPage.ClientID" caption="" type="string">
                <value>
                  <request verb="Session.getPropertyRq" get="@value">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="0" />
                    <nameValues>
                      <nameValue value="clientid" name="name" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
              </private>
              <private id="AccountDetailPage.PartyShow" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="AccountDetailPage.ClientID" type="string" />
                    <operand type="int" value="0" />
                  </comparison>
                </value>
              </private>
              <public id="AccountDetailPage.ClientName" type="string" comment="" path="AccountPageClientName">
                <rules>
                  <value>
                    <request verb="PartyObj.getPartyLiteRq" get="//PartyName">
                      <responsePath value="" />
                      <onFailure value="" />
                      <modifySession value="" />
                      <usesSession value="" />
                      <default value="0" />
                      <nameValues>
                        <nameValue idref="AccountDetailPage.ClientID" name="PartyId" dataType="element" />
                        <nameValue idref="DateTime.CurrentDate" name="TransactionDate" dataType="element" />
                      </nameValues>
                    </request>
                  </value>
                </rules>
              </public>
              <private id="AccountDetailPage.PartyShowVM" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="AccountDetailPage.ClientName" type="string" />
                    <operand type="string" value="ZZZLEGACY" />
                  </comparison>
                </value>
              </private>
            </object>
            <object id="PolicyDetailPage" abstract="1">
              <private id="PolicyDetailPage.Show" type="boolean" override="1">
                <value idref="PolicyDetailPage.ShowBooleanLookup" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
              <private id="PolicyDetailPage.ShowBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Show Policy Detail Page" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDetailPage.Caption" type="string">
                <value>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyDetailPage.CustomCaptionBooleanLookup" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </condition>
                    <then value="Policy" />
                    <else idref="PolicyDetailPage.CaptionOverrideLookup" />
                  </if>
                </value>
              </private>
              <private id="PolicyDetailPage.CustomCaptionBooleanLookup" type="boolean">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.MIscellaneousPageBooleans" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Policy Page Caption" name="Page Boolean" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDetailPage.CaptionOverrideLookup" type="string">
                <value>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.PageCaptionOverrides" />
                    <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="Policy Detail" name="Page" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDetailPage.IsReadOnly" type="boolean" override="1">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="ApplicationDetailPage" abstract="1">
              <private id="ApplicationDetailPage.IsReadOnly" type="boolean" override="1">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="UnderwritingDetailPage" abstract="1">
              <private id="UnderwritingDetailPage.IsReadOnly" type="boolean" override="1">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="TransactionWorkflowPage" abstract="1">
              <private id="TransactionWorkflowPage.Show" caption="" type="boolean" override="1">
                <value idref="PolicyPrivate.IsCurrentPagePricing" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="NatureOfBusinessUnderwritingPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="NatureOfBusinessUnderwritingPage.IsReadOnly" caption="" type="boolean">
                <value idref="False" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                    <else idref="False" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="True" />
                  </if>
                </misc>
              </private>
              <private id="NatureOfBusinessUnderwritingPage.Show" caption="" type="boolean">
                <value idref="True" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="PagePrivate.InterviewIsInDialogMode" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="PaymentDetailsPage" abstract="1">
              <private id="PaymentDetailsPage.Show" caption="" type="boolean" override="1">
                <value>
                  <request verb="ManuScript.getValueRq" get="@value" validRef="PolicyAdmin.UseDCTBilling">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdmin.BillingManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="BillingInterfacePrivate.ShowPaymentDetailPage" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                  <if>
                    <condition idref="PolicyAdminPrivate.IsLocked" />
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="BillingSummaryPage" abstract="1">
              <private id="BillingSummaryPage.Show" caption="" type="boolean" override="1">
                <value>
                  <request verb="ManuScript.getValueRq" get="@value" validRef="PolicyAdmin.UseDCTBilling">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdmin.BillingManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="BillingInterfacePrivate.ShowBillingSummary" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                </misc>
              </private>
            </object>
            <object id="InstallmentSchedulePage" abstract="1">
              <private id="InstallmentSchedulePage.Show" caption="" type="boolean" override="1">
                <value>
                  <request verb="ManuScript.getValueRq" get="@value" validRef="PolicyAdmin.UseDCTBilling">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdmin.BillingManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="BillingInterfacePrivate.ShowInstallmentSchedulePage" name="field" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <operand idref="PolicyAdmin.UseDCTBilling" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="PolicyAdmin.UseDCTBillingInstallmentSchedule" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                  <if>
                    <condition>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyAdmin.UseDCTBilling" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="BillingKeys.BillClass" type="string" />
                          <operand type="string" value="" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="False" type="int" />
                  </if>
                  <if>
                    <condition idref="PolicyAdminPrivate.IsLocked" />
                    <then idref="False" type="int" />
                  </if>
                </misc>
                <affects>
                  <reference idref="BillingKeysPrivate.SetInstallmentScheduleDataCheck" effect="postEffect" />
                </affects>
              </private>
            </object>
            <object id="SwitchedLinesPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="SwitchedLinesPage.Show" caption="" type="boolean">
                <value>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="and">
                        <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                        <comparison compare="eq">
                          <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyInput.LineOfBusiness" type="string" />
                        <operand type="string" value="Package" />
                      </comparison>
                    </comparison>
                    <comparison compare="gt">
                      <operand idref="PolicyPrivate.SelectedPackageLinesCount" type="int" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                </value>
              </private>
              <private id="SwitchedLinesPage.Page" caption="" type="string">
                <value value="SwitchedLines" />
              </private>
              <private id="SwitchedLinesPage.PageSet" caption="" type="string">
                <value value="SwitchedLines" />
              </private>
              <private id="SwitchedLinesPage.PopUpHeight" caption="" type="int">
                <value>
                  <calculation>
                    <argument op="eq">
                      <calculation>
                        <argument op="eq">
                          <calculation>
                            <argument op="eq" idref="PolicyPrivate.IsCommercialAutoSelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialCrimeSelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialGeneralLiabilitySelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialInlandMarineAAISSelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialAutoMASelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialBusinessOwnersSelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialInlandMarineSelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialWorkersCompensationSelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialUmbrellaSelected" type="boolean" />
                            <argument op="add" idref="PolicyPrivate.IsCommercialPropertySelected" type="boolean" />
                          </calculation>
                        </argument>
                        <argument op="multiply" type="int" value="50" />
                      </calculation>
                    </argument>
                    <argument op="add" type="int" value="80" />
                  </calculation>
                </value>
              </private>
              <private id="SwitchedLinesPage.SetCurrentPageName" caption="" type="string">
                <value idref="PageOutput.CurrentPageName" />
                <affects>
                  <reference idref="PageOutput.CurrentPage" effect="setValue" />
                </affects>
              </private>
            </object>
            <object id="ClientInformation">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="ClientInformation.ManuscriptID" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="ClientInformation" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="ClientInformation.ModelCollection" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="ClientInformation" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="ClientInformation.View" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="View" />
                    <keyRef type="string" value="ClientInformation" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="ClientInformation.ViewModel" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="ClientInformation" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="PolicyDetailsSystemPage">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="PolicyDetailsSystemPage.ManuscriptID" caption="" type="string" path="ManuscriptID">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="PolicyDetails" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDetailsSystemPage.View" caption="" type="string" path="View">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="View" />
                    <keyRef type="string" value="PolicyDetails" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDetailsSystemPage.ViewModel" caption="" type="string" path="ViewModel">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="PolicyDetails" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDetailsSystemPage.ModelCollection" caption="" type="string" path="ModelCollection">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="PolicyDetails" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="PolicyDocuments">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="PolicyDocuments.ManuscriptID" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="PolicyDocuments" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDocuments.ModelCollection" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="PolicyDocuments" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDocuments.View" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="View" />
                    <keyRef type="string" value="PolicyDocuments" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="PolicyDocuments.ViewModel" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="PolicyDocuments" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="WIAAttachments">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="WIAAttachments.ManuscriptID" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="WIAAttachments" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIAAttachments.ModelCollection" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="WIAAttachments" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIAAttachments.ViewModel" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="WIAAttachments" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="WIANotes">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="WIANotes.ManuscriptID" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="WIANotes" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIANotes.ModelCollection" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="WIANotes" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIANotes.ViewModel" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="WIANotes" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="WIANotifications">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="WIANotifications.ManuscriptID" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="WIANotifications" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIANotifications.ModelCollection" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="WIANotifications" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIANotifications.ViewModel" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="WIANotifications" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
            <object id="WIATasks">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="WIATasks.ManuscriptID" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ManuscriptId" />
                    <keyRef type="string" value="WIATasks" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIATasks.ModelCollection" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ModelCollection" />
                    <keyRef type="string" value="WIATasks" name="Name" />
                  </lookup>
                </value>
              </private>
              <private id="WIATasks.ViewModel" caption="" type="string">
                <value>
                  <lookup>
                    <tableRef value="ApplicationInformation" />
                    <fieldRef value="ViewModel" />
                    <keyRef type="string" value="WIATasks" name="Name" />
                  </lookup>
                </value>
              </private>
            </object>
          </object>
        </object>
        <object id="Context" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
        </object>
        <object id="DateTime" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="DateTime.CurrentDate30DaysPrior" caption="" type="date">
            <value>
              <dateAdd subtract="1">
                <dateArgument idref="DateTime.CurrentDate" />
                <dateUnit value="30" unit="days" />
              </dateAdd>
            </value>
          </private>
          <private id="DateTime.Minimum" caption="" type="date">
            <value value="1900-01-01" />
          </private>
          <private id="DateTime.TodayDateTime" type="datetime">
            <value>
              <session sessionValue="datetime" />
            </value>
          </private>
        </object>
        <object id="Constants" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="FormatMask" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="FormatMask.PremiumInputNeg" type="string">
              <value value="-???,???,??0" />
            </private>
            <private id="FormatMask.FactorDisplay" type="string">
              <value value="?#.000" />
            </private>
            <private id="FormatMask.Radio" caption="" type="string">
              <value value="radio" />
            </private>
            <private id="FormatMask.TextArea2100" caption="" type="string">
              <value value="textarea:rows:2:width:100%:" />
            </private>
            <private id="FormatMask.Width10" caption="" type="string">
              <value value="width:10:" />
            </private>
            <private id="FormatMask.Width20" caption="" type="string">
              <value value="width:20:" />
            </private>
            <private id="FormatMask.Width15" caption="" type="string">
              <value value="width:15:" />
            </private>
            <private id="FormatMask.Width40" caption="" type="string">
              <value value="width:40:" />
            </private>
          </object>
          <object id="MaxLength" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="MaxLength.Code" caption="" type="int">
              <value value="30" />
            </private>
            <private id="MaxLength.CreditsAndDebits" caption="" type="int">
              <value value="6" />
            </private>
            <private id="MaxLength.NumberOrIDNumber" caption="" type="int">
              <value value="20" />
            </private>
            <private id="MaxLength.SSN" caption="" type="int">
              <value value="11" />
            </private>
            <private id="MaxLength.CSP" caption="" type="int">
              <value value="4" />
            </private>
          </object>
          <object id="Boolean" abstract="1">
            <minOccurs value="1" />
            <maxOccurs value="1" />
          </object>
          <object id="TableNames">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="TableNames.IRPMCreditsAndDebits" type="string">
              <value value="IRPMCreditsAndDebits" />
            </private>
            <private id="TableNames.ModifierScope" type="string">
              <value value="ModifierScope" />
            </private>
            <private id="TableNames.ClassTable" type="string">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.ClassTableChoices" />
                  <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="Default" name="LineOfBusiness" />
                  <keyRef idref="LocationInput.State" type="string" name="State" />
                  <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <private id="TableNames.AirCraftScheduleApplicable" type="string">
              <value value="AircraftScheduleApplicable" />
            </private>
            <private id="TableNames.WorkersCompensationClass" type="string">
              <value value="WorkersCompensationClassTable" />
            </private>
            <private id="TableNames.RegistrantApplicable" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="RegistrantApplicable" />
                </calculation>
              </value>
            </private>
            <private id="TableNames.PackageModifier" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="CPPModifiers" />
                </calculation>
              </value>
            </private>
            <private id="TableNames.PackageModifierApplicable" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="CPPModifiersApplicable" />
                </calculation>
              </value>
            </private>
            <private id="TableNames.BusinessOwnersDataServices" type="string">
              <value value="BusinessOwnersDataServices" />
            </private>
            <private id="TableNames.NT_ScheduleModCeditsAndDebits" type="string">
              <value value="NT_ScheduleModCeditsAndDebits" />
            </private>
            <private id="TableNames.NT_AutoScheduleModCeditsAndDebits" type="string">
              <value value="NT_AutoScheduleModCeditsAndDebits" />
            </private>
            <private id="TableNames.ClassTableChoices" type="string">
              <value value="ISOClassTableChoices" />
            </private>
            <private id="TableNames.KYTaxes_City" type="string">
              <value value="KYTaxes_City" />
            </private>
            <private id="TableNames.KYTaxes_County" type="string">
              <value value="KYTaxes_County" />
            </private>
            <private id="TableNames.ClassTableProperty" type="string">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.ClassTableChoices" />
                  <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="Property" name="LineOfBusiness" />
                  <keyRef idref="LocationInput.State" type="string" name="State" />
                  <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <private id="TableNames.ClassTableGeneralLiability" type="string">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.ClassTableChoices" />
                  <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="GeneralLiability" name="LineOfBusiness" />
                  <keyRef idref="OccupancyPrivate.CurrentState" type="string" name="State" />
                  <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <private id="TableNames.ClassTableCrime" type="string">
              <value>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.ClassTableChoices" />
                  <manuscriptName idref="GlobalPrivate.ProductManuScriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="Crime" name="LineOfBusiness" />
                  <keyRef idref="LocationInput.State" type="string" name="State" />
                  <keyRef idref="PolicyInput.EffectiveDate" type="date" name="EffectiveDate" />
                </lookup>
              </value>
            </private>
            <private id="TableNames.Miscellaneous" type="string">
              <value value="Miscellaneous" />
            </private>
            <private id="TableNames.CPPManuscriptIDTable" type="string" comment="">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="ManuscriptsCPP" />
                </calculation>
              </value>
            </private>
            <private id="TableNames.ActionsApplicable" type="string">
              <value value="ApplicableForTransaction" />
            </private>
            <private id="TableNames.LOBSupport" caption="" type="string">
              <value value="LOBSupport" />
            </private>
            <private id="TableNames.MIscellaneousPageBooleans" caption="" type="string">
              <value value="MIscellaneousPageBooleans" />
            </private>
            <private id="TableNames.PageCaptionOverrides" caption="" type="string">
              <value value="PageCaptionOverrides" />
            </private>
            <private id="TableNames.KYSurcharge" type="string">
              <value value="KYSurcharge" />
            </private>
            <private id="TableNames.PDFRateDetail" caption="" type="string" comment="DuckCreekTech_CommercialLines_Pages_US_4_0_0_0">
              <value value="PDFRateDetail" />
            </private>
            <private id="TableNames.ExternalWorkflowPage" caption="" type="string">
              <value value="ExternalWorkflowPage" />
            </private>
            <private id="TableNames.AllowMonolineUmbrella" caption="" type="string">
              <value value="AllowMonolineUmbrella" />
            </private>
            <private id="TableNames.UseSegmentRating" type="string">
              <value value="UseSegmentRating" />
            </private>
            <private id="TableNames.PrintingAndFormsForceInit" type="string">
              <value value="PrintingAndFormsForceInit" />
            </private>
            <private id="TableNames.AuditableLOB" caption="" type="string">
              <value value="AuditableLOB" />
            </private>
            <private id="TableNames.ShortRateExceptionIndicatorsFactors" caption="" type="string">
              <value value="ShortRateExceptionIndicatorsFactors" />
            </private>
            <private id="TableNames.RetainPriorMinimumWritten" caption="" type="string">
              <value value="RetainPriorMinimumWritten" />
            </private>
            <private id="TableNames.IntegrationControl" caption="" type="string">
              <value value="IntegrationControl" />
            </private>
            <private id="TableNames.AttachRatingWorksheet" caption="" type="string">
              <value value="AttachRatingWorksheet" />
            </private>
            <private id="TableNames.Billing" caption="" type="string">
              <value value="Billing" />
            </private>
            <private id="TableNames.IntegrationManuscripts" caption="" type="string">
              <value value="IntegrationManuscripts" />
            </private>
            <private id="TableNames.NAICSCodes" caption="" type="string">
              <value value="NAICSCodes" />
            </private>
            <private id="TableNames.ISOSICCodes" caption="" type="string">
              <value value="ISOSICCodes" />
            </private>
            <private id="TableNames.TaxAvailablePerLOB" caption="" type="string">
              <value value="TaxAvailablePerLOB" />
            </private>
            <private id="TableNames.AvailableForMidTermRemoval" caption="" type="string">
              <value value="AvailableForMidTermRemoval" />
            </private>
            <private id="TableNames.ApplicableForLineOfBusiness" caption="" type="string">
              <value value="ApplicableForLineOfBusiness" />
            </private>
            <private id="TableNames.TransActChangeStatusPage" caption="" type="string">
              <value value="TransActChangeStatusPage" />
            </private>
            <private id="TableNames.PolicyFormsSetup" caption="" type="string">
              <value value="PolicyFormsSetup" />
            </private>
          </object>
          <object id="PrintDefaults">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="Mandatory" caption="" type="string">
              <value value="Mandatory" />
            </private>
            <private id="UnSelected" caption="" type="string">
              <value value="UnSelected" />
            </private>
            <private id="Selected" caption="" type="string">
              <value value="Selected" />
            </private>
          </object>
        </object>
        <object id="LocationSelect" path="locationSelect">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="LocationSelectInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="LocationSelectInput.LocationID" path="LocationSelectID" type="string" comment="Shared">
              <definition>
                <caption value="Location" />
                <options codeRef="Location" captionRef="LocationPrivate.LocationSelectDescription" referenceListRef="LocationPrivate.IsValidCurrentLine" />
                <readOnly idref="LocationSelectInput.ShowAllLocations" />
                <maxLength idref="MaxLength.ID" />
              </definition>
              <rules>
                <default idref="LocationGroup.DefaultID" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="or">
                        <comparison compare="eq">
                          <operand idref="LocationSelectInput.LocationID" type="string" />
                          <operand type="string" value="0" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="LocationSelectInput.IsExcludedLocation" type="boolean" />
                          <operand idref="True" type="int" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="LocationGroup.DefaultID" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="LocationSelectInput.ShowAllLocations" path="ShowAllLocations" type="boolean">
              <definition>
                <caption value="Show All Locations" />
                <options>
                  <option value="0" caption="No" default="1" />
                  <option value="1" caption="Yes" />
                </options>
              </definition>
              <rules>
                <default value="0" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="AccountPrivate.LocationCount" type="int" />
                        <operand type="int" value="1" />
                      </comparison>
                    </condition>
                    <then idref="False" />
                  </if>
                  <if>
                    <condition idref="PolicyAdminPrivate.IsLocked" />
                    <then idref="True" />
                  </if>
                </misc>
              </rules>
            </public>
            <private id="LocationSelectInput.IsExcludedLocation" type="boolean" comment="Shared" alwaysRun="1">
              <value>
                <iterator type="boolean" scope="first" action="sum" idref="Location">
                  <reference idref="LocationPrivate.IsExcludedLocationCurrentLine" type="boolean" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="LocationOutput.LocationID" type="string" />
                      <operand idref="LocationSelectInput.LocationID" type="string" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
          </object>
          <object id="LocationSelectPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="LocationSelectPrivate.StateForThisLocation" type="string">
              <value idref="LocationInput.State" />
            </private>
            <private id="LocationSelectPrivate.ClearLocationID" caption="" type="string" comment="Used to set location selection back to first location at the start of a new transaction.">
              <value value="" />
              <affects>
                <reference idref="LocationSelectInput.LocationID" effect="setValue" />
              </affects>
            </private>
          </object>
        </object>
        <object id="SelectedLine" path="lineSelect">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="SelectedLineInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="SelectedLineInput.LineID" path="LineID" type="string" alwaysRun="1">
              <definition>
                <caption value="Line Of Business" />
                <options codeRef="Line" captionRef="LineOutput.Description" referenceListRef="LineInput.Selected" />
                <maxLength idref="MaxLength.ID" />
              </definition>
              <rules>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="or">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="LineInput.Selected" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="LineOutput.LineID" type="string" />
                            <operand idref="SelectedLineInput.LineID" type="string" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="SelectedLineInput.LineID" type="string" />
                          <operand type="string" value="0" />
                        </comparison>
                      </comparison>
                    </condition>
                    <then idref="PolicyPrivate.FirstSelectedLine" />
                  </if>
                </misc>
                <default idref="PolicyPrivate.FirstSelectedLine" />
                <affects>
                  <reference idref="LineOutput.Type" effect="postEffect" />
                </affects>
              </rules>
            </public>
            <public id="SelectedLineInput.LineDescription" path="LineDescription" type="string">
              <definition>
                <caption value="Line Description" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
            </public>
          </object>
        </object>
        <object id="SelectedOccupancy" path="occupancySelect">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="SelectedOccupancyInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="SelectedOccupancyInput.OccupancyID" path="OccupancyID" type="string" alwaysRun="1">
              <definition>
                <caption value="Occupancy" />
                <options codeRef="Occupancy" captionRef="OccupancyOutputNonShredded.ShortDescription" />
                <maxLength idref="MaxLength.ID" />
              </definition>
              <rules>
                <affects>
                  <reference idref="BuildingDetailPage.SetLastSelectedOccupancyID" effect="postEffect" />
                </affects>
              </rules>
            </public>
          </object>
          <object id="SelectedOccupancyPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="SelectedOccupancyPrivate.CSPForThisOccupancy" type="string" comment="" path="CSPForThisOccupancy">
              <definition>
                <caption type="string" value="Selected Occ CSP" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.CSP" />
              </definition>
              <rules>
                <value idref="OccupancyOutput.CSP" />
              </rules>
            </public>
          </object>
        </object>
        <object id="BuildingSelect" path="buildingSelect">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="BuildingSelectInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <public id="BuildingSelectInput.BuildingID" path="BuildingSelectID" type="string" comment="Shared">
              <definition>
                <caption value="Building" />
                <options codeRef="Building" captionRef="BuildingPrivate.BuildingSelectDescription" referenceListRef="BuildingSelectPrivate.ValidReference" />
                <readOnly idref="BuildingSelectInput.ShowAllBuildings" />
                <maxLength idref="MaxLength.ID" />
              </definition>
              <rules>
                <default idref="BuildingGroup.DefaultID" />
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="BuildingSelectInput.BuildingID" type="string" />
                        <operand type="string" value="0" />
                      </comparison>
                    </condition>
                    <then idref="BuildingGroup.DefaultID" />
                  </if>
                </misc>
              </rules>
            </public>
            <public id="BuildingSelectInput.ShowAllBuildings" path="ShowAllBuildings" type="boolean">
              <definition>
                <caption value="Show All Buildings" />
                <options>
                  <option value="0" caption="No" default="1" />
                  <option value="1" caption="Yes" />
                </options>
              </definition>
              <rules>
                <default value="0" />
              </rules>
            </public>
          </object>
          <object id="BuildingSelectPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="BuildingSelectPrivate.ValidReference" caption="" type="boolean" alwaysRun="1">
              <value>
                <comparison compare="eq">
                  <operand idref="BuildingInput.BuildingLocationID" type="string" />
                  <operand idref="LocationSelectInput.LocationID" type="string" />
                </comparison>
              </value>
            </private>
          </object>
        </object>
        <object id="TempGroup" path="tempGroup" comment="Temporary group used for generic Manuscript.deleteObjectRecordRq logic. ">
          <minOccurs value="1" />
          <maxOccurs value="*" />
          <object id="TempGroupInput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
          </object>
          <object id="TempGroupOutput">
            <minOccurs value="1" />
            <maxOccurs value="1" />
          </object>
          <object id="TempGroupPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
          </object>
        </object>
      </object>
      <table id="BG2TerritoryApplicable" tableType="local">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="State" type="string" find="eq">
          <key value="Remainder" default="1" />
          <key value="AL" />
          <key value="CO" />
          <key value="CT" />
          <key value="DE" />
          <key value="FL" />
          <key value="GA" />
          <key value="HI" />
          <key value="IL" />
          <key value="LA" />
          <key value="MA" />
          <key value="MD" />
          <key value="ME" />
          <key value="MT" />
          <key value="NC" />
          <key value="NE" />
          <key value="NH" />
          <key value="NJ" />
          <key value="NM" />
          <key value="RI" />
          <key value="SC" />
          <key value="TX" />
          <key value="VA" />
          <key value="WY" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
        </data>
      </table>
      <table id="DistrictApplicable" tableType="local">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="State" type="string" find="eq">
          <key value="Remainder" default="1" />
          <key value="CA" />
          <key value="NY" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="1" />
          <row value="1" />
        </data>
      </table>
      <table id="ProtectionClass8BApplicable" tableType="local">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="State" type="string" find="eq">
          <key value="Remainder" default="1" />
          <key value="AL" />
          <key value="AR" />
          <key value="AZ" />
          <key value="CO" />
          <key value="CT" />
          <key value="DE" />
          <key value="FL" />
          <key value="GA" />
          <key value="IA" />
          <key value="IL" />
          <key value="IN" />
          <key value="KS" />
          <key value="KY" />
          <key value="MA" />
          <key value="MD" />
          <key value="ME" />
          <key value="MI" />
          <key value="MN" />
          <key value="MO" />
          <key value="NE" />
          <key value="NH" />
          <key value="NJ" />
          <key value="NM" />
          <key value="NY" />
          <key value="OH" />
          <key value="OK" />
          <key value="PA" />
          <key value="RI" />
          <key value="SC" />
          <key value="SD" />
          <key value="TN" />
          <key value="TX" />
          <key value="UT" />
          <key value="VA" />
          <key value="VT" />
          <key value="WI" />
          <key value="WY" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
        </data>
      </table>
      <object id="PolicyAdmin" path="policyAdmin" abstract="1">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="Transaction" path="transactions/transaction" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="*" />
          <object id="TransactionInput" abstract="1">
            <public id="TransactionInput.AuditType" path="AuditType" type="string">
              <definition>
                <caption value="Audit Type" />
                <options>
                  <option value="NA" caption="N/A" />
                  <option value="Physical" caption="Physical" />
                  <option value="Phone" caption="Phone" />
                  <option value="Voluntary" caption="Voluntary" />
                  <option value="Estimated" caption="Estimated" />
                  <option value="Waived" caption="Waived" />
                </options>
                <required idref="True" />
                <maxLength idref="MaxLength.Type" />
              </definition>
            </public>
          </object>
          <object id="TransactionOutput" abstract="1">
            <public id="TransactionOutput.AuditCharge" path="AuditCharge" type="float">
              <definition>
                <caption value="Audit Charge" />
                <formatMask idref="FormatMask.PremiumPennies" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.Premium" />
              </definition>
              <rules>
                <default value="0" />
              </rules>
            </public>
            <public id="TransactionOutput.ID" path="@id" type="string">
              <definition>
                <caption value="ID" />
              </definition>
            </public>
          </object>
        </object>
        <object id="PolicyAdminOutput" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="PolicyAdminOutputNonShredded" abstract="1">
            <public id="PolicyAdminOutputNonShredded.FormsManuScriptID" type="string" path="FormsManuScriptID" override="1">
              <definition>
                <maxLength idref="MaxLength.sValue" />
                <caption value="Forms Manuscript ID" />
              </definition>
              <rules>
                <value idref="PolicyManuScript.CPPFormsManuscriptID" />
              </rules>
            </public>
            <private id="PolicyAdminOutputNonShredded.OSEPostField" caption="" type="string">
              <value>
                <external>
                  <manuscriptName idref="PolicyAdminOutputNonShredded.AdminManuScriptID" />
                  <referenceField value="PolicyAdminOutputNonShredded.OSEPostField" />
                </external>
              </value>
            </private>
            <public id="PolicyAdminOutputNonShredded.CheckedOutUser" path="CheckedOutUser" type="string">
              <definition>
                <caption value="Checked Out User" />
                <readOnly idref="True" />
                <maxLength idref="MaxLength.sValue" />
              </definition>
              <rules>
                <default>
                  <session sessionValue="username" />
                </default>
              </rules>
            </public>
            <public id="PolicyAdminOutputNonShredded.OSTTransaction" path="OSTTransaction" type="int">
              <definition>
                <caption value="OST Transaction" />
                <maxLength idref="MaxLength.iValue" />
              </definition>
              <rules>
                <default value="0" />
              </rules>
            </public>
            <public id="PolicyAdminOutputNonShredded.ValidTransaction" path="ValidTransaction" type="boolean">
              <definition>
                <caption value="Valid Transaction" />
              </definition>
              <rules>
                <default idref="True" />
              </rules>
            </public>
            <public id="PolicyAdminOutputNonShredded.CurrentTransactionDateLabel" path="CurrentTransactionDateLabel" type="date">
              <definition>
                <caption value="Policy Admin Output Non Shredded Current Transaction Date Label" />
                <formatMask idref="FormatMask.Date" />
                <maxLength idref="MaxLength.Date" />
              </definition>
              <rules>
                <value idref="PolicyOutputNonShredded.LastTransactionEffectiveDate" />
              </rules>
            </public>
            <public id="PolicyAdminOutputNonShredded.CurrentTransactionTypeLabel" path="CurrentTransactionTypeLabel" type="string">
              <definition>
                <caption value="Policy Admin Output Non Shredded Current Transaction Type Label" />
                <maxLength idref="MaxLength.Type" />
              </definition>
              <rules>
                <value idref="PolicyOutputNonShredded.LastTransactionType" />
              </rules>
            </public>
            <public id="PolicyAdminOutputNonShredded.CurrentLineOfBusiness" path="CurrentLineOfBusiness" type="string">
              <definition>
                <caption value="Current Line Of Business" />
              </definition>
              <rules>
                <default>
                  <if>
                    <condition idref="GlobalOutput.CurrentlyInCPP" />
                    <then value="CPP" />
                    <else idref="LineOutput.Type" />
                  </if>
                </default>
              </rules>
            </public>
          </object>
        </object>
        <object id="PolicyAdminPrivate" abstract="1">
          <private id="PolicyAdminPrivate.ProductTransactionCommit" caption="" type="string">
            <affects>
              <reference idref="PolicyPrivate.SavePolicyManuscriptIDCheck" effect="postEffect" />
              <reference idref="PolicyPrivate.LineTransactionCommit" effect="postEffect" />
              <reference idref="PolicyPrivate.SetSelectedLines" effect="postEffect" />
              <reference idref="PolicyWorkflowDataInput.RemoveMarkedForDeletedGroupsOnCloseCheck" effect="postEffect" />
              <reference idref="AccountPrivate.SetAllBuildingNumbersLocked" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyAdminPrivate.ProductTransactionSetup" caption="" type="string">
            <affects>
              <reference idref="PolicyPrivate.ClearPreTransactionProductActivitesCompleted" effect="postEffect" />
              <reference idref="PolicyWorkflowDataInput.RemoveMarkedForDeletedGroupsCheck" effect="postEffect" />
              <reference idref="PolicyPrivate.RemoveUnusedPaths" effect="postEffect" />
              <reference idref="PolicyPrivate.CheckResetCPPProductManuScript" effect="postEffect" />
              <reference idref="PolicyPrivate.ResetHonorRatesOnRenewal" effect="postEffect" />
              <reference idref="PolicyAdminOutputNonShredded.FormsManuScriptID" effect="postEffect" />
              <reference idref="LocationSelectPrivate.ClearLocationID" effect="postEffect" />
              <reference idref="PolicyPrivate.SetTermAtRenewalCheck" effect="postEffect" />
              <reference idref="PolicyPrivate.ResetGroupNumberNewTerm" effect="postEffect" />
              <reference idref="PolicyPrivate.SetGroupNumbersAtStartCheck" effect="postEffect" />
              <reference idref="PolicyPrivate.ResetLineRemovedMidTermCheck" effect="postEffect" />
              <reference idref="PolicyPrivate.LineTransactionSetup" effect="postEffect" />
              <reference idref="PolicyPrivate.CheckClearSelectedLines" effect="postEffect" />
              <reference idref="FormsTransactionSummaryPrivate.DeleteFormsTransactionSummary" effect="postEffect" />
              <reference idref="AuditCollectionPrivate.GenerateAuditCollectionStartTransaction" effect="postEffect" />
              <reference idref="ReportingCollectionPrivate.GenerateReportingCollectionStartTransaction" effect="postEffect" />
              <reference idref="PolicyAdminPrivate.SetupWaiveChargeCheckAtStart" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyAdminPrivate.ActiveUserHasCheckedOut" type="boolean" override="1">
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyAdminPrivate.IsNewTransACT" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="PolicyAdminPrivate.ActiveUserHasCheckedOut_NewTransACT" />
                <else idref="PolicyAdminPrivate.ActiveUserHasCheckedOut_LegacyTransACT" />
              </if>
            </value>
          </private>
          <private id="PolicyAdminPrivate.ActiveUserHasCheckedOut_LegacyTransACT" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="PolicyAdminOutputNonShredded.CheckedOutUser" type="string" />
                  <operand idref="Context.ActiveUserName" type="string" />
                </comparison>
                <comparison compare="ne">
                  <operand idref="PolicyAdminOutputNonShredded.CheckedOutUser" type="string" />
                  <operand type="string" value="" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.ActiveUserHasCheckedOut_NewTransACT" type="boolean">
            <value>
              <comparison compare="or">
                <comparison compare="eq">
                  <operand idref="PolicyWorkflowDataInput.CheckedOutUser" type="string" />
                  <operand idref="Context.ActiveUserName" type="string" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="PolicyWorkflowDataInput.CheckedOutUser" type="string" />
                  <operand type="string" value="" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.IsLocked" type="boolean" override="1">
            <value idref="PolicyAdminPrivate.IsLocked_Workflow" />
            <misc>
              <if>
                <condition idref="Context.IsReadOnly" />
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyAdminPrivate.IsLocked_NewTransACT" type="boolean">
            <misc>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyAdminPrivate.ActiveUserHasCheckedOut" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="is">
                    <operand idref="PolicyOutputNonShredded.CurrentTransactionProcessingDataState" type="string" />
                    <operand type="string" value="committed,closed" />
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="TransactionStatusCode.CanRefer" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="Context.IsUnderwriter" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="ne">
                      <operand idref="PolicyOutputNonShredded.LastTransactionStatus" type="string" />
                      <operand type="string" value="Pending" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyOutputNonShredded.LastTransactionStatus" type="string" />
                    <operand type="string" value="Approved" />
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyOutputNonShredded.LastTransactionStatus" type="string" />
                    <operand type="string" value="Declined" />
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyOutputNonShredded.LastTransactionProductIsReadOnly" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyAdminPrivate.CurrentTransactionHistoryID" type="string" />
                    <operand idref="PolicyOutputNonShredded.LastTransactionHistoryID" type="string" />
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
              <if>
                <condition>
                  <comparison compare="ne">
                    <operand idref="PolicyOutputNonShredded.LastTransactionDeprecatedBy" type="string" />
                    <operand type="string" value="" />
                  </comparison>
                </condition>
                <then idref="True" type="int" />
              </if>
            </misc>
            <value idref="False" />
          </private>
          <private id="PolicyAdminPrivate.ShowAuditPremiums_NewTransACT" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="PolicyOutputNonShredded.AuditMode" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="PolicyAdminPrivate.IsNewTransACT" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.IsNewTransACT" caption="" type="boolean" alwaysRun="1">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyAdminPrivate.TransACTVersion" type="string" />
                <operand type="string" value="2.0" />
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.TransACTVersion" caption="" type="string">
            <value>
              <request verb="Session.getPropertyRq" get="@value">
                <onFailure value="1.0" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="1.0" />
                <nameValues>
                  <nameValue value="requestVersion" name="name" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyAdminPrivate.PolicyHasNotBeenAudited" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.AuditMode" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.SetAuditMode" caption="" type="boolean">
            <affects>
              <reference idref="PolicyOutputNonShredded.AuditMode" effect="setValue" />
            </affects>
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <operand type="string" value="Audit" />
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.ResetAuditMode" caption="" type="boolean">
            <affects>
              <reference idref="PolicyOutputNonShredded.AuditMode" effect="setValue" />
            </affects>
            <value>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                    <operand type="string" value="Renew" />
                  </comparison>
                </condition>
                <then idref="False" />
                <else idref="PolicyOutputNonShredded.AuditMode" />
              </if>
            </value>
          </private>
          <private id="PolicyAdminPrivate.LoadHistoryIfOST" type="string">
            <value>
              <if>
                <condition idref="PolicyAdminOutputNonShredded.OSTTransaction" />
                <then value="save,loadHistory" />
                <else value="" />
              </if>
            </value>
          </private>
          <private id="PolicyAdminPrivate.SetOSTTransaction" type="boolean">
            <value value="1" />
            <affects>
              <reference idref="PolicyAdminOutputNonShredded.OSTTransaction" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyAdminPrivate.IsNotOSTTransaction" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyAdminOutputNonShredded.OSTTransaction" type="int" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.SetValidTransactionTrue" type="boolean" comment="" alwaysRun="1">
            <value idref="True" />
            <affects>
              <reference idref="PolicyAdminOutputNonShredded.ValidTransaction" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyAdminPrivate.TargetPage" caption="" type="string">
            <value>
              <request verb="Session.getPropertyRq" get="@value">
                <responsePath value="" />
                <onFailure idref="False" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="ExitInterviewTarget" name="name" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyAdminPrivate.HidePremiumSegmentAudit" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <operand idref="PolicyAdmin.UseSegmentRating" type="boolean" />
                <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
              </comparison>
            </value>
            <misc>
              <if>
                <condition>
                  <comparison compare="and">
                    <operand idref="PolicyOutputNonShredded.IsReportable" type="boolean" />
                    <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                  </comparison>
                </condition>
                <then idref="True" />
              </if>
            </misc>
          </private>
          <private id="PolicyAdminPrivate.ShowPremiumSegmentAudit" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyAdminPrivate.HidePremiumSegmentAudit" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.IsLocked_Workflow" type="boolean">
            <value>
              <external path="_ProductWorkflow">
                <manuscriptName idref="PolicyAdmin.WorkflowManuScriptID" />
                <referenceField value="LockPolicy.True" />
              </external>
            </value>
          </private>
          <private id="PolicyAdminPrivate.SetCurrentLineOfBusiness" type="string" comment="" caption="Policy Admin Private Set Current Line Of Business">
            <value>
              <if>
                <condition idref="GlobalOutput.CurrentlyInCPP" />
                <then value="CPP" />
                <else idref="LineOutput.Type" />
              </if>
            </value>
            <affects>
              <reference idref="PolicyAdminOutputNonShredded.CurrentLineOfBusiness" effect="setValue" />
            </affects>
          </private>
          <private id="PolicyAdminPrivate.IsCurrentTransactionOutOfSequence" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="PolicyOutputNonShredded.LastTransactionHistoryID" type="string" />
                <operand idref="PolicyPrivate.LastTransactionProcessingDataHistoryID" type="string" />
              </comparison>
            </value>
          </private>
          <private id="PolicyAdminPrivate.ContextPath" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="//*[@id='" />
                <argument op="add" idref="PolicyAdminInput.ID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
          <private id="PolicyAdminPrivate.ProductPostApplyChangesEvent" caption="" type="string" path="ProductPostApplyChangesEvent">
            <affects>
              <reference idref="AccountPrivate.DeleteAddedCurrentTransactionTransformOOS" effect="postEffect" />
              <reference idref="AccountPrivate.DeleteAssociatedGroupTransformOOS" effect="postEffect" />
              <reference idref="PolicyPrivate.SetGroupNumbersAtOOSCheck" effect="postEffect" />
              <reference idref="PolicyPrivate.LinePostApplyChangesEventSetup" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyAdminPrivate.SetupWaiveChargeCheck" caption="" type="int" path="SetupWaiveChargeCheck">
            <affects>
              <reference idref="PolicyWorkflowDataInput.WaiveChargeCheck" effect="setValue" />
            </affects>
            <value idref="PolicyAdmin.WaiveChargeCheck" />
          </private>
          <private id="PolicyAdminPrivate.SetupWaiveChargeCheckAtStart" caption="" type="boolean" path="SetupWaiveChargeCheckAtStart" alwaysRun="1">
            <affects>
              <reference idref="PolicyAdmin.WaiveChargeCheck" effect="setValue" />
            </affects>
            <value value="" />
            <misc>
              <if>
                <condition idref="OSEventData.inOutOfSequence" />
                <then idref="CurrentTransaction.WaiveCharge" />
              </if>
            </misc>
          </private>
          <private id="PolicyAdminPrivate.ProductAppendReconcileChangesCheck" caption="" type="string" path="ProductPostApplyChangesEvent">
            <affects>
              <reference idref="PolicyPrivate.LineAppendReconcileChangesCheck" effect="preEffect" />
              <reference idref="PolicyAdminPrivate.ProductAppendReconcilePolicyRerate" effect="postEffect" />
            </affects>
          </private>
          <private id="PolicyAdminPrivate.ProductAppendReconcilePolicyRerate" caption="" type="string" path="ProductPostApplyChangesEvent">
            <value>
              <request verb="ManuScript.getValueRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                  <nameValue value="data.TotalResult" name="field" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
        </object>
        <private id="PolicyAdmin.PageSet" caption="" type="string" override="1">
          <value>
            <lookup>
              <tableRef value="(custom defined)" idref="TableNames.ExternalWorkflowPage" />
              <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
              <fieldRef value="Value" />
              <keyRef type="string" value="PageSet" name="Type" />
            </lookup>
          </value>
        </private>
        <object id="AuditCollection" path="AuditCollection">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="Segments" path="segments">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="ExposureGroup" path="ExposureGroup">
              <minOccurs value="1" />
              <maxOccurs value="*" />
              <public id="ExposureGroup.groupID" path="@groupID" type="string">
                <definition>
                  <caption value="group ID" />
                  <readOnly idref="True" />
                </definition>
              </public>
              <public id="ExposureGroup.Description" path="Description" type="string">
                <definition>
                  <caption idref="ExposureGroupPrivate.DescriptionCaption" />
                  <readOnly idref="True" />
                </definition>
              </public>
              <public id="ExposureGroup.AnnualEstimate" path="AnnualEstimate" type="float">
                <definition>
                  <caption idref="ExposureGroupPrivate.AnnualEstimateCaption" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ExposureGroup.ID" path="@id" type="string">
                <definition>
                  <caption value="ID" />
                </definition>
                <rules>
                  <value value="" />
                </rules>
              </public>
              <object id="ExposureGroupPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="ExposureGroupPrivate.ShowExposureGroup" caption="" type="boolean" path="ShowExposureGroup">
                  <value>
                    <comparison compare="eq">
                      <operand idref="AuditCollection.CurrentGroupID" type="string" />
                      <operand idref="ExposureGroup.groupID" type="string" />
                    </comparison>
                  </value>
                </private>
                <private id="ExposureGroupPrivate.SetTotalActualExposure" caption="" type="string">
                  <value value="" />
                </private>
                <private id="ExposureGroupPrivate.TotalActualExposureSum" caption="" type="float">
                  <value>
                    <iterator type="float" scope="all" action="sum" idref="Segment">
                      <reference idref="SegmentPrivate.TotalActualExposurePerSegment" type="float" />
                    </iterator>
                  </value>
                </private>
                <private id="ExposureGroupPrivate.AnnualEstimateCaption" caption="" type="string">
                  <value value="Annual Estimate" />
                </private>
                <private id="ExposureGroupPrivate.DescriptionCaption" caption="" type="string">
                  <value value="Description" />
                </private>
                <private id="ExposureGroupPrivate.HideAnnualEstimate" caption="" type="boolean">
                  <value value="0" />
                </private>
                <private id="ExposureGroupPrivate.HideDescription" caption="" type="boolean">
                  <value value="0" />
                </private>
                <private id="ExposureGroupPrivate.TotalActualExposureSumUnits" caption="" type="float">
                  <value>
                    <iterator type="float" scope="last" action="sum" idref="Segment">
                      <reference idref="SegmentPrivate.TotalActualExposurePerSegment" type="float" />
                    </iterator>
                  </value>
                </private>
              </object>
              <object id="Segment" path="segment">
                <minOccurs value="1" />
                <maxOccurs value="*" />
                <public id="Segment.historyId" path="@historyId" type="float">
                  <definition>
                    <caption value="history Id" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="Segment.startDate" path="@startDate" type="date">
                  <definition>
                    <caption value="start Date" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="Segment.endDate" path="@endDate" type="date">
                  <definition>
                    <caption value="end Date" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <object id="SegmentPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="SegmentPrivate.Caption" type="string" comment="" caption="Caption" alwaysRun="1" path="Caption">
                    <value>
                      <calculation>
                        <argument op="eq" idref="Segment.startDate" type="date" />
                        <argument op="add" type="string" value=" - " />
                        <argument op="add" idref="Segment.endDate" type="date" />
                      </calculation>
                    </value>
                  </private>
                  <private id="SegmentPrivate.TotalActualExposurePerSegment" caption="" type="float">
                    <value>
                      <iterator type="float" scope="all" action="sum" idref="Exposure">
                        <reference idref="Exposure.Exposure" type="float" />
                        <where idref="ExposurePrivate.ShowExposure" />
                      </iterator>
                    </value>
                  </private>
                </object>
                <object id="Exposure" path="Exposure">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="Exposure.Caption" path="@caption" type="string">
                    <definition>
                      <caption value="Caption" />
                      <readOnly idref="True" />
                    </definition>
                  </public>
                  <public id="Exposure.FieldID" path="@fieldID" type="string">
                    <definition>
                      <caption value="Field ID" />
                      <readOnly idref="True" />
                    </definition>
                  </public>
                  <object id="ExposurePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="ExposurePrivate.ShowExposure" caption="" type="boolean">
                      <value>
                        <comparison compare="eq">
                          <operand idref="AuditCollection.CurrentFieldID" type="string" />
                          <operand idref="Exposure.FieldID" type="string" />
                        </comparison>
                      </value>
                    </private>
                  </object>
                  <public id="Exposure.Exposure" path="." type="float">
                    <definition>
                      <caption>
                        <calculation>
                          <argument op="eq" idref="SegmentPrivate.Caption" type="string" />
                        </calculation>
                      </caption>
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.Limit" />
                      <readOnly>
                        <comparison compare="eq">
                          <operand idref="Segment.Available" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </readOnly>
                    </definition>
                  </public>
                </object>
                <public id="Segment.Available" path="@available" type="boolean">
                  <definition>
                    <caption value="Available" />
                  </definition>
                </public>
              </object>
              <public id="ExposureGroup.DescriptionDisplay" path="DescriptionDisplay" type="string">
                <definition>
                  <caption idref="ExposureGroupPrivate.DescriptionCaption" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value idref="ExposureGroup.Description" />
                </rules>
              </public>
              <public id="ExposureGroup.AnnualEstimateDisplay" path="AnnualEstimateDisplay" type="float">
                <definition>
                  <caption idref="ExposureGroupPrivate.AnnualEstimateCaption" />
                  <readOnly idref="True" />
                  <formatMask idref="FormatMask.Limit" />
                </definition>
                <rules>
                  <value idref="ExposureGroup.AnnualEstimate" />
                </rules>
              </public>
              <public id="ExposureGroup.type" path="@type" type="int">
                <definition>
                  <caption value="type" />
                  <readOnly idref="True" />
                </definition>
              </public>
              <public id="ExposureGroup.fragmentID" path="@fragmentID" type="string">
                <definition>
                  <caption value="fragment ID" />
                </definition>
              </public>
            </object>
            <object id="SegmentsPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="SegmentsPrivate.TotalActualExposure" caption="" type="float" alwaysRun="1">
                <value>
                  <iterator type="float" scope="all" action="sum" idref="ExposureGroup">
                    <reference idref="ExposureGroupPrivate.TotalActualExposureSum" type="float" />
                    <where>
                      <comparison compare="eq">
                        <operand idref="ExposureGroup.groupID" type="string" />
                        <operand idref="AuditCollection.CurrentGroupID" type="string" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="SegmentsPrivate.CurrentExposureGroup" type="int" />
                        <operand type="string" value="2" />
                      </comparison>
                    </condition>
                    <then idref="SegmentsPrivate.TotalActualExposureUnits" />
                  </if>
                </misc>
              </private>
              <private id="SegmentsPrivate.SetTotalActualExposure" caption="" type="string">
                <value>
                  <request verb="ManuScript.setValueRq" get="@status" validRef="SegmentsPrivate.SetTotalActualExposureExecuteCondition">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue idref="AuditCollection.CurrentFieldID" name="field" dataType="attribute" />
                      <nameValue idref="SegmentsPrivate.TotalActualExposure" name="value" dataType="attribute" />
                      <nameValue idref="AuditCollectionPrivate.AuditExposureContextPath" name="context" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
                <affects>
                  <reference idref="SegmentsPrivate.TotalActualExposure" effect="preEffect" />
                </affects>
              </private>
              <private id="SegmentsPrivate.ExposureGroupExists" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="count" idref="ExposureGroup">
                    <where>
                      <comparison compare="eq">
                        <operand idref="ExposureGroupPrivate.ShowExposureGroup" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
              <private id="SegmentsPrivate.TotalActualExposureUnits" caption="" type="float" alwaysRun="1">
                <value>
                  <iterator type="float" scope="all" action="sum" idref="ExposureGroup">
                    <reference idref="ExposureGroupPrivate.TotalActualExposureSumUnits" type="float" />
                    <where>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="ExposureGroup.groupID" type="string" />
                          <operand idref="AuditCollection.CurrentGroupID" type="string" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="ExposureGroup.type" type="int" />
                          <operand type="int" value="2" />
                        </comparison>
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
              <private id="SegmentsPrivate.SetTotalActualExposureExecuteCondition" caption="" type="boolean">
                <value>
                  <comparison compare="isnot">
                    <operand idref="PolicyOutputNonShredded.LastTransactionStatus" type="string" />
                    <operand type="string" value="Closed,Committed" />
                  </comparison>
                </value>
              </private>
              <private id="SegmentsPrivate.CurrentExposureGroup" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="sum" idref="ExposureGroup">
                    <reference idref="ExposureGroup.type" type="int" />
                    <where>
                      <comparison compare="eq">
                        <operand idref="ExposureGroup.groupID" type="string" />
                        <operand idref="AuditCollection.CurrentGroupID" type="string" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
            </object>
          </object>
          <public id="AuditCollection.CurrentGroupID" path="CurrentGroupID" type="string">
            <definition>
              <caption value="Current Group ID" />
            </definition>
          </public>
          <public id="AuditCollection.ReturnPage" path="ReturnPage" type="string">
            <definition>
              <caption value="Return Page" />
            </definition>
          </public>
          <public id="AuditCollection.ReturnPageSet" path="ReturnPageSet" type="string">
            <definition>
              <caption value="Return Page Set" />
            </definition>
          </public>
          <object id="AuditCollectionPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AuditCollectionPrivate.buildCollectionRq" caption="" type="string" path="buildCollectionRq">
              <value>
                <request verb="TransACT.buildAuditCollectionRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="AuditCollectionPrivate.AuditableLOBList" name="ManuScript" dataType="element" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="AuditCollectionPrivate.SetReturnPageSet" caption="" type="string" path="SetReturnPageSet">
              <affects>
                <reference idref="AuditCollection.ReturnPageSet" effect="setValue" />
              </affects>
              <value value="MainInterview" />
            </private>
            <private id="AuditCollectionPrivate.ClearReturnPageSet" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="AuditCollection.ReturnPageSet" effect="setValue" />
              </affects>
            </private>
            <private id="AuditCollectionPrivate.SetReturnPage" caption="" type="string" path="SetReturnPage">
              <value idref="PageOutput.CurrentPageName" />
              <affects>
                <reference idref="AuditCollection.ReturnPage" effect="setValue" />
                <reference idref="AuditCollectionPrivate.SetReturnPageSet" effect="postEffect" />
              </affects>
            </private>
            <private id="AuditCollectionPrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="AuditCollection.ID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="AuditCollectionPrivate.AuditExposureContextPath" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="AuditCollection.CurrentFragmentID" type="string" />
                      <operand type="string" value="" />
                    </comparison>
                  </condition>
                  <then idref="AuditCollectionPrivate.AuditExposureContextNonFragmentPath" />
                  <else idref="AuditCollectionPrivate.AuditExposureContextFragmentPath" />
                </if>
              </value>
            </private>
            <private id="AuditCollectionPrivate.GenerateAuditCollection" caption="" type="string" path="GenerateAuditCollection">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="SegmentsPrivate.ExposureGroupExists" type="int" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="AuditCollectionPrivate.buildCollectionRq" />
                </if>
              </value>
            </private>
            <private id="AuditCollectionPrivate.GenerateAuditCollectionStartTransaction" caption="" type="string" path="GenerateAuditCollection">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsInAudit" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyAdmin.UseSegmentRating" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="AuditCollectionPrivate.buildCollectionRq" />
                </if>
              </value>
            </private>
            <private id="AuditCollectionPrivate.AuditableLOBList" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="ne">
                      <operand idref="PolicyInput.LineOfBusiness" type="string" />
                      <operand type="string" value="Package" />
                    </comparison>
                  </condition>
                  <then idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" />
                  <else>
                    <calculation>
                      <argument op="eq" idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" type="string" />
                      <argument op="add" idref="AuditCollectionPrivate.AuditableLOBListCalc" type="string" />
                    </calculation>
                  </else>
                </if>
              </value>
            </private>
            <private id="AuditCollectionPrivate.AuditableLOBListCalc" caption="" type="string">
              <value>
                <iterator type="string" scope="all" action="sum" idref="Line">
                  <reference idref="AccountPrivate.Comma" type="string" />
                  <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                  <where idref="LinePrivate.IsAuditableLOBLookup" />
                  <customQuery idref="PolicyPrivate.SelectedLineXPath" />
                </iterator>
              </value>
            </private>
            <private id="AuditCollectionPrivate.AuditExposureContextFragmentPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="F:" />
                  <argument op="add" idref="AuditCollection.CurrentFragmentID" type="string" />
                  <argument op="add" type="string" value="^//*[@id='" />
                  <argument op="add" idref="AuditCollection.CurrentGroupID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="AuditCollectionPrivate.AuditExposureContextNonFragmentPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="AuditCollection.CurrentGroupID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
          </object>
          <public id="AuditCollection.ID" path="@id" type="string">
            <definition>
              <caption value="ID" />
            </definition>
          </public>
          <public id="AuditCollection.CurrentFieldID" path="CurrentFieldID" type="string">
            <definition>
              <caption value="Current Field ID" />
            </definition>
          </public>
          <private id="AuditCollection.CurrentFragmentID" type="string" caption="Audit Collection Current Fragment ID">
            <value>
              <iterator type="string" scope="all" action="sum" idref="ExposureGroup">
                <reference idref="ExposureGroup.fragmentID" type="string" />
                <customQuery idref="AuditCollection.CurrentFragmentIDXPath" />
              </iterator>
            </value>
          </private>
          <private id="AuditCollection.CurrentFragmentIDXPath" type="string" caption="Audit Collection Current Fragment ID">
            <value>
              <calculation>
                <argument op="eq" type="string" value="ExposureGroup[@groupID='" />
                <argument op="add" idref="AuditCollection.CurrentGroupID" type="string" />
                <argument op="add" type="string" value="']" />
              </calculation>
            </value>
          </private>
        </object>
        <private id="PolicyAdmin.Page" caption="" type="string" override="1">
          <value>
            <lookup>
              <tableRef value="(custom defined)" idref="TableNames.ExternalWorkflowPage" />
              <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
              <fieldRef value="Value" />
              <keyRef type="string" value="Page" name="Type" />
            </lookup>
          </value>
        </private>
        <public id="PolicyAdmin.UseDCTNotifications" path="UseDCTNotifications" type="boolean">
          <definition>
            <caption value="Use DCT Notifications" />
          </definition>
          <rules>
            <value idref="True" />
            <default idref="True" />
          </rules>
        </public>
        <public id="PolicyAdmin.UseSegmentRating" path="UseSegmentRating" type="boolean" override="1">
          <definition>
            <caption value="Use Segment Rating" />
          </definition>
          <rules>
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.UseSegmentRating" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Value" />
                <keyRef type="string" value="default" name="Type" />
              </lookup>
            </value>
            <default>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.UseSegmentRating" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Value" />
                <keyRef type="string" value="default" name="Type" />
              </lookup>
            </default>
          </rules>
        </public>
        <public id="PolicyAdmin.UseDCTTasks" path="UseDCTTasks" type="boolean">
          <definition>
            <caption value="Use DCT Tasks" />
          </definition>
          <rules>
            <value idref="True" />
            <default idref="True" />
          </rules>
        </public>
        <private id="PolicyAdmin.CommunicationsManuScriptID" type="string" comment="" override="1">
          <value value="Carrier_ProductBase_Communications_1_0_0_0" />
        </private>
        <object id="ReportingCollection" path="SegmentCollection">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="ReportingCollection.CurrentFieldID" path="CurrentFieldID" type="string">
            <definition>
              <caption value="Current Field ID" />
            </definition>
          </public>
          <public id="ReportingCollection.CurrentGroupID" path="CurrentGroupID" type="string">
            <definition>
              <caption value="Current Group ID" />
            </definition>
          </public>
          <public id="ReportingCollection.ID" path="@id" type="string">
            <definition>
              <caption value="CollectionID" />
            </definition>
          </public>
          <public id="ReportingCollection.ReturnPage" path="ReturnPage" type="string">
            <definition>
              <caption value="Return Page" />
            </definition>
          </public>
          <public id="ReportingCollection.ReturnPageSet" path="ReturnPageSet" type="string">
            <definition>
              <caption value="Return Page Set" />
            </definition>
          </public>
          <object id="ReportingCollectionPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="ReportingCollectionPrivate.ReportingExposureContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="ReportingCollection.CurrentGroupID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="ReportingCollectionPrivate.ClearReturnPageSet" caption="" type="string">
              <value value="" />
              <affects>
                <reference idref="ReportingCollection.ReturnPageSet" effect="setValue" />
              </affects>
            </private>
            <private id="ReportingCollectionPrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="ReportingCollection.ID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="ReportingCollectionPrivate.GenerateReportingCollection" caption="" type="string" path="GenerateAuditCollection">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="ReportingSegmentsPrivate.ExposureGroupExists" type="int" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </condition>
                  <then idref="ReportingCollectionPrivate.buildCollectionRq" />
                </if>
              </value>
            </private>
            <private id="ReportingCollectionPrivate.GenerateReportingCollectionStartTransaction" caption="" type="string" path="GenerateAuditCollection">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsCurrentTransactionReporting" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                      <operand idref="PolicyAdmin.UseSegmentRating" type="boolean" />
                    </comparison>
                  </condition>
                  <then idref="ReportingCollectionPrivate.buildCollectionRq" />
                </if>
              </value>
            </private>
            <private id="ReportingCollectionPrivate.SetReturnPage" caption="" type="string" path="SetReturnPage">
              <value idref="PageOutput.CurrentPageName" />
              <affects>
                <reference idref="ReportingCollection.ReturnPage" effect="setValue" />
                <reference idref="ReportingCollectionPrivate.SetReturnPageSet" effect="postEffect" />
              </affects>
            </private>
            <private id="ReportingCollectionPrivate.SetReturnPageSet" caption="" type="string" path="SetReturnPageSet">
              <affects>
                <reference idref="ReportingCollection.ReturnPageSet" effect="setValue" />
              </affects>
              <value value="MainInterview" />
            </private>
            <private id="ReportingCollectionPrivate.buildCollectionRq" caption="" type="string" path="buildCollectionRq">
              <value>
                <request verb="TransACT.buildSegmentCollectionRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="Reporting" name="type" dataType="attribute" />
                    <nameValue idref="ReportingCollectionPrivate.ReportableLOBList" name="ManuScript" dataType="element" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="ReportingCollectionPrivate.ReportableLOBList" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="ne">
                      <operand idref="PolicyInput.LineOfBusiness" type="string" />
                      <operand type="string" value="Package" />
                    </comparison>
                  </condition>
                  <then idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" />
                  <else>
                    <calculation>
                      <argument op="eq" idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" type="string" />
                      <argument op="add" idref="ReportingCollectionPrivate.ReportableLOBListCalc" type="string" />
                    </calculation>
                  </else>
                </if>
              </value>
            </private>
            <private id="ReportingCollectionPrivate.ReportableLOBListCalc" caption="" type="string">
              <value>
                <iterator type="string" scope="all" action="sum" idref="Line">
                  <reference idref="AccountPrivate.Comma" type="string" />
                  <reference idref="LineManuScript.PagesManuscriptID" type="string" />
                  <where>
                    <comparison compare="or">
                      <operand idref="LineOutput.IsReportable" type="boolean" />
                      <operand idref="LineOutput.IsFinalReport" type="boolean" />
                    </comparison>
                  </where>
                  <customQuery idref="PolicyPrivate.SelectedLineXPath" />
                </iterator>
              </value>
            </private>
          </object>
          <object id="ReportingSegments" path="segments">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <object id="ReportingExposureGroup" path="ExposureGroup">
              <minOccurs value="1" />
              <maxOccurs value="*" />
              <public id="ReportingExposureGroup.AnnualEstimate" path="AnnualEstimate" type="float">
                <definition>
                  <caption idref="ReportingExposureGroupPrivate.AnnualEstimateCaption" />
                  <readOnly idref="True" />
                  <maxLength idref="MaxLength.fValue" />
                </definition>
              </public>
              <public id="ReportingExposureGroup.AnnualEstimateDisplay" path="AnnualEstimateDisplay" type="float">
                <definition>
                  <caption idref="ReportingExposureGroupPrivate.AnnualEstimateCaption" />
                  <readOnly idref="True" />
                  <formatMask idref="FormatMask.Limit" />
                </definition>
                <rules>
                  <value idref="ReportingExposureGroup.AnnualEstimate" />
                </rules>
              </public>
              <public id="ReportingExposureGroup.Description" path="Description" type="string">
                <definition>
                  <caption idref="ReportingExposureGroupPrivate.DescriptionCaption" />
                  <readOnly idref="True" />
                </definition>
              </public>
              <public id="ReportingExposureGroup.DescriptionDisplay" path="DescriptionDisplay" type="string">
                <definition>
                  <caption idref="ReportingExposureGroupPrivate.DescriptionCaption" />
                  <readOnly idref="True" />
                </definition>
                <rules>
                  <value idref="ReportingExposureGroup.Description" />
                </rules>
              </public>
              <public id="ReportingExposureGroup.ID" path="@id" type="string">
                <definition>
                  <caption value="GroupID" />
                </definition>
                <rules>
                  <value value="" />
                </rules>
              </public>
              <public id="ReportingExposureGroup.groupID" path="@groupID" type="string">
                <definition>
                  <caption value="group ID" />
                  <readOnly idref="True" />
                </definition>
              </public>
              <public id="ReportingExposureGroup.type" path="@type" type="int">
                <definition>
                  <caption value="type" />
                  <readOnly idref="True" />
                </definition>
              </public>
              <object id="ReportingExposureGroupPrivate">
                <minOccurs value="1" />
                <maxOccurs value="1" />
                <private id="ReportingExposureGroupPrivate.AnnualEstimateCaption" caption="" type="string">
                  <value value="Annual Estimate" />
                </private>
                <private id="ReportingExposureGroupPrivate.DescriptionCaption" caption="" type="string">
                  <value value="Description" />
                </private>
                <private id="ReportingExposureGroupPrivate.HideAnnualEstimate" caption="" type="boolean">
                  <value value="0" />
                </private>
                <private id="ReportingExposureGroupPrivate.HideDescription" caption="" type="boolean">
                  <value value="0" />
                </private>
                <private id="ReportingExposureGroupPrivate.SetTotalActualExposure" caption="" type="string">
                  <value value="" />
                </private>
                <private id="ReportingExposureGroupPrivate.ShowExposureGroup" caption="" type="boolean" path="ShowExposureGroup">
                  <value>
                    <comparison compare="eq">
                      <operand idref="ReportingCollection.CurrentGroupID" type="string" />
                      <operand idref="ReportingExposureGroup.groupID" type="string" />
                    </comparison>
                  </value>
                </private>
                <private id="ReportingExposureGroupPrivate.TotalActualExposureSum" caption="" type="float">
                  <value>
                    <iterator type="float" scope="all" action="sum" idref="ReportingSegment">
                      <reference idref="ReportingSegmentPrivate.TotalActualExposurePerSegment" type="float" />
                    </iterator>
                  </value>
                </private>
                <private id="ReportingExposureGroupPrivate.TotalActualExposureSumUnits" caption="" type="float">
                  <value>
                    <iterator type="float" scope="last" action="sum" idref="ReportingSegment">
                      <reference idref="ReportingSegmentPrivate.TotalActualExposurePerSegment" type="float" />
                    </iterator>
                  </value>
                </private>
              </object>
              <object id="ReportingSegment" path="segment">
                <minOccurs value="1" />
                <maxOccurs value="*" />
                <public id="ReportingSegment.endDate" path="@endDate" type="date">
                  <definition>
                    <caption value="end Date" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="ReportingSegment.historyId" path="@historyId" type="float">
                  <definition>
                    <caption value="history Id" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <public id="ReportingSegment.startDate" path="@startDate" type="date">
                  <definition>
                    <caption value="start Date" />
                    <readOnly idref="True" />
                  </definition>
                </public>
                <object id="ReportingExposure" path="Exposure">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <public id="ReportingExposure.Caption" path="@caption" type="string">
                    <definition>
                      <caption value="Caption" />
                      <readOnly idref="True" />
                    </definition>
                  </public>
                  <public id="ReportingExposure.Exposure" path="." type="float">
                    <definition>
                      <caption>
                        <calculation>
                          <argument op="eq" idref="ReportingSegmentPrivate.Caption" type="string" />
                        </calculation>
                      </caption>
                      <maxLength idref="MaxLength.fValue" />
                      <formatMask idref="FormatMask.Limit" />
                      <readOnly>
                        <comparison compare="eq">
                          <operand idref="ReportingSegment.Available" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                      </readOnly>
                    </definition>
                  </public>
                  <public id="ReportingExposure.FieldID" path="@fieldID" type="string">
                    <definition>
                      <caption value="Field ID" />
                      <readOnly idref="True" />
                    </definition>
                  </public>
                  <object id="ReportingExposurePrivate">
                    <minOccurs value="1" />
                    <maxOccurs value="1" />
                    <private id="ReportingExposurePrivate.ShowExposure" caption="" type="boolean">
                      <value>
                        <comparison compare="eq">
                          <operand idref="ReportingCollection.CurrentFieldID" type="string" />
                          <operand idref="ReportingExposure.FieldID" type="string" />
                        </comparison>
                      </value>
                    </private>
                  </object>
                </object>
                <object id="ReportingSegmentPrivate">
                  <minOccurs value="1" />
                  <maxOccurs value="1" />
                  <private id="ReportingSegmentPrivate.Caption" type="string" comment="" caption="Caption" alwaysRun="1" path="Caption">
                    <value>
                      <calculation>
                        <argument op="eq" idref="ReportingSegment.startDate" type="date" />
                        <argument op="add" type="string" value=" - " />
                        <argument op="add" idref="ReportingSegment.endDate" type="date" />
                      </calculation>
                    </value>
                  </private>
                  <private id="ReportingSegmentPrivate.TotalActualExposurePerSegment" caption="" type="float">
                    <value>
                      <iterator type="float" scope="all" action="sum" idref="ReportingExposure">
                        <reference idref="ReportingExposure.Exposure" type="float" />
                        <where idref="ReportingExposurePrivate.ShowExposure" />
                      </iterator>
                    </value>
                  </private>
                </object>
                <public id="ReportingSegment.Available" path="@available" type="boolean">
                  <definition>
                    <caption value="Available" />
                  </definition>
                </public>
              </object>
            </object>
            <object id="ReportingSegmentsPrivate">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="ReportingSegmentsPrivate.ExposureGroupExists" caption="" type="int">
                <value>
                  <iterator type="int" scope="all" action="count" idref="ReportingExposureGroup">
                    <where>
                      <comparison compare="eq">
                        <operand idref="ReportingExposureGroupPrivate.ShowExposureGroup" type="boolean" />
                        <operand idref="True" type="int" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
              <private id="ReportingSegmentsPrivate.SetTotalActualExposure" caption="" type="string">
                <value>
                  <request verb="ManuScript.setValueRq" get="@status">
                    <responsePath value="" />
                    <onFailure value="" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                    <nameValues>
                      <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue idref="ReportingCollection.CurrentFieldID" name="field" dataType="attribute" />
                      <nameValue idref="ReportingSegmentsPrivate.TotalActualExposure" name="value" dataType="attribute" />
                      <nameValue idref="ReportingCollectionPrivate.ReportingExposureContextPath" name="context" dataType="attribute" />
                    </nameValues>
                  </request>
                </value>
                <affects>
                  <reference idref="ReportingSegmentsPrivate.TotalActualExposure" effect="preEffect" />
                </affects>
              </private>
              <private id="ReportingSegmentsPrivate.TotalActualExposure" caption="" type="float" alwaysRun="1">
                <value>
                  <iterator type="float" scope="all" action="sum" idref="ReportingExposureGroup">
                    <reference idref="ReportingExposureGroupPrivate.TotalActualExposureSum" type="float" />
                    <where>
                      <comparison compare="eq">
                        <operand idref="ReportingExposureGroup.groupID" type="string" />
                        <operand idref="ReportingCollection.CurrentGroupID" type="string" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
                <misc>
                  <if>
                    <condition>
                      <comparison compare="eq">
                        <operand idref="ReportingExposureGroup.type" type="int" />
                        <operand type="string" value="2" />
                      </comparison>
                    </condition>
                    <then idref="ReportingSegmentsPrivate.TotalActualExposureUnits" />
                  </if>
                </misc>
              </private>
              <private id="ReportingSegmentsPrivate.TotalActualExposureUnits" caption="" type="float" alwaysRun="1">
                <value>
                  <iterator type="float" scope="all" action="sum" idref="ReportingExposureGroup">
                    <reference idref="ReportingExposureGroupPrivate.TotalActualExposureSumUnits" type="float" />
                    <where>
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="ReportingExposureGroup.groupID" type="string" />
                          <operand idref="ReportingCollection.CurrentGroupID" type="string" />
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="ReportingExposureGroup.type" type="int" />
                          <operand type="int" value="2" />
                        </comparison>
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
            </object>
          </object>
        </object>
        <object id="PolicyAdminProcessing" abstract="1">
          <object id="ConstantsPolicyAdminProcessing" abstract="1">
            <private id="ConstantsPolicyAdminProcessing.ProRateType" caption="" type="int" comment="Used in WrittenPremiumSharedConfiguration&#xD;&#xA;0 = no special prorating&#xD;&#xA;1 = pro rate for cancel&#xD;&#xA;2 = pro rate for reinstate&#xD;&#xA;4 = Audit&#xD;&#xA;5 = Reporting&#xD;&#xA;6 = Final Report&#xD;&#xA;11 = Suspend&#xD;&#xA;12 = Resume" override="1">
              <value>
                <select idref="CurrentTransaction.Type">
                  <case type="int" value="1" select="Cancel" />
                  <case type="int" value="2" select="Reinstate" />
                  <case type="int" value="0" select="Renew" />
                  <case type="int" value="0" select="Rewrite" />
                  <case type="int" value="0" select="Reissue" />
                  <case type="int" value="0" select="Restart" />
                  <case type="int" value="4" select="FinalAudit" />
                  <case type="int" value="4" select="RevisedFinalAudit" />
                  <case type="int" value="4" select="InterimAudit" />
                  <case type="int" value="4" select="RevisedInterimAudit" />
                  <case type="int" value="5" select="Reporting" />
                  <case type="int" value="5" select="RevisedReporting" />
                  <case type="int" value="6" select="FinalReport" />
                  <case type="int" value="11" select="Suspend" />
                  <case type="int" value="12" select="Resume" />
                  <otherwise type="int" value="0" />
                </select>
              </value>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="CurrentTransaction.Type" type="string" />
                          <operand type="string" value="Cancel" />
                        </comparison>
                        <comparison compare="or">
                          <operand idref="PolicyInput.IsAuditable" type="boolean" />
                          <operand idref="PolicyOutputNonShredded.IsFinalReportable" type="boolean" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsFlatCancel" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="0" />
                </if>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="CurrentTransaction.Type" type="string" />
                          <operand type="string" value="Reinstate" />
                        </comparison>
                        <comparison compare="or">
                          <operand idref="PolicyInput.IsAuditable" type="boolean" />
                          <operand idref="PolicyOutputNonShredded.IsFinalReportable" type="boolean" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsReinstateAfterFlatCancel" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="0" />
                </if>
              </misc>
              <worksheet>
                <comparison idref="False" type="int" />
              </worksheet>
            </private>
            <private id="ConstantsPolicyAdminProcessing.IsFinalAuditAfterCancel" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="contains">
                      <operand idref="CurrentTransaction.Type" type="string" />
                      <operand type="string" value="FinalAudit" />
                    </comparison>
                    <comparison compare="isnot">
                      <operand idref="CurrentTransaction.Type" type="string" />
                      <operand type="string" value="VoidFinalAudit,VoidInterimAudit" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="PolicyOutput.Status" type="string" />
                    <operand type="string" value="Cancelled" />
                  </comparison>
                </comparison>
              </value>
            </private>
            <object id="CurrentTransaction" abstract="1">
              <private id="CurrentTransaction.RevisionOf" caption="" type="string">
                <value>
                  <iterator type="string" scope="last" action="sum" idref="Transaction">
                    <reference idref="TransactionOutput.RevisionOf" type="string" />
                  </iterator>
                </value>
              </private>
            </object>
          </object>
          <object id="FunctionsPolicyAdminProcessing" abstract="1">
            <object id="SessionComponentizationProcess">
              <minOccurs value="1" />
              <maxOccurs value="1" />
              <private id="SessionComponentizationProcess.Execute" caption="" type="string" />
            </object>
            <object id="UpdateTransactionRecord" abstract="1">
              <private id="UpdateTransactionRecord.ExecuteCheck" caption="" type="boolean">
                <value>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsPackagePolicyInLOB" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </value>
              </private>
              <private id="UpdateTransactionRecord.Value" caption="" type="string" override="1">
                <value>
                  <request verb="TransACT.updateTransactionRecordRq" get="@status" validRef="UpdateTransactionRecord.ExecuteCheck">
                    <responsePath value="" />
                    <onFailure idref="True" />
                    <modifySession value="" />
                    <usesSession value="" />
                    <default value="" />
                  </request>
                </value>
                <affects>
                  <reference idref="PolicyAdminPrivate.SetupWaiveChargeCheck" effect="preEffect" />
                  <reference idref="UpdateTransactionRecord.UpdateEffectiveDateCheck" effect="postEffect" />
                  <reference idref="PolicyPrivate.TransactionStatCodeSetup" effect="postEffect" />
                </affects>
              </private>
              <private id="UpdateTransactionRecord.UpdateEffectiveDateCheck" caption="" type="date">
                <value>
                  <if>
                    <condition idref="ConstantsPolicyAdminProcessing.IsNewTerm" />
                    <then idref="UpdateTransactionRecord.UpdateEffectiveDate" />
                  </if>
                </value>
              </private>
              <private id="UpdateTransactionRecord.UpdateEffectiveDate" caption="" type="date">
                <value>
                  <iterator type="date" scope="last" action="sum" idref="Transaction_Current">
                    <reference idref="Transaction_CurrentPrivate.SetEffectiveDate" type="date" />
                    <where>
                      <comparison compare="eq">
                        <operand idref="Transaction_Current.ID" type="string" />
                        <operand idref="PolicyOutputNonShredded.CurrentTransactionID" type="string" />
                      </comparison>
                    </where>
                  </iterator>
                </value>
              </private>
            </object>
          </object>
        </object>
        <public id="PolicyAdmin.UseDCTBilling" path="UseDCTBilling" type="boolean" override="1">
          <definition>
            <caption value="Use DCT Billing" />
          </definition>
          <rules>
            <default>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.Billing" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Value" />
                <keyRef type="string" value="Included" name="Value" />
              </lookup>
            </default>
          </rules>
        </public>
        <private id="PolicyAdmin.BillingManuScriptID" caption="" type="string" override="1">
          <value>
            <lookup>
              <tableRef value="(custom defined)" idref="TableNames.Billing" />
              <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
              <fieldRef value="Value" />
              <keyRef type="string" value="BaseManuScriptID" name="Value" />
            </lookup>
          </value>
        </private>
        <private id="PolicyAdmin.BillingWorkflowManuScriptID" caption="" type="string" override="1">
          <value>
            <lookup>
              <tableRef value="(custom defined)" idref="TableNames.Billing" />
              <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
              <fieldRef value="Value" />
              <keyRef type="string" value="WorkflowManuScriptID" name="Value" />
            </lookup>
          </value>
        </private>
        <public id="PolicyAdmin.IsPolicyConvertedToFragments" path="IsPolicyConvertedToFragments" type="boolean" comment="Indicator of whether a policy has been converted over to using Session Componentization.">
          <definition>
            <caption value="Is Policy Converted To Fragments" />
          </definition>
          <rules>
            <default idref="False" />
          </rules>
        </public>
        <private id="PolicyAdmin.BillingInstallmentScheduleManuScriptID" caption="" type="string" override="1">
          <value>
            <lookup>
              <tableRef value="(custom defined)" idref="TableNames.Billing" />
              <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
              <fieldRef value="Value" />
              <keyRef type="string" value="InstallmentScheduleManuScriptID" name="Value" />
            </lookup>
          </value>
        </private>
        <private id="PolicyAdmin.UseDCTBillingInstallmentSchedule" type="boolean" path="UseDCTBillingInstallmentSchedule" override="1">
          <value>
            <if>
              <condition>
                <comparison compare="eq">
                  <operand idref="PolicyAdmin.UseDCTBilling" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </condition>
              <then idref="False" />
              <else>
                <lookup>
                  <tableRef value="(custom defined)" idref="TableNames.Billing" />
                  <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                  <fieldRef value="Value" />
                  <keyRef type="string" value="ShowInstallments" name="Value" />
                </lookup>
              </else>
            </if>
          </value>
        </private>
        <object id="PolicyAdminInput" abstract="1">
          <public id="PolicyAdminInput.ID" path="@id" type="string">
            <definition>
              <caption value="ID" />
            </definition>
          </public>
        </object>
        <public id="PolicyAdmin.WaiveChargeCheck" path="WaiveChargeCheck" type="string">
          <definition>
            <caption value="Waive Charge Check" />
          </definition>
          <rules>
            <forceRerate value="1" />
          </rules>
        </public>
        <private id="PolicyAdmin.WorkflowVMManuScriptID" caption="" type="string">
          <value>
            <request verb="ManuScriptBroker.listRq" get="items/item/@id">
              <responsePath value="" />
              <onFailure value="" />
              <modifySession value="" />
              <usesSession value="" />
              <default value="Carrier_CommercialLines_Workflow_VM_3_0_0_0" />
              <nameValues>
                <nameValue value="" name="keys" dataType="element">
                  <nameValue value="" name="key" dataType="element">
                    <nameValue value="lob" name="name" dataType="attribute" />
                    <nameValue value="=" name="operator" dataType="attribute" />
                    <nameValue value="CarrierCPP" name="value" dataType="attribute" />
                  </nameValue>
                  <nameValue value="" name="key" dataType="element">
                    <nameValue value="state" name="name" dataType="attribute" />
                    <nameValue value="=" name="operator" dataType="attribute" />
                    <nameValue value="US-INH" name="value" dataType="attribute" />
                  </nameValue>
                  <nameValue value="" name="key" dataType="element">
                    <nameValue value="productCode" name="name" dataType="attribute" />
                    <nameValue value="=" name="operator" dataType="attribute" />
                    <nameValue value="Workflow" name="value" dataType="attribute" />
                  </nameValue>
                  <nameValue value="" name="key" dataType="element">
                    <nameValue idref="PolicyAdmin.EffectiveDateKeyName" name="name" dataType="attribute" />
                    <nameValue value="&lt;=" name="operator" dataType="attribute" />
                    <nameValue idref="PolicyAdmin.EffectiveDateKey" name="value" dataType="attribute" />
                  </nameValue>
                  <nameValue value="" name="sort" dataType="element">
                    <nameValue idref="PolicyAdmin.EffectiveDateKeyName" name="name" dataType="attribute" />
                    <nameValue value="descending" name="direction" dataType="attribute" />
                  </nameValue>
                </nameValue>
              </nameValues>
            </request>
          </value>
        </private>
        <private id="PolicyAdmin.BillingWorkflowVMManuScriptID" caption="" type="string" override="1">
          <value>
            <lookup>
              <tableRef value="(custom defined)" idref="TableNames.Billing" />
              <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
              <fieldRef value="Value" />
              <keyRef type="string" value="WorkflowVMManuscriptID" name="Value" />
            </lookup>
          </value>
        </private>
        <private id="PolicyAdmin.BillingInstallmentScheduleVMManuScriptID" caption="" type="string" override="1">
          <value>
            <lookup>
              <tableRef value="(custom defined)" idref="TableNames.Billing" />
              <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
              <fieldRef value="Value" />
              <keyRef type="string" value="InstallmentScheduleVMManuScriptID" name="Value" />
            </lookup>
          </value>
        </private>
      </object>
      <object id="Workflow" abstract="1">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="Actions" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="SaveForLater" abstract="1">
            <private id="SaveForLater.Show" caption="" type="boolean" override="1">
              <value>
                <comparison compare="or">
                  <comparison compare="and">
                    <comparison compare="gt">
                      <operand idref="ModifyProcessingData.TransactionCount" type="float" />
                      <operand type="int" value="1" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="and">
                    <comparison compare="ne">
                      <operand idref="PolicyOutputNonShredded.CurrentTransactionProcessingDataState" type="string" />
                      <operand type="string" value="open" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="ModifyProcessingData.TransactionCount" type="float" />
                      <operand type="int" value="1" />
                    </comparison>
                  </comparison>
                </comparison>
              </value>
              <misc>
                <if>
                  <condition idref="PolicyAdminPrivate.IsLocked" />
                  <then idref="False" />
                </if>
              </misc>
            </private>
            <private id="SaveForLater.PreEventField" caption="" type="string" override="1">
              <value>
                <if>
                  <condition>
                    <comparison compare="eq">
                      <operand idref="SaveForLater.CheckIn" type="boolean" />
                      <operand idref="True" type="int" />
                    </comparison>
                  </condition>
                  <then value="" />
                  <else value="It is not valid to unlock this policy at this time." />
                </if>
              </value>
              <affects>
                <reference idref="SaveForLater.PreAction" effect="preEffect" />
              </affects>
            </private>
            <private id="SaveForLater.PreAction" caption="" type="string">
              <affects>
                <reference idref="PolicyPrivate.ResetCurrentManuscriptValuesForCPPCheck" effect="preEffect" />
                <reference idref="PolicyPrivate.ReRateCPPPolicyCheck" effect="preEffect" />
                <reference idref="SaveForLater.StorePolicyCPPCheck" effect="postEffect" />
              </affects>
            </private>
            <private id="SaveForLater.StorePolicyCPPCheck" caption="" type="string">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="and">
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.StartedInCPP" type="boolean" />
                            <operand idref="True" type="int" />
                          </comparison>
                          <comparison compare="eq">
                            <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                            <operand idref="False" type="int" />
                          </comparison>
                        </comparison>
                        <comparison compare="eq">
                          <operand idref="PolicyInput.LineOfBusiness" type="string" />
                          <operand type="string" value="Package" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="PolicyPrivate.StorePolicyRq" />
                </if>
              </value>
            </private>
          </object>
          <object id="ReturnToCPP">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="ReturnToCPP.Show" caption="" type="boolean">
              <value>
                <comparison compare="and">
                  <operand idref="PolicyOutputNonShredded.IsPackagePolicy" type="boolean" />
                  <comparison compare="eq">
                    <operand idref="GlobalOutput.CurrentlyInCPP" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
              </value>
            </private>
          </object>
        </object>
        <object id="Rules" abstract="1">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="Rules.Today" type="date">
            <value>
              <session sessionValue="datetime" />
            </value>
          </private>
          <private id="Rules.PolicyIsNotQuoteOrApplication" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="eq">
                  <operand idref="Rules.PolicyIsQuote" type="float" />
                  <operand idref="False" type="int" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="Rules.PolicyIsInApplication" type="float" />
                  <operand idref="False" type="int" />
                </comparison>
              </comparison>
            </value>
          </private>
          <private id="Rules.StatusIsApproved" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="PolicyOutputNonShredded.LastTransactionStatus" type="string" />
                <operand type="string" value="Approved" />
              </comparison>
            </value>
          </private>
        </object>
        <object id="SpreadsheetImport">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="SpreadsheetImport.OverwriteOrAppend" path="upload/OverwriteOrAppend" type="string">
            <definition>
              <caption value="Overwrite Or Append" />
            </definition>
          </public>
          <private id="SpreadsheetImport.IsImportOverwrite" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="SpreadsheetImport.OverwriteOrAppend" type="string" />
                <operand type="string" value="Overwrite" />
              </comparison>
            </value>
          </private>
          <private id="SpreadsheetImport.IsImportAppend" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="SpreadsheetImport.OverwriteOrAppend" type="string" />
                <operand type="string" value="Append" />
              </comparison>
            </value>
          </private>
        </object>
      </object>
      <table id="BG2TerritoryZipLookupApplicable" tableType="local">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="State" type="string" find="eq">
          <key value="Remainder" default="1" />
          <key value="CT" />
          <key value="DE" />
          <key value="MA" />
          <key value="MD" />
          <key value="ME" />
          <key value="NC" />
          <key value="NH" />
          <key value="NJ" />
          <key value="RI" />
          <key value="VA" />
        </rowKeys>
        <data>
          <row value="0" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
          <row value="1" />
        </data>
      </table>
      <table id="NT_ScheduleModCeditsAndDebits" tableType="local">
        <fields>
          <field type="int" name="Credit" />
          <field type="int" name="Debit" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="Management" />
          <key value="Employees" />
          <key value="Equipment" />
          <key value="Safety" />
          <key value="Dispersion" />
        </rowKeys>
        <colKeys name="Coverage" type="int" find="eq">
          <key value="Liability" />
          <key value="PhysicalDamage" />
        </colKeys>
        <data>
          <row value="-5,5,-5,5" />
          <row value="-5,5,-5,5" />
          <row value="-5,10,-5,10" />
          <row value="-10,5,-10,5" />
          <row value="0,0,-10,10" />
        </data>
      </table>
      <object id="StatCodeLineCoverageGroup" path="//line/coverage[Indicator=1]">
        <minOccurs value="0" />
        <maxOccurs value="*" />
        <object id="StatCodeLineCoverageGroupInput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="StatCodeLineCoverageGroupInput.Type" path="Type" type="string">
            <definition>
              <caption value="Type" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeLineCoverageGroupInput.StatCodeSubline" path="statCode[Type=&quot;Subline&quot;]/sValue" type="string">
            <definition>
              <caption value="Subline" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeLineCoverageGroupInput.StatCodeLOB" path="statCode[Type=&quot;AnnualStatementLOBCode&quot;]/sValue" type="string">
            <definition>
              <caption value="Annual Statement LOB" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeLineCoverageGroupInput.StatCodeClass" path="statCode[Type=&quot;Class&quot;]/sValue" type="string">
            <definition>
              <caption value="Class" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeLineCoverageGroupInput.StatCodePremium" path="Premium" type="float">
            <definition>
              <caption value="Premium" />
              <maxLength idref="MaxLength.fValue" />
            </definition>
          </public>
          <public id="StatCodeLineCoverageGroupInput.StatCodeExposure" path="limit[Type=&quot;Standard&quot;]/iValue" type="string">
            <definition>
              <caption value="Exposure" />
              <maxLength idref="MaxLength.iValue" />
            </definition>
          </public>
          <public id="StatCodeLineCoverageGroupInput.StatCodePremiumFE" path="PremiumFE" type="float">
            <definition>
              <caption value="Fully Earned Premium" />
              <maxLength idref="MaxLength.fValue" />
            </definition>
          </public>
        </object>
        <nameValues schemaExclude="1" />
      </object>
      <object id="StatCodeLineGroup" path="//line/statCode">
        <minOccurs value="0" />
        <maxOccurs value="*" />
        <object id="StatCodeLineGroupInput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="StatCodeLineGroupInput.Type" path="Type" type="string">
            <definition>
              <caption value="Stat Code Line Group Input Type" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeLineGroupInput.sValue" path="sValue" type="string">
            <definition>
              <caption value="Stat Code Line Group Input s Value" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
        </object>
        <nameValues schemaExclude="1" />
      </object>
      <object id="StatCodeRiskCoverageGroup" path="//line/risk/coverage[Indicator=1]">
        <minOccurs value="0" />
        <maxOccurs value="*" />
        <object id="StatCodeRiskCoverageGroupInput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="StatCodeRiskCoverageGroupInput.StatCodeClass" path="statCode[Type=&quot;Class&quot;]/sValue" type="string">
            <definition>
              <caption value="Class" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeRiskCoverageGroupInput.StatCodeLOB" path="statCode[Type=&quot;AnnualStatementLOBCode&quot;]/sValue" type="string">
            <definition>
              <caption value="Annual Statemen LOB" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeRiskCoverageGroupInput.StatCodeSubline" path="statCode[Type=&quot;Subline&quot;]/sValue" type="string">
            <definition>
              <caption value="Subline" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeRiskCoverageGroupInput.Type" path="Type" type="string">
            <definition>
              <caption value="Stat Code Risk Coverage Group Input Type" />
              <maxLength idref="MaxLength.sValue" />
            </definition>
          </public>
          <public id="StatCodeRiskCoverageGroupInput.StatCodePremium" path="Premium" type="float">
            <definition>
              <caption value="Premium" />
              <maxLength idref="MaxLength.fValue" />
            </definition>
          </public>
          <public id="StatCodeRiskCoverageGroupInput.StatCodePremiumFE" path="PremiumFE" type="float">
            <definition>
              <caption value="Fully Earned Premium" />
              <maxLength idref="MaxLength.fValue" />
            </definition>
          </public>
        </object>
        <nameValues schemaExclude="1" />
      </object>
      <private id="data.test" type="string" comment="" />
      <private id="data.CompleteTransactionSetup" caption="" type="boolean" override="1">
        <value idref="True" />
        <affects>
          <reference idref="PolicyPrivate.ClearUnSelectedLinePremiumTotalsCheck" effect="postEffect" />
          <reference idref="AccountPrivate.AddAdditionalInterestsCurrentTransactionIDOnRenew" effect="postEffect" />
          <reference idref="AccountPrivate.AddAdditionalOtherInterestCurrentTransactionIDOnRenew" effect="postEffect" />
          <reference idref="AccountPrivate.AddBuildingCurrentTransactionIDOnRenew" effect="postEffect" />
          <reference idref="AccountPrivate.AddCovMiscellaneousCurrentTransactionIDOnRenew" effect="postEffect" />
          <reference idref="AccountPrivate.AddLocationCurrentTransactionIDOnRenew" effect="postEffect" />
          <reference idref="AccountPrivate.AddLocationCurrentTransactionIDOnNewCheck" effect="postEffect" />
          <reference idref="AccountPrivate.AddRiskCurrentTransactionIDOnRenew" effect="postEffect" />
          <reference idref="AccountPrivate.DeleteAddedCurrentTransactionTransform" effect="postEffect" />
          <reference idref="AccountPrivate.LocationPreviouslyAddedTransactionIDSetup" effect="postEffect" />
          <reference idref="PolicyPrivate.SetGroupNumbersAtIssueCheck" effect="postEffect" />
          <reference idref="PolicyAdminPrivate.ProductTransactionCommit" effect="postEffect" />
          <reference idref="PolicyPrivate.InitializePolicyFormsManuScriptIDsCheck" effect="postEffect" />
          <reference idref="PolicyPrivate.InitializeFormsLineManuScriptIDsCheck" effect="postEffect" />
          <reference idref="PolicyPrivate.SetPolicyNumber" effect="postEffect" />
          <reference idref="ConstantsPolicy.CurrentPolicyNumberIdentifier" effect="postEffect" />
          <reference idref="PolicyPrivate.StorePolicyCheck" effect="postEffect" />
          <reference idref="PrintingAndFormsWorksheet.AttachRatingWorksheetCheck" effect="postEffect" />
          <reference idref="BillingSetup.Execute" effect="postEffect" />
        </affects>
      </private>
      <private id="data.StartTransactionSetup" caption="" type="boolean" override="1">
        <value idref="True" />
        <affects>
          <reference idref="PolicyPrivate.ClearPreTransactionProductActivitesCompleted" effect="postEffect" />
          <reference idref="PolicyPrivate.ClearFormsData" effect="postEffect" />
          <reference idref="PolicyAdminPrivate.ProductTransactionSetup" effect="postEffect" />
        </affects>
      </private>
      <table id="ChangeSummaryFields" tableType="local">
        <fields>
          <field type="int" name="GroupName" />
          <field type="int" name="FieldName" />
        </fields>
        <rowKeys name="Field" type="string" find="eq">
          <key value="PolicyNumber" />
          <key value="EffectiveDate" />
          <key value="ExpirationDate" />
          <key value="Address1" />
          <key value="Address2" />
          <key value="City" />
          <key value="State" />
          <key value="ZipCode" />
          <key value="InsuredName" />
        </rowKeys>
        <data>
          <row value="Policy,PolicyOutput.PolicyNumber" />
          <row value="Policy,PolicyInput.EffectiveDate" />
          <row value="Policy,PolicyInput.ExpirationDate" />
          <row value="Account,AccountInput.Address1" />
          <row value="Account,AccountInput.Address2" />
          <row value="Account,AccountInput.City" />
          <row value="Account,AccountInput.State" />
          <row value="Account,AccountInput.ZipCode" />
          <row value="Account,AccountInput.Name" />
        </data>
      </table>
      <table id="PrintingAndFormsInfo" tableType="local" override="1">
        <fields>
          <field type="int" name="FormsInfo" />
        </fields>
        <rowKeys name="LOB" type="string" find="eq" pageKey="1">
          <key value="Default" default="1" />
        </rowKeys>
        <rowKeys name="Form Info" type="string" find="eq">
          <key value="PrintJobName" />
          <key value="FilePath" />
          <key value="OnePDF" />
        </rowKeys>
        <data>
          <row value="_TransactionPrint" />
          <row value="C:\Temp\" />
          <row value="1" />
        </data>
      </table>
      <private id="data.TotalResultPreEffect" caption="" type="string">
        <affects>
          <reference idref="PolicyPrivate.InitializeCoveragePremiums" effect="postEffect" />
          <reference idref="PolicyPrivate.IsPolicyValidForAudit" effect="postEffect" />
          <reference idref="PolicyOutput.StatCodePolicyType" effect="postEffect" />
        </affects>
      </private>
      <private id="data.TotalResultPostEffect" caption="" type="string">
        <affects>
          <reference idref="UpdateTransactionRecord.Value" effect="postEffect" />
          <reference idref="PolicyPrivate.InitializeCoverageIDs" effect="postEffect" />
        </affects>
      </private>
      <public id="data.TotalResult" path="TotalResult" type="float" comment="Shared" override="1" class="excludeInChangeSummary">
        <definition>
          <caption type="string" value="Total Result" />
          <maxLength idref="MaxLength.Premium" />
          <formatMask idref="FormatMask.PremiumPenniesDisplay" />
        </definition>
        <rules>
          <value>
            <external>
              <manuscriptName idref="PolicyManuScript.CPPRatingManuscriptID" />
              <referenceField value="data.TotalPremiumWritten" />
            </external>
          </value>
          <affects>
            <reference idref="data.TotalResultPreEffect" effect="preEffect" />
            <reference idref="data.TotalResultPostEffect" effect="postEffect" />
          </affects>
        </rules>
      </public>
      <object id="UserInterface" path="userinterface" abstract="1">
        <private id="UserInterface.IsValidTransaction" type="boolean" comment="" alwaysRun="1">
          <value idref="True" />
          <misc>
            <if>
              <condition>
                <comparison compare="eq">
                  <operand idref="PolicyAdminOutputNonShredded.ValidTransaction" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </condition>
              <then idref="False" />
            </if>
            <if>
              <condition>
                <comparison compare="and">
                  <comparison compare="and">
                    <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                    <operand idref="PitneyBowesOutput.GeocodingRequired" type="string" />
                  </comparison>
                  <comparison compare="or">
                    <comparison compare="eq">
                      <operand idref="Geocode.IsVerified" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                    <operand idref="AccountPrivate.AnyLocationUnverified" type="boolean" />
                  </comparison>
                </comparison>
              </condition>
              <then idref="False" message="UserInterface.IsValidTransactionMsg1" />
            </if>
          </misc>
          <affects>
            <reference idref="PolicyAdminPrivate.SetValidTransactionTrue" effect="postEffect" />
          </affects>
        </private>
        <private id="UserInterface.PolicyValidationFields" caption="" type="boolean">
          <affects>
            <reference idref="UserInterface.RequiredFieldsCompleted" effect="postEffect" />
            <reference idref="UserInterface.IsValidTransaction" effect="postEffect" />
          </affects>
        </private>
        <private id="UserInterface.PolicyValidationFieldsCheck" caption="" type="boolean">
          <value>
            <if>
              <condition>
                <comparison compare="eq">
                  <operand idref="PolicyAdminPrivate.IsLocked" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </condition>
              <then idref="UserInterface.PolicyValidationFields" />
            </if>
          </value>
        </private>
      </object>
      <table id="UI_ReturnToAfterApplication" tableType="local" override="1">
        <fields>
          <field type="int" name="Page" />
          <field type="int" name="PageSet" />
        </fields>
        <rowKeys name="Type" type="int" find="eq">
          <key value="1" default="1" />
          <key value="0" />
        </rowKeys>
        <data>
          <row value="RateSchedule,MainInterview" />
          <row value="Pricing,MainInterview" />
        </data>
      </table>
      <table id="UI_ReturnToAfterStatusChange" tableType="local" override="1">
        <fields>
          <field type="int" name="Page" />
          <field type="int" name="PageSet" />
        </fields>
        <rowKeys name="CurrentlyInCPP" type="int" find="eq" pageKey="1">
          <key value="1" />
          <key value="0" />
        </rowKeys>
        <rowKeys name="Status" type="int" find="eq">
          <key value="Pending" />
          <key value="Referred" />
          <key value="Approved" />
          <key value="Declined" />
          <key value="Scheduled" />
          <key value="Closed" />
          <key value="Committed" />
          <key value="AllOther" default="1" />
        </rowKeys>
        <data>
          <row value="RateSchedule,MainInterview" />
          <row value="RateSchedule,MainInterview" />
          <row value="RateSchedule,MainInterview" />
          <row value="RateSchedule,MainInterview" />
          <row value="RateSchedule,MainInterview" />
          <row value="RateSchedule,MainInterview" />
          <row value="RateSchedule,MainInterview" />
          <row value="RateSchedule,MainInterview" />
          <row value="Pricing,MainInterview" />
          <row value="Pricing,MainInterview" />
          <row value="Pricing,MainInterview" />
          <row value="Pricing,MainInterview" />
          <row value="Pricing,MainInterview" />
          <row value="Pricing,MainInterview" />
          <row value="Pricing,MainInterview" />
          <row value="Pricing,MainInterview" />
        </data>
      </table>
      <table id="WorkflowDisplayOnPage" tableType="local" override="1">
        <fields>
          <field type="int" name="PageSetName" />
          <field type="int" name="PageName" />
        </fields>
        <rowKeys name="Context" type="string" find="eq" pageKey="1">
          <key value="All" default="1" />
        </rowKeys>
        <rowKeys name="Status" type="string" find="eq">
          <key value="Submission" />
          <key value="Cleared" />
          <key value="NotCleared" />
          <key value="ClearanceOverride" />
          <key value="Quote" />
          <key value="PreQualify" />
          <key value="FullQuote" />
          <key value="Application" />
          <key value="Submit" />
          <key value="Bound" />
          <key value="Booked" />
          <key value="InForce" default="1" />
          <key value="Cancelled" />
          <key value="NonRenewed" />
          <key value="Declined" />
          <key value="Cancel-Pending" />
          <key value="Referred" />
          <key value="Approved" />
          <key value="DeclinedOverride" />
          <key value="Pending" />
          <key value="Scheduled" />
        </rowKeys>
        <data>
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
          <row value="All,RateSchedule" />
        </data>
      </table>
      <private id="ExitInterviewCheck" caption="" type="string" override="1">
        <affects>
          <reference idref="PolicyPrivate.ExitInterviewTargetCheck" effect="preEffect" />
        </affects>
      </private>
      <private id="DuplicatePolicyCheck" caption="" type="string" override="1">
        <value value="" />
        <affects>
          <reference idref="PolicyPrivate.ResetGroupNumberDuplicateCheck" effect="postEffect" />
          <reference idref="PrintingAndFormsWorksheet.AttachRatingWorksheetCheckRewrite" effect="postEffect" />
        </affects>
      </private>
      <private id="data.CanExecuteTotalResult" caption="" type="boolean" override="1">
        <value>
          <comparison compare="and">
            <comparison compare="or">
              <comparison compare="or">
                <comparison compare="and">
                  <comparison compare="and">
                    <comparison compare="eq">
                      <operand idref="PolicyAdminPrivate.CurrentTransactionHistoryID" type="string" />
                      <operand idref="PolicyOutputNonShredded.LastTransactionHistoryID" type="string" />
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                  <comparison compare="eq">
                    <operand idref="OSEventData.inAudit" type="boolean" />
                    <operand idref="False" type="int" />
                  </comparison>
                </comparison>
                <comparison compare="eq">
                  <operand idref="OSEventData.inAudit" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </comparison>
              <comparison compare="eq">
                <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </comparison>
            <comparison compare="or">
              <comparison compare="eq">
                <operand idref="PolicyOutput.Status" type="string" />
                <operand type="string" value="Quote" />
              </comparison>
              <comparison compare="eq">
                <operand idref="PolicyAdminOutputNonShredded.ActiveTransaction" type="boolean" />
                <operand idref="True" type="int" />
              </comparison>
            </comparison>
          </comparison>
        </value>
        <misc>
          <if>
            <condition>
              <comparison compare="and">
                <operand idref="PolicyPrivate.IsInInterimAudit" type="boolean" />
                <comparison compare="eq">
                  <operand idref="PolicyAdminPrivate.IsSegmentAudit" type="boolean" />
                  <operand idref="False" type="int" />
                </comparison>
              </comparison>
            </condition>
            <then idref="False" message="data.CanExecuteTotalResultMsg2" type="int" />
          </if>
          <if>
            <condition>
              <comparison compare="and">
                <comparison compare="and">
                  <comparison compare="eq">
                    <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                  <operand idref="PolicyAdminPrivate.IsCurrentTransactionOutOfSequence" type="boolean" />
                </comparison>
                <comparison compare="eq">
                  <operand idref="data.AppendReconcileChangesCheck" type="boolean" />
                  <operand idref="True" type="int" />
                </comparison>
              </comparison>
            </condition>
            <then idref="False" type="int" />
          </if>
        </misc>
      </private>
      <public id="EnableComponentization" path="../@fragment" type="boolean">
        <definition>
          <caption value="Enable Componentization" />
        </definition>
        <rules>
          <default value="0" />
        </rules>
      </public>
      <table id="ComponentizationDefault" tableType="local" separator=",">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="Key" type="boolean" find="eq">
          <key value="Enabled" />
        </rowKeys>
        <data>
          <row value="0" />
        </data>
      </table>
      <private id="EnableComponentizationDefault" type="boolean" comment="">
        <value>
          <lookup>
            <tableRef value="ComponentizationDefault" />
            <fieldRef value="Value" />
            <keyRef type="string" value="Enabled" name="Key" />
          </lookup>
        </value>
      </private>
      <table id="LOBAdvisoryBureau" tableType="local" separator=",">
        <fields>
          <field type="int" name="ISO" />
          <field type="int" name="NCCI" />
          <field type="int" name="AAIS" />
          <field type="int" name="MAIP" />
        </fields>
        <rowKeys name="LOB" type="string" find="eq">
          <key value="CommercialAuto" caption="" />
          <key value="GeneralLiability" caption="" />
          <key value="Property" caption="" />
          <key value="WorkersCompensation" caption="" />
          <key value="InlandMarine" caption="" />
          <key value="Crime" caption="" />
          <key value="BusinessOwners" caption="" />
          <key value="CommercialAutoMA" caption="" />
          <key value="CommercialUmbrella" caption="" />
          <key value="InlandMarineAAIS" caption="" />
          <key value="Default" default="1" caption="" />
        </rowKeys>
        <data>
          <row value="1,0,0,0" />
          <row value="1,0,0,0" />
          <row value="1,0,0,0" />
          <row value="0,1,0,0" />
          <row value="1,0,0,0" />
          <row value="1,0,0,0" />
          <row value="1,0,0,0" />
          <row value="0,0,0,1" />
          <row value="1,0,0,0" />
          <row value="0,0,1,0" />
          <row value="1,0,0,0" />
        </data>
      </table>
      <table id="LOBSelectSortOrder" tableType="local" separator="," comment="Value of 99 used for the lines of business that are not applicable on a Package policy">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="LOB" type="int" find="eq">
          <key value="CommercialAuto" caption="" />
          <key value="CommercialAutoMA" caption="" />
          <key value="GeneralLiability" caption="" />
          <key value="Property" caption="" />
          <key value="InlandMarine" caption="" />
          <key value="InlandMarineAAIS" caption="" />
          <key value="Crime" caption="" />
          <key value="CommercialUmbrella" caption="" />
          <key value="WorkersCompensation" caption="" />
          <key value="BusinessOwners" caption="" />
          <key value="Default" default="1" caption="" />
        </rowKeys>
        <data>
          <row value="1" />
          <row value="2" />
          <row value="3" />
          <row value="4" />
          <row value="5" />
          <row value="6" />
          <row value="7" />
          <row value="8" />
          <row value="99" />
          <row value="99" />
          <row value="99" />
        </data>
      </table>
      <private id="data.PostApplyChangesEvent" caption="" type="string" override="1">
        <value>
          <request verb="ManuScript.getValueRq" get="@status">
            <responsePath value="" />
            <onFailure value="" />
            <modifySession value="" />
            <usesSession value="" />
            <default value="" />
            <nameValues>
              <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
              <nameValue value="PolicyAdminPrivate.ProductPostApplyChangesEvent" name="field" dataType="attribute" />
            </nameValues>
          </request>
        </value>
      </private>
      <public id="data.LocationIDToDelete" path="LocationIDToDelete" type="string">
        <definition>
          <caption value="Location ID To Delete" />
        </definition>
        <rules>
          <nonRating value="1" />
        </rules>
      </public>
      <table id="OccupancyTypeDefault" tableType="local" separator=",">
        <fields>
          <field type="int" name="Value" />
        </fields>
        <rowKeys name="Type" type="string" find="eq">
          <key value="31" caption="Motel/Hotel" />
          <key value="32" caption="Apartment House" />
          <key value="33" caption="Office" />
          <key value="34" caption="Mercantile" />
          <key value="35" caption="Institutional" />
          <key value="36" caption="Service" />
          <key value="37" caption="Industrial/Processing" />
          <key value="38" caption="Contracting Policy" />
          <key value="Default" default="1" />
        </rowKeys>
        <data>
          <row value="MH" />
          <row value="A" />
          <row value="O" />
          <row value="M" />
          <row value="I" />
          <row value="S" />
          <row value="IP" />
          <row value="C" />
          <row value="" />
        </data>
      </table>
      <table id="ApplicationInformation" tableType="local" separator=",">
        <fields>
          <field type="int" name="ManuscriptId" />
          <field type="int" name="ModelCollection" />
          <field type="int" name="ViewModel" />
          <field type="int" name="View" />
        </fields>
        <rowKeys name="Name" type="string" find="eq">
          <key value="FormsPencilEditFooter" caption="" />
          <key value="PolicyDetails" caption="" />
          <key value="ClientInformation" caption="" />
          <key value="PolicyDocuments" caption="" />
          <key value="WIANotifications" caption="" />
          <key value="WIAAttachments" caption="" />
          <key value="WIATasks" caption="" />
          <key value="WIANotes" caption="" />
        </rowKeys>
        <data>
          <row value="Carrier_Forms_VM_1_0_0_0,PencilEdit,Footer,DuckCreekTech_Forms_VM_1_0_0_0_PencilEdit_Footer_View" />
          <row value="Carrier_PolicyDetails_VM_1_0_0_0,MainInterview,PolicyDetails,DuckCreekTech_PolicyDetails_VM_1_0_0_0_MainInterview_PolicyDetails_View" />
          <row value="Carrier_ClientInformation_VM_1_0_0_0,MainInterview,ClientInformation,DuckCreekTech_ClientInformation_VM_1_0_0_0_MainInterview_ClientInformation_View" />
          <row value="Carrier_Forms_VM_1_0_0_0,CreatePolicyDocuments,CreatePolicyDocuments,DuckCreekTech_Forms_VM_1_0_0_0_CreatePolicyDocuments_CreatePolicyDocuments_View" />
          <row value="Carrier_Notifications_VM_1_0_0_0,WIANotifications,WIANotifications," />
          <row value="Carrier_Attachments_VM_1_0_0_0,WIAAttachments,WIAAttachments," />
          <row value="Carrier_Tasks_VM_1_0_0_0,WIATasks,WIATasks," />
          <row value="Carrier_Notes_VM_1_0_0_0,WIANotes,WIANotes," />
        </data>
      </table>
      <private id="data.AppendReconcileChangesCheck" caption="" type="boolean">
        <value>
          <lookup>
            <tableRef value="(custom defined)" idref="TableNames.ApplicableForLineOfBusiness" />
            <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
            <fieldRef value="AppendReconcileChanges" />
            <onFailure idref="False" />
            <keyRef idref="PolicyInput.LineOfBusiness" type="string" name="LineOfBusiness" />
          </lookup>
        </value>
      </private>
      <private id="data.AppendReconcileChangesEvent" caption="" type="string">
        <value idref="True" />
        <affects>
          <reference idref="PolicyAdminPrivate.ProductAppendReconcileChangesCheck" effect="postEffect" />
        </affects>
      </private>
    </object>
    <messages>
      <message name="PolicyPrivate.IsPolicyValidForAuditMsg1" flag="comment" category="(message)">Policy is not valid for Audit.</message>
      <message name="ReferralRules.IsBindableAgentMsg1" flag="refer" category="(message)">Refer: Applications with Manuscript Endorsements must be submitted for underwriter review.</message>
      <message name="data.CanExecuteTotalResultMsg1" flag="comment" category="(message)">Policy is not rated during an Audit transaction until after the transaction is issued.</message>
      <message name="data.CanExecuteTotalResultMsg2" flag="comment" category="(message)">Policy is not re-rated during an Interim Audit transaction.</message>
      <message name="LocationPrivateKYTax.TaxFactorLookup_CountyMsg1" flag="comment" category="(message)">A KY Tax factor of 0 is being applied to Location #~LocationOutputNonShredded.Number~. Please review.</message>
      <message name="LocationPrivateKYTax.TaxFactorLookupMsg1" flag="comment" category="(message)">A KY Tax factor of 0 is being applied to Location #~LocationOutputNonShredded.Number~. Please review.</message>
      <message name="Location_GeocodePrivate.SetLastVerifiedToTodayCheckMsg1" flag="comment" category="(message)">The State cannot be changed if it is assigned to a Risk.</message>
      <message name="UserInterface.IsValidTransactionMsg1" flag="comment" category="(message)">All addresses must be verified.</message>
      <message name="LocationPrivateKYTax.TaxFactorLookupValueMsg1" flag="comment" category="(message)">A KY Tax factor of 0 is being applied to Location #~LocationOutputNonShredded.Number~. Please review.</message>
    </messages>
    <object id="TemporarySessionScratchPad" abstract="1">
      <object id="PrintingAndForms" abstract="1">
        <object id="PrintingAndFormsData" abstract="1">
          <private id="PrintingAndFormsData.ForceInit" caption="" type="int" override="1">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.PrintingAndFormsForceInit" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Value" />
                <keyRef type="string" value="default" name="Type" />
              </lookup>
            </value>
          </private>
          <private id="PrintingAndFormsData.Async" caption="" type="int">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.PrintingAndFormsForceInit" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="Async" />
                <keyRef type="string" value="default" name="Type" />
              </lookup>
            </value>
          </private>
        </object>
        <object id="PrintingAndFormsRequests" abstract="1">
          <private id="PrintingAndFormsRequests.AdditionalProcesses" caption="" type="string" />
          <private id="PrintingAndFormsRequests.ProcessFormsAsync" caption="" type="string">
            <value>
              <request verb="CustomServer.processRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue idref="PrintingAndFormsData.Async" name="async" dataType="attribute" />
                  <nameValue value="" name="xsltRequests" dataType="element">
                    <nameValue value="" name="Session.removeElementRq" dataType="element">
                      <nameValue value="_policyChangeSummaryResponse^ChangeSummaryResponse" name="path" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="ManuScript.getValueRq" dataType="element">
                      <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="PrintingAndFormsRequests.InitializePrintJob" name="field" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
        </object>
        <object id="PrintingAndFormsWorksheet">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="PrintingAndFormsWorksheet.AttachRatingWorksheet" caption="" type="string">
            <value>
              <request verb="CustomServer.processRq" get="@status" validRef="PrintingAndFormsWorksheet.ValidToExecute">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="" name="xsltRequests" dataType="element">
                    <nameValue value="" name="ManuScript.getValueRq" dataType="element">
                      <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                      <nameValue value="data.TotalResult" name="field" dataType="attribute" />
                      <nameValue value="1" name="worksheetData" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="ManuScript.printFormsRq" dataType="element">
                      <nameValue idref="LineManuScript.CPPManuscriptID" name="manuscript" dataType="attribute" />
                      <nameValue idref="PrintingAndFormsWorksheet.OutputFile" name="outputFile" dataType="attribute" />
                      <nameValue idref="PolicyPrivate.PolicyID" name="policyID" dataType="attribute" />
                      <nameValue value="1" name="onePDF" dataType="attribute" />
                      <nameValue idref="PrintingAndFormsWorksheet.FormsCaptionNumbered" name="formCaption" dataType="attribute" />
                      <nameValue idref="PrintingAndFormsWorksheet.PrintJobName" name="printJob" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                  <nameValue value="3" name="async" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PrintingAndFormsWorksheet.AttachRatingWorksheetCheck" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <comparison compare="and">
                      <operand idref="PrintingAndFormsWorksheet.AttachRatingWorksheetLookup" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="PolicyPrivate.IsCurrentTransactionRewrite" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                    <comparison compare="eq">
                      <operand idref="PolicyPrivate.IsCurrentTransactionRestart" type="boolean" />
                      <operand idref="False" type="int" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PrintingAndFormsWorksheet.AttachRatingWorksheet" />
              </if>
            </value>
          </private>
          <private id="PrintingAndFormsWorksheet.AttachRatingWorksheetLookup" caption="" type="boolean">
            <value>
              <if>
                <condition idref="OSEventData.inEstimate" />
                <then idref="False" />
                <else>
                  <lookup>
                    <tableRef value="(custom defined)" idref="TableNames.AttachRatingWorksheet" />
                    <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                    <fieldRef value="Value" />
                    <keyRef type="string" value="default" name="Type" />
                  </lookup>
                </else>
              </if>
            </value>
          </private>
          <private id="PrintingAndFormsWorksheet.FormsCaptionNumbered" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="Worksheet_" />
                <argument op="add" idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <argument op="add" type="string" value="Policy(" />
                <argument op="add" idref="PolicyAdminPrivate.TransactionCount" type="int" />
                <argument op="add" type="string" value=")" />
              </calculation>
            </value>
          </private>
          <private id="PrintingAndFormsWorksheet.OutputFile" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" idref="PrintingAndFormsData.FilePath" type="string" />
                <argument op="add" type="string" value="Worksheet_" />
                <argument op="add" idref="PolicyOutputNonShredded.LastTransactionType" type="string" />
                <argument op="add" idref="PolicyPrivate.CurrentDateTime" type="datetime" />
              </calculation>
            </value>
          </private>
          <private id="PrintingAndFormsWorksheet.PrintJobName" caption="" type="string">
            <value value="CPP_Rating_Worksheet" />
          </private>
          <private id="PrintingAndFormsWorksheet.ValidToExecute" caption="" type="boolean">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.ActionsApplicable" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="AttachRatingWorksheet" />
                <keyRef idref="PolicyOutputNonShredded.LastTransactionType" type="string" name="TransactionType" />
              </lookup>
            </value>
          </private>
          <private id="PrintingAndFormsWorksheet.AttachRatingWorksheetCheckRewrite" caption="" type="string">
            <value>
              <if>
                <condition>
                  <comparison compare="and">
                    <operand idref="PrintingAndFormsWorksheet.AttachRatingWorksheetLookup" type="boolean" />
                    <comparison compare="or">
                      <operand idref="PolicyPrivate.IsCurrentTransactionRewrite" type="boolean" />
                      <operand idref="PolicyPrivate.IsCurrentTransactionRestart" type="boolean" />
                    </comparison>
                  </comparison>
                </condition>
                <then idref="PrintingAndFormsWorksheet.AttachRatingWorksheet" />
              </if>
            </value>
          </private>
        </object>
        <object id="CommitTransactionPrintingAndForms" abstract="1">
          <private id="CommitTransactionPrintingAndForms.Execute" caption="" type="string" override="1">
            <value idref="PrintingAndFormsRequests.ProcessFormsAsync" />
          </private>
        </object>
      </object>
      <object id="PageDisplayFields">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="Account_Page">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="Account_Page.HideEntityOtherType" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="AccountInput.EntityType" type="string" />
                <operand type="string" value="Other" />
              </comparison>
            </value>
          </private>
        </object>
        <object id="PolicyDetail_Page">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="PolicyDetail_Page.SICNAICSCollapseDescription" caption="" type="string">
            <value>
              <calculation>
                <argument op="eq" type="string" value="NAICS and SIC Code Selections" />
              </calculation>
            </value>
          </private>
          <private id="PolicyDetail_Page.ShowNAICSCodeValue" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="PolicyInput.NAICSCode" type="string" />
                <operand type="string" value="" />
              </comparison>
            </value>
          </private>
          <private id="PolicyDetail_Page.IsAnySICOrNAICS" caption="" type="boolean">
            <value>
              <comparison compare="or">
                <operand idref="PolicyDetail_Page.ShowNAICSCodeValue" type="boolean" />
                <operand idref="PolicyDetail_Page.ShowSICCodeValue" type="boolean" />
              </comparison>
            </value>
          </private>
          <private id="PolicyDetail_Page.ShowSICCodeValue" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="PolicyInput.SICCode" type="string" />
                <operand type="string" value="" />
              </comparison>
            </value>
          </private>
        </object>
        <object id="Building_Page">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="Building_Page.ShowBuildingGrid" caption="" type="boolean">
            <value>
              <comparison compare="gt">
                <operand idref="BuildingGroup.CountCurrentLocation" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="Building_Page.ShowAddBuilding" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="LocationSelectInput.ShowAllLocations" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
            <misc>
              <if>
                <condition idref="PolicyAdminPrivate.IsLocked" />
                <then idref="False" />
              </if>
              <if>
                <condition>
                  <comparison compare="eq">
                    <operand idref="PolicyPrivate.IsInReporting" type="boolean" />
                    <operand idref="True" type="int" />
                  </comparison>
                </condition>
                <then idref="False" />
              </if>
            </misc>
          </private>
        </object>
        <object id="AOI_Page">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="AOI_Page.ShowAOIGrid" caption="" type="boolean">
            <value>
              <comparison compare="gt">
                <operand idref="AOIGroup.Count" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
          <private id="AOI_Page.ShowFieldsForType" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="AdditionalOtherInterestInput.Type" type="string" />
                <operand type="string" value="" />
              </comparison>
            </value>
          </private>
          <private id="AOI_Page.HideOtherDescription" caption="" type="boolean">
            <value>
              <comparison compare="eq">
                <operand idref="AdditionalOtherInterestPrivate.OtherDescriptionNeeded" type="boolean" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
        </object>
        <object id="CovMiscellaneous_Page">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="CovMiscellaneous_Page.ShowCovMiscellaneousGrid" caption="" type="boolean">
            <value>
              <comparison compare="gt">
                <operand idref="LinePrivate.CovMiscellaneousCount" type="int" />
                <operand type="int" value="0" />
              </comparison>
            </value>
          </private>
        </object>
      </object>
    </object>
    <object id="_processingData" abstract="1">
      <object id="Transaction_Current" abstract="1">
        <object id="Transaction_CurrentPrivate">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="Transaction_CurrentPrivate.SetPolicyManuscritpID" caption="" type="string">
            <value idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" />
            <affects>
              <reference idref="Transaction_Current.PolicyManuScriptID" effect="setValue" />
            </affects>
          </private>
          <private id="Transaction_CurrentPrivate.SetEffectiveDate" caption="" type="date">
            <value idref="PolicyInput.EffectiveDate" />
            <affects>
              <reference idref="Transaction_Current.EffectiveDate" effect="setValue" />
            </affects>
          </private>
        </object>
        <public id="Transaction_Current.ID" path="@id" type="string">
          <definition>
            <caption value="ID" />
          </definition>
        </public>
      </object>
      <object id="AvailableNumbersPerTerm" path="AvailableNumbersPerTerm">
        <minOccurs value="0" />
        <maxOccurs value="*" />
        <public id="AvailableNumbersPerTerm.NextAvailableLocationNumber" path="NextAvailableLocationNumber" type="int" alwaysRun="1">
          <definition>
            <caption value="Next Available Location Number" />
          </definition>
          <rules>
            <default value="2" />
          </rules>
        </public>
        <public id="AvailableNumbersPerTerm.NextAvailableLocationNumberAtStart" path="NextAvailableLocationNumberAtStart" type="int" alwaysRun="1">
          <definition>
            <caption value="Available Numbers Per Term Next Available Location Number At Start" />
          </definition>
          <rules>
            <default value="2" />
          </rules>
        </public>
        <public id="AvailableNumbersPerTerm.NextAvailableVehicleNumber" path="NextAvailableVehicleNumber" type="int">
          <definition>
            <caption value="Next Available Vehicle Number" />
          </definition>
          <rules>
            <default value="1" />
          </rules>
        </public>
        <public id="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtStart" path="NextAvailableVehicleNumberAtStart" type="int">
          <definition>
            <caption value="Available Numbers Per Term Next Available Vehicle Number At Start" />
          </definition>
          <rules>
            <default value="1" />
          </rules>
        </public>
        <object id="BuildingNumber" path="BuildingNumber">
          <minOccurs value="0" />
          <maxOccurs value="*" />
          <public id="BuildingNumber.ID" path="@id" type="string">
            <definition>
              <caption value="ID" />
            </definition>
          </public>
          <public id="BuildingNumber.LocationID" path="LocationID" type="string" alwaysRun="1">
            <definition>
              <caption value="Location ID" />
            </definition>
            <rules>
              <default idref="_processingData.CurrentLocationNumberIDForAdd" />
            </rules>
          </public>
          <public id="BuildingNumber.NextAvailableBuildingNumber" path="NextAvailableBuildingNumber" type="int">
            <definition>
              <caption value="Next Available Building Number" />
            </definition>
            <rules>
              <default value="1" />
            </rules>
          </public>
          <object id="BuildingNumberPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="BuildingNumberPrivate.ContextPath" caption="" type="string">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="BuildingNumber.ID" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="BuildingNumberPrivate.DeleteObjectRecord" caption="" type="string">
              <value>
                <request verb="ManuScript.deleteObjectRecordRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="BuildingNumber" name="objectID" dataType="attribute" />
                    <nameValue idref="BuildingNumberPrivate.ContextPath" name="context" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </private>
            <private id="BuildingNumberPrivate.InitializeNextAvailableBuildingNumber" caption="" type="int">
              <value value="1" />
              <affects>
                <reference idref="BuildingNumber.NextAvailableBuildingNumber" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingNumberPrivate.InitializeNextAvailableBuildingNumberAtStart" caption="" type="int">
              <value value="1" />
              <affects>
                <reference idref="BuildingNumber.NextAvailableBuildingNumberAtStart" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingNumberPrivate.SetBuildingNumberAtStart" caption="" type="int" alwaysRun="1">
              <value idref="BuildingNumber.NextAvailableBuildingNumber" />
              <affects>
                <reference idref="BuildingNumberPrivate.SetNextAvailableBuildingNumberFixAbortCheck" effect="preEffect" />
                <reference idref="BuildingNumber.NextAvailableBuildingNumberAtStart" effect="setValue" />
              </affects>
              <misc>
                <if>
                  <condition idref="PolicyPrivate.IsCurrentTransactionNewBusiness" />
                  <then value="1" />
                </if>
              </misc>
            </private>
            <private id="BuildingNumberPrivate.SetCurrentLocationNumberID" caption="" type="string" path="SetCurrentLocationNumberID">
              <value idref="BuildingNumber.LocationID" />
              <affects>
                <reference idref="AccountPrivate.CurrentLocationNumberID" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingNumberPrivate.InitializeNextAvailableBuildingNumberToStart" caption="" type="int" alwaysRun="1">
              <value idref="BuildingNumber.NextAvailableBuildingNumberAtStart" />
              <affects>
                <reference idref="BuildingNumber.NextAvailableBuildingNumber" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingNumberPrivate.SetBuildingNumberLocationID" caption="" type="string" alwaysRun="1">
              <value idref="AccountPrivate.CurrentLocationNumberID" />
              <affects>
                <reference idref="BuildingNumber.LocationID" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingNumberPrivate.NextAvailableBuildingNumberIncrement" caption="" type="int" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" idref="BuildingNumber.NextAvailableBuildingNumber" type="int" />
                  <argument op="add" type="int" value="1" />
                </calculation>
              </value>
              <affects>
                <reference idref="BuildingNumber.NextAvailableBuildingNumber" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingNumberPrivate.SetBuildingNumberAtIssue" caption="" type="int" path="SetBuildingNumberAtIssue" alwaysRun="1">
              <value idref="BuildingNumber.NextAvailableBuildingNumber" />
              <affects>
                <reference idref="BuildingNumber.NextAvailableBuildingNumberAtIssue" effect="setValue" />
              </affects>
            </private>
            <private id="BuildingNumberPrivate.SetNextAvailableBuildingNumberFixAbort" caption="" type="int" path="SetNextAvailableBuildingNumberFixAbort" alwaysRun="1">
              <affects>
                <reference idref="BuildingNumber.NextAvailableBuildingNumber" effect="setValue" />
              </affects>
              <value idref="BuildingNumber.NextAvailableBuildingNumberAtIssue" />
            </private>
            <private id="BuildingNumberPrivate.SetNextAvailableBuildingNumberFixAbortCheck" caption="" type="int" path="SetNextAvailableBuildingNumberFixAbortCheck" alwaysRun="1" comment="Have to ignore if out of sequence because of reconciliation issues across policy terms.">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsOtherThanCurrentTransactionOpenState" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="BuildingNumber.NextAvailableBuildingNumber" type="int" />
                          <operand idref="BuildingNumber.NextAvailableBuildingNumberAtIssue" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="BuildingNumberPrivate.SetNextAvailableBuildingNumberFixAbort" />
                </if>
              </value>
            </private>
          </object>
          <public id="BuildingNumber.NextAvailableBuildingNumberAtStart" path="NextAvailableBuildingNumberAtStart" type="int">
            <definition>
              <caption value="Building Number Next Available Building Number At Start" />
            </definition>
            <rules>
              <default value="1" />
            </rules>
          </public>
          <public id="BuildingNumber.NextAvailableBuildingNumberAtIssue" path="NextAvailableBuildingNumber/@AtIssue" type="int">
            <definition>
              <caption value="Next Available Building Number At Issue" />
            </definition>
            <rules>
              <default value="1" />
            </rules>
          </public>
        </object>
        <public id="AvailableNumbersPerTerm.PolicyEffectiveDate" path="PolicyEffectiveDate" type="date" alwaysRun="1">
          <definition>
            <caption value="Policy Effective Date" />
          </definition>
          <rules>
            <default idref="PolicyInput.EffectiveDate" />
            <misc>
              <if>
                <condition>
                  <comparison compare="or">
                    <comparison compare="or">
                      <operand idref="PolicyPrivate.IsCurrentTransactionNewBusiness" type="boolean" />
                      <operand idref="PolicyPrivate.IsCurrentTransactionRewrite" type="boolean" />
                    </comparison>
                    <operand idref="PolicyPrivate.IsCurrentTransactionRestart" type="boolean" />
                  </comparison>
                </condition>
                <then idref="PolicyInput.EffectiveDate" />
              </if>
            </misc>
          </rules>
        </public>
        <object id="AvailableNumbersPerTermPrivate">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <object id="AvailableVehicleNumberPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AvailableVehicleNumberPrivate.ResetNextAvailVehicleToValueAtStart" caption="" type="string" path="ResetNextAvailVehicleToValueAtStart">
              <value idref="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtStart" />
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" effect="setValue" />
              </affects>
            </private>
            <private id="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberAtStart" caption="" type="int" path="SetNextAvailableVehicleNumberAtStart">
              <value idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" />
              <affects>
                <reference idref="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberFixAbortCheck" effect="preEffect" />
                <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtStart" effect="setValue" />
              </affects>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <operand idref="PolicyPrivate.IsCurrentTransactionNewBusiness" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="1" />
                </if>
              </misc>
            </private>
            <private id="AvailableVehicleNumberPrivate.ResetVehicleNumberNextAvailable" caption="" type="int" path="ResetNextAvailVehicleToValueAtStart">
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" effect="setValue" />
              </affects>
              <value>
                <calculation>
                  <argument op="eq" idref="PolicyPrivate.VehicleCount" type="string" />
                  <argument op="add" type="int" value="1" />
                </calculation>
              </value>
            </private>
            <private id="AvailableVehicleNumberPrivate.NextAvailableVehicleNumberIncrement" caption="" type="int" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" type="int" />
                  <argument op="add" type="int" value="1" />
                </calculation>
              </value>
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" effect="setValue" />
              </affects>
            </private>
            <private id="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberFixAbort" caption="" type="int" path="SetNextAvailableVehicleNumberFixAbort" alwaysRun="1">
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" effect="setValue" />
              </affects>
              <value idref="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtIssue" />
            </private>
            <private id="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberFixAbortCheck" caption="" type="int" path="SetNextAvailableVehicleNumberFixAbortCheck" alwaysRun="1" comment="Have to ignore if out of sequence because of reconciliation issues across policy terms.">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsOtherThanCurrentTransactionOpenState" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" type="int" />
                          <operand idref="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtIssue" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberFixAbort" />
                </if>
              </value>
            </private>
            <private id="AvailableVehicleNumberPrivate.SetNextAvailableVehicleNumberAtIssue" caption="" type="int" path="SetNextAvailableVehicleNumberAtIssue" alwaysRun="1">
              <value idref="AvailableNumbersPerTerm.NextAvailableVehicleNumber" />
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtIssue" effect="setValue" />
              </affects>
            </private>
          </object>
          <object id="AvailableLocationNumberPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberAtStart" caption="" type="int" path="SetNextAvailableLocationNumberAtStart" alwaysRun="1">
              <value idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" />
              <affects>
                <reference idref="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberFixAbortCheck" effect="preEffect" />
                <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumberAtStart" effect="setValue" />
              </affects>
              <misc>
                <if>
                  <condition>
                    <comparison compare="and">
                      <operand idref="PolicyPrivate.IsCurrentTransactionNewBusiness" type="boolean" />
                      <comparison compare="eq">
                        <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then value="2" />
                </if>
              </misc>
            </private>
            <private id="AvailableLocationNumberPrivate.ResetLocationNumberNextAvailable" caption="" type="int">
              <value>
                <calculation>
                  <argument op="eq" idref="AccountPrivate.LocationCount" type="int" />
                  <argument op="add" type="int" value="1" />
                </calculation>
              </value>
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" effect="setValue" />
              </affects>
            </private>
            <private id="AvailableLocationNumberPrivate.NextAvailableLocationNumberIncrement" caption="" type="int" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" type="int" />
                  <argument op="add" type="int" value="1" />
                </calculation>
              </value>
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" effect="setValue" />
              </affects>
            </private>
            <private id="AvailableLocationNumberPrivate.ResetNextAvailLocationToValueAtStart" caption="" type="int" path="ResetNextAvailLocationToValueAtStart">
              <value idref="AvailableNumbersPerTerm.NextAvailableLocationNumberAtStart" />
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" effect="setValue" />
              </affects>
            </private>
            <private id="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberAtIssue" caption="" type="int" path="SetNextAvailableLocationNumberAtStart" alwaysRun="1">
              <value idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" />
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumberAtIssue" effect="setValue" />
              </affects>
            </private>
            <private id="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberFixAbort" caption="" type="int" path="SetNextAvailableLocationNumberAtStart" alwaysRun="1">
              <affects>
                <reference idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" effect="setValue" />
              </affects>
              <value idref="AvailableNumbersPerTerm.NextAvailableLocationNumberAtIssue" />
            </private>
            <private id="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberFixAbortCheck" caption="" type="int" path="SetNextAvailableLocationNumberAtStart" alwaysRun="1" comment="Have to ignore if out of sequence because of reconciliation issues across policy terms.">
              <value>
                <if>
                  <condition>
                    <comparison compare="and">
                      <comparison compare="and">
                        <comparison compare="eq">
                          <operand idref="PolicyPrivate.IsOtherThanCurrentTransactionOpenState" type="boolean" />
                          <operand idref="False" type="int" />
                        </comparison>
                        <comparison compare="ne">
                          <operand idref="AvailableNumbersPerTerm.NextAvailableLocationNumber" type="int" />
                          <operand idref="AvailableNumbersPerTerm.NextAvailableLocationNumberAtIssue" type="int" />
                        </comparison>
                      </comparison>
                      <comparison compare="eq">
                        <operand idref="OSEventData.inOutOfSequence" type="boolean" />
                        <operand idref="False" type="int" />
                      </comparison>
                    </comparison>
                  </condition>
                  <then idref="AvailableLocationNumberPrivate.SetNextAvailableLocationNumberFixAbort" />
                </if>
              </value>
            </private>
          </object>
          <object id="AvailableBuildingNumberPrivate">
            <minOccurs value="1" />
            <maxOccurs value="1" />
            <private id="AvailableBuildingNumberPrivate.AddBuildingNumberObject" caption="" type="string" alwaysRun="1" path="AddBuildingNumberObject">
              <value>
                <request verb="ManuScript.addObjectRecordRq" get="@status">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue idref="PolicyAdminOutputNonShredded.PolicyManuScriptID" name="manuscript" dataType="attribute" />
                    <nameValue value="BuildingNumber" name="objectID" dataType="attribute" />
                    <nameValue idref="AvailableBuildingNumberPrivate.AddBuildingNumberContextPath" name="context" dataType="attribute" />
                    <nameValue idref="LocationOutput.LocationID" name="UniqueID" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
              <affects>
                <reference idref="AvailableBuildingNumberPrivate.SetupBuildingNumberLocationID" effect="postEffect" />
              </affects>
            </private>
            <private id="AvailableBuildingNumberPrivate.DeleteBuildingNumberGroup" caption="" type="string" path="DeleteBuildingNumberGroup">
              <value>
                <iterator type="string" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumberPrivate.DeleteObjectRecord" type="string" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.LastBuildingNumberID" caption="" type="string" path="LastBuildingNumberID">
              <value>
                <iterator type="string" scope="last" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumber.ID" type="string" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.InitializeNextAvailableBuildingNumber" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumberPrivate.InitializeNextAvailableBuildingNumber" type="int" />
                  <reference idref="BuildingNumberPrivate.InitializeNextAvailableBuildingNumberAtStart" type="int" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.InitializeNextAvailableBuildingNumberCurrentLocMidTerm" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumberPrivate.InitializeNextAvailableBuildingNumberToStart" type="int" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="BuildingNumber.LocationID" type="string" />
                      <operand idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.InitializeNextAvailableBuildingNumberCurrentLocation" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumberPrivate.InitializeNextAvailableBuildingNumber" type="int" />
                  <where>
                    <comparison compare="eq">
                      <operand idref="BuildingNumber.LocationID" type="string" />
                      <operand idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                    </comparison>
                  </where>
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.BuildingNumberCurrentLocationXPath" caption="" type="string" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="BuildingNumber[LocationID='" />
                  <argument op="add" idref="AccountPrivate.CurrentLocationNumberID" type="string" />
                  <argument op="eq" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.AddBuildingNumberContextPath" caption="" type="string" path="LastBuildingNumberXPath">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="//*[@id='" />
                  <argument op="add" idref="PolicyOutputNonShredded.AvailableNumberIDForCurrentTerm" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.NumberOfBuildingNumberRecordsForCurrentLocation" caption="" type="int" alwaysRun="1">
              <value>
                <iterator type="int" scope="all" action="count" idref="BuildingNumber">
                  <where>
                    <comparison compare="eq">
                      <operand idref="BuildingNumber.LocationID" type="string" />
                      <operand idref="_processingData.CurrentLocationNumberIDForAdd" type="string" />
                    </comparison>
                  </where>
                  <customQuery idref="AvailableBuildingNumberPrivate.NumberOfBuildingNumberRecordsForCurrentLocationXPath" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.SetBuildingNumberAtStart" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumberPrivate.SetBuildingNumberAtStart" type="int" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.SetupBuildingNumberLocationID" caption="" type="string" alwaysRun="1" path="SetupBuildingNumberLocationID">
              <value>
                <iterator type="string" scope="last" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumber.LocationID" type="string" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.NextAvailableBuildingNumber" caption="" type="string" alwaysRun="1" path="NextAvailableBuildingNumber">
              <value>
                <iterator type="string" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumber.NextAvailableBuildingNumber" type="int" />
                  <customQuery idref="AvailableBuildingNumberPrivate.BuildingNumberCurrentLocationXPath" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.NextAvailableBuildingNumberAtStart" caption="" type="string" alwaysRun="1" path="NextAvailableBuildingNumber">
              <value>
                <iterator type="string" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumber.NextAvailableBuildingNumberAtStart" type="int" />
                  <customQuery idref="AvailableBuildingNumberPrivate.BuildingNumberCurrentLocationXPath" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.NextAvailableBuildingNumberIncrement" caption="" type="int" alwaysRun="1" path="NextAvailableBuildingNumber">
              <value>
                <iterator type="int" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumberPrivate.NextAvailableBuildingNumberIncrement" type="int" />
                  <customQuery idref="AvailableBuildingNumberPrivate.BuildingNumberCurrentLocationXPath" />
                </iterator>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.NumberOfBuildingNumberRecordsForCurrentLocationXPath" caption="" type="string" alwaysRun="1">
              <value>
                <calculation>
                  <argument op="eq" type="string" value="./BuildingNumber[LocationID='" />
                  <argument op="add" idref="_processingData.CurrentLocationNumberIDForAdd" type="string" />
                  <argument op="add" type="string" value="']" />
                </calculation>
              </value>
            </private>
            <private id="AvailableBuildingNumberPrivate.SetBuildingNumberAtIssue" caption="" type="int">
              <value>
                <iterator type="int" scope="all" action="sum" idref="BuildingNumber">
                  <reference idref="BuildingNumberPrivate.SetBuildingNumberAtIssue" type="int" />
                </iterator>
              </value>
            </private>
          </object>
          <public id="AvailableNumbersPerTermPrivate.ID" path="@id" type="string">
            <definition>
              <caption value="ID" />
            </definition>
          </public>
        </object>
        <public id="AvailableNumbersPerTerm.NextAvailableLocationNumberAtIssue" path="NextAvailableLocationNumber/@AtIssue" type="int" alwaysRun="1">
          <definition>
            <caption value="Next Available Location Number At Issue" />
          </definition>
        </public>
        <public id="AvailableNumbersPerTerm.NextAvailableVehicleNumberAtIssue" path="NextAvailableVehicleNumber/@AtIssue" type="int" alwaysRun="1">
          <definition>
            <caption value="Next Available Vehicle Number At Issue" />
          </definition>
        </public>
      </object>
      <public id="_processingData.CurrentLocationNumberIDForAdd" path="CurrentLocationNumberIDForAdd" type="string" comment="These need to stay in the account group or else they are losing context">
        <definition>
          <caption value="_processing Data Current Location Number ID For Add" />
        </definition>
      </public>
      <object id="FormsData" abstract="1">
      </object>
      <public id="_processingData.CurrentOSTransactionID" path="currentOSTransactionID" type="string">
        <definition>
          <caption value="Current OS Transaction ID" />
        </definition>
      </public>
    </object>
    <object id="_IntegrationData" path="." document="_IntegrationData">
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <object id="PitneyBowes" path="pitneybowes">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="PitneyBowesOutput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="PitneyBowesOutput.GeocodingEnabled" type="string" alwaysRun="1">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.IntegrationControl" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="PBBIGeocoding" />
                <keyRef type="string" value="Enabled" name="IntegrationSwitches" />
              </lookup>
            </value>
          </private>
          <private id="PitneyBowesOutput.InteractiveMapEnabled" caption="" type="string" alwaysRun="1">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.IntegrationControl" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="PBBIInteractiveMap" />
                <keyRef type="string" value="Enabled" name="IntegrationSwitches" />
              </lookup>
            </value>
          </private>
          <private id="PitneyBowesOutput.GeocodingRequired" type="string" alwaysRun="1">
            <value>
              <lookup>
                <tableRef value="(custom defined)" idref="TableNames.IntegrationControl" />
                <manuscriptName idref="PolicyManuScript.CPPProductManuscriptID" />
                <fieldRef value="PBBIGeocoding" />
                <keyRef type="string" value="Required" name="IntegrationSwitches" />
              </lookup>
            </value>
          </private>
          <private id="PitneyBowesOutput.GeocodingNotEnabled" type="string" alwaysRun="1">
            <value>
              <comparison compare="eq">
                <operand idref="PitneyBowesOutput.GeocodingEnabled" type="string" />
                <operand idref="False" type="int" />
              </comparison>
            </value>
          </private>
        </object>
        <object id="PitneyBowesPrivate">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="PitneyBowesPrivate.UsURL" caption="" type="string" path="URL">
            <value>
              <request verb="Settings.getWebConfigSettingRq" get="@value">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="PitneyBowes_DCT.geoUS" name="setting" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PitneyBowesPrivate.Password" caption="" type="string" path="Password">
            <value>
              <request verb="Settings.getWebConfigSettingRq" get="@value">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="PitneyBowes_DCT.password" name="setting" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PitneyBowesPrivate.UserName" caption="" type="string" path="UserName">
            <value>
              <request verb="Settings.getWebConfigSettingRq" get="@value">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="PitneyBowes_DCT.username" name="setting" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PitneyBowesPrivate.ManuscriptID" caption="" type="string" path="ManuscriptID">
            <value value="Carrier_PitneyBowes_Integration_US_1_0_0_0" />
          </private>
          <private id="PitneyBowesPrivate.GeocodeRq" type="string" comment="" caption="Search Rq" path="GeocodeRq">
            <value>
              <request verb="Send.httpRq" get="@errorMsg">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="GET" name="verb" dataType="attribute" />
                  <nameValue idref="PitneyBowesPrivate.URL" name="url" dataType="attribute" />
                  <nameValue value="_IntegrationData^geocodeResponse" name="responseSessionPath" dataType="attribute" />
                  <nameValue value="//*[local-name() = 'output_port' or local-name() = 'Output']" name="responseSelect" dataType="attribute" />
                  <nameValue value="$server.rootpath$\Transform\RemoveResponseNamespace.xsl" name="xsltOut" dataType="attribute" />
                  <nameValue value="" name="query" dataType="element">
                    <nameValue value="" name="parameter" dataType="element">
                      <nameValue value="Data.AddressLine1" name="name" dataType="attribute" />
                      <nameValue idref="GeocodeUS.AddressLine1" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="parameter" dataType="element">
                      <nameValue value="Data.AddressLine2" name="name" dataType="attribute" />
                      <nameValue idref="GeocodeUS.AddressLine2" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="parameter" dataType="element">
                      <nameValue value="Data.City" name="name" dataType="attribute" />
                      <nameValue idref="GeocodeUS.City" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="parameter" dataType="element">
                      <nameValue value="Data.PostalCode" name="name" dataType="attribute" />
                      <nameValue idref="GeocodeUS.PostalCode" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="parameter" dataType="element">
                      <nameValue value="Data.StateProvince" name="name" dataType="attribute" />
                      <nameValue idref="GeocodeUS.StateProvince" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="parameter" dataType="element">
                      <nameValue value="Data.Country" name="name" dataType="attribute" />
                      <nameValue idref="GeocodeUS.Country" name="value" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                  <nameValue value="" name="credentials" dataType="element">
                    <nameValue idref="PitneyBowesPrivate.UserName" name="user" dataType="attribute" />
                    <nameValue idref="PitneyBowesPrivate.Password" name="pass" dataType="attribute" />
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PitneyBowesPrivate.AllCountriesURL" caption="" type="string" path="URL">
            <value>
              <request verb="Settings.getWebConfigSettingRq" get="@value">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="PitneyBowes_DCT.geoALL" name="setting" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PitneyBowesPrivate.URL" caption="" type="string">
            <value>
              <if>
                <condition idref="PitneyBowesPrivate.USOnly" />
                <then idref="PitneyBowesPrivate.UsURL" />
                <else idref="PitneyBowesPrivate.AllCountriesURL" />
              </if>
            </value>
          </private>
          <private id="PitneyBowesPrivate.USOnly" caption="" type="boolean">
            <value value="1" />
          </private>
        </object>
        <object id="GeocodeUS">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="GeocodeUS.AddressLine1" path="AddressLine1" type="string">
            <definition>
              <caption value="Address Line 1" />
            </definition>
          </public>
          <public id="GeocodeUS.AddressLine2" path="AddressLine2" type="string">
            <definition>
              <caption value="Address Line 2" />
            </definition>
          </public>
          <public id="GeocodeUS.City" path="City" type="string">
            <definition>
              <caption value="City" />
            </definition>
          </public>
          <public id="GeocodeUS.StateProvince" path="StateProvince" type="string">
            <definition>
              <caption value="State Province" />
            </definition>
          </public>
          <public id="GeocodeUS.PostalCode" path="PostalCode" type="string">
            <definition>
              <caption value="Postal Code" />
            </definition>
          </public>
          <public id="GeocodeUS.Country" path="Country" type="string">
            <definition>
              <caption value="Country" />
            </definition>
          </public>
        </object>
      </object>
    </object>
    <object id="_temporaryTemplateData" path="." document="_temporaryTemplateData" cleanup="0">
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <object id="AvailableNumbersBackup" path="availableNumbersBackup">
        <minOccurs value="0" />
        <maxOccurs value="*" />
        <object id="AvailableNumbersBackupPrivate">
          <minOccurs value="1" />
          <maxOccurs value="1" />
        </object>
        <object id="AvailableNumbersBackupInput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
        </object>
        <object id="AvailableNumbersBackupOutput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="AvailableNumbersBackupOutput.GroupID" path="@groupID" type="string">
            <definition>
              <caption value="Group ID" />
            </definition>
          </public>
          <public id="AvailableNumbersBackupOutput.Value" path="@value" type="string">
            <definition>
              <caption value="Value" />
            </definition>
          </public>
          <public id="AvailableNumbersBackupOutput.AvailableNumberTermID" path="@availableNumberTermID" type="string">
            <definition>
              <caption value="Available Number Term ID" />
            </definition>
          </public>
        </object>
      </object>
    </object>
    <object id="_PolicySystem" path="." document="_PolicySystem" comment="If using the AnywhereAPI in stateless mode this named document should be set to Retain in Advanced." cleanup="1">
      <minOccurs value="1" />
      <maxOccurs value="1" />
      <object id="PolicyActions" path="PolicyActions">
        <minOccurs value="1" />
        <maxOccurs value="1" />
        <object id="PolicyActionsInput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
        </object>
        <object id="PolicyActionsOutput">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <public id="PolicyActionsOutput.LastSavedDate" path="LastSavedDate" type="datetime">
            <definition>
              <caption value="Last Saved Date" />
              <formatMask value="M/D/Y, LT" />
            </definition>
            <rules>
              <value>
                <request verb="Session.getPropertyRq" get="@value">
                  <responsePath value="" />
                  <onFailure idref="DateTime.Today" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default idref="DateTime.Today" />
                  <nameValues>
                    <nameValue value="lastsavedtimestamp" name="name" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </rules>
          </public>
          <public id="PolicyActionsOutput.Name" path="Name" type="string" alwaysRun="1">
            <definition>
              <caption value="Name" />
            </definition>
            <rules>
              <value idref="AccountInput.Name" />
            </rules>
          </public>
          <public id="PolicyActionsOutput.PolicyNumber" path="PolicyNumber" type="string">
            <definition>
              <caption value="Policy Number" />
            </definition>
            <rules>
              <value>
                <request verb="Session.getElementRq" get="@value">
                  <responsePath value="" />
                  <onFailure value="" />
                  <modifySession value="" />
                  <usesSession value="" />
                  <default value="" />
                  <nameValues>
                    <nameValue value="session^data/policy/policyProcessing/CurrentPolicyNumberIdentifier" name="path" dataType="attribute" />
                  </nameValues>
                </request>
              </value>
            </rules>
          </public>
          <public id="PolicyActionsOutput.ProductDescription" path="ProductDescription" type="string">
            <definition>
              <caption value="Description" />
            </definition>
            <rules>
              <value>
                <calculation>
                  <argument op="eq" idref="PolicyAdminOutputNonShredded.CurrentTransactionTypeLabel" type="string" />
                  <argument op="add" type="string" value="-" />
                  <argument op="add" idref="CurrentTransaction.Status" type="string" />
                </calculation>
              </value>
            </rules>
          </public>
          <public id="PolicyActionsOutput.ProductHeader" path="ProductHeader" type="string" alwaysRun="1">
            <definition>
              <caption value="Header" />
            </definition>
            <rules>
              <value>
                <calculation>
                  <argument op="eq" type="string" value="(" />
                  <argument op="eq" idref="PolicyActionsOutput.ProductStatus" type="string" />
                  <argument op="add" type="string" value=":  " />
                  <argument op="add" idref="PolicyActionsOutput.ProductDescription" type="string" />
                  <argument op="add" type="string" value=")" />
                </calculation>
              </value>
            </rules>
          </public>
          <public id="PolicyActionsOutput.ProductStatus" path="ProductStatus" type="string">
            <definition>
              <caption value="Status" />
            </definition>
            <rules>
              <value idref="PolicyOutput.Status" />
            </rules>
          </public>
          <public id="PolicyActionsOutput.ViewPolicyCaption" path="ViewPolicyCaption" type="string">
            <definition>
              <caption value="View Policy Caption" />
            </definition>
            <rules>
              <value>
                <calculation>
                  <argument op="eq" type="string" value="View Policy" />
                  <argument op="add" type="string" value=" (" />
                  <argument op="add" idref="PolicyActionsOutput.Name" type="string" />
                  <argument op="add" type="string" value=")" />
                </calculation>
              </value>
            </rules>
          </public>
          <public id="PolicyActionsOutput.ActivePolicyID" path="ActivePolicyID" type="string">
            <definition>
              <caption value="Active Policy ID" />
            </definition>
            <rules>
              <value>
                <session sessionValue="policyID" />
              </value>
            </rules>
          </public>
        </object>
        <object id="PolicyActionsPrivate">
          <minOccurs value="1" />
          <maxOccurs value="1" />
          <private id="PolicyActionsPrivate.GetCurrentClientIdRq" caption="" type="string">
            <value>
              <request verb="Session.getPropertyRq" get="@value">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="clientid" name="name" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyActionsPrivate.GetCurrentProductManuscriptID" caption="" type="string">
            <value>
              <request verb="Session.getPropertyRq" get="@value">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="product" name="name" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyActionsPrivate.HasObjectContext" caption="" type="boolean">
            <value>
              <comparison compare="and">
                <comparison compare="ne">
                  <operand idref="PolicyActionsOutput.ActivePolicyID" type="string" />
                  <operand type="string" value="" />
                </comparison>
                <comparison compare="ne">
                  <operand idref="PolicyActionsOutput.ActivePolicyID" type="string" />
                  <operand type="string" value="0" />
                </comparison>
              </comparison>
            </value>
            <affects>
              <reference idref="PolicyActionsOutput.ActivePolicyID" effect="preEffect" />
            </affects>
          </private>
          <private id="PolicyActionsPrivate.SavePolicy" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="PolicyActionsPrivate.SavePolicyRq" effect="preEffect" />
            </affects>
          </private>
          <private id="PolicyActionsPrivate.SavePolicyRq" caption="" type="string">
            <value>
              <request verb="CustomServer.processRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="" name="dataRequests" dataType="element" />
                  <nameValue value="" name="xsltRequests" dataType="element">
                    <nameValue value="" name="Session.setPropertyRq" dataType="element">
                      <nameValue value="lastsavedtimestamp" name="name" dataType="attribute" />
                      <nameValue idref="DateTime.TodayDateTime" name="value" dataType="attribute" />
                    </nameValue>
                    <nameValue value="" name="OnlineData.storePolicyRq" dataType="element">
                      <nameValue idref="PolicyActionsOutput.ActivePolicyID" name="policyID" dataType="attribute" />
                      <nameValue idref="PolicyActionsPrivate.GetCurrentProductManuscriptID" name="manuScriptID" dataType="attribute" />
                      <nameValue idref="PolicyActionsOutput.ProductStatus" name="status" dataType="attribute" />
                      <nameValue idref="PolicyActionsOutput.ProductDescription" name="comment" dataType="attribute" />
                      <nameValue value="0" name="shredNow" dataType="attribute" />
                      <nameValue value="0" name="portfolioID" dataType="attribute" />
                    </nameValue>
                  </nameValue>
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyActionsPrivate.SetCurrentClientId" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="PolicyActionsPrivate.SetCurrentClientIdRq" effect="preEffect" />
            </affects>
          </private>
          <private id="PolicyActionsPrivate.SetCurrentClientIdRq" caption="" type="string">
            <value>
              <request verb="Session.setElementRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="_ApplicationManagement^Express/PartyId" name="path" dataType="attribute" />
                  <nameValue idref="PolicyActionsPrivate.GetCurrentClientIdRq" name="value" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyActionsPrivate.SetObjectIdRq" caption="" type="string">
            <value>
              <request verb="Session.setElementRq" get="@status">
                <responsePath value="" />
                <onFailure value="" />
                <modifySession value="" />
                <usesSession value="" />
                <default value="" />
                <nameValues>
                  <nameValue value="_ApplicationManagement^Express/ObjectId" name="path" dataType="attribute" />
                  <nameValue idref="PolicyActionsOutput.ActivePolicyID" name="value" dataType="attribute" />
                </nameValues>
              </request>
            </value>
          </private>
          <private id="PolicyActionsPrivate.ShowHeader" caption="" type="boolean">
            <value>
              <comparison compare="ne">
                <operand idref="PolicyActionsOutput.ProductHeader" type="string" />
                <operand type="string" value="" />
              </comparison>
            </value>
          </private>
          <private id="PolicyActionsPrivate.ViewPolicyDetailsPreEvent" caption="" type="string">
            <value value="" />
            <affects>
              <reference idref="PolicyActionsPrivate.SetObjectIdRq" effect="preEffect" />
            </affects>
          </private>
          <private id="PolicyActionsPrivate.CurrentQuoteHasBeenSavedCaption" caption="" type="string">
            <value value="&quot;Current quote/policy has been saved&quot;" />
          </private>
          <private id="PolicyActionsPrivate.LastSavedText" type="string" comment="" caption="Last Saved Text">
            <value value="Last Saved:" />
          </private>
        </object>
      </object>
    </object>
  </model>
  <topics />
  <annotations>
    <comments idref="BuildingInput.YearBuilt">
      <comment>4 digit year that the building was built.</comment>
      <comment break="1">.</comment>
      <comment break="1">This is used in the calcuation of New Residential Credit, if applicable.</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.WindstormLossMitigationSelect">
      <comment>Rule 70.E.3 Windstorm Loss Mitigation for Residential Properties</comment>
      <comment break="1">This rule provides credits for windstorm damage mitigation in response to Florida Statutes, subsection (1) of 627.0629 which requires that, "a rate filing for residential property insurance must include appropriate discounts, credits, or other rate differentials, or appropriate reductions in deductibles, for properties on which fixtures actuarially demonstrated to reduce the amount of loss in a windstorm have been installed".</comment>
      <comment break="1">For alternatives (if any) to the credit provisions, refer to the company.</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.RoofCovering">
      <comment>Type 1</comment>
      <comment break="1">Roof Covering -  Asphalt Or Wood Shingles Attached With Screws Or Clay/Concrete Tiles, Slate, Built-up Roof With Gravel, Built-up Roof Without Gravel Standing, Seam Metal, Single Ply Membrane Or Single Ply Membrane Ballasted, Attached With Nails/Staples, Mortar, Screws Or Adhesive/Epoxy</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 2</comment>
      <comment break="1">Asphalt Or Wood Shingles Attached With Nails/Staples, Mortar Or Adhesive/Epoxy, Light Metal Panels Attached With Nails/Staples, Mortar, Screws Or Adhesive/Epoxy Or Unknown</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 3</comment>
      <comment break="1">Single Ply Membrane, Single Ply Membrane Ballasted, Seam Metal Roofs Or Light Metal Panels Attached With Screws</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.RoofDeckAttachment">
      <comment>Type 1</comment>
      <comment break="1">Metal Deck With Concrete, Metal Deck With Insulation Board, Pre-Cast Concrete Slabs, Or Reinforced Concrete Slabs Attached With Screws/ Bolts Or Structurally Connected</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 2</comment>
      <comment break="1">Plywood, Wood Planks, Particle Board/OSB attached With Screws/Bolts Or Structurally Connected</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 3</comment>
      <comment break="1">Plywood, Wood Planks, Particle Board/OSB, Metal Deck With Insulation Board Attached With Nails Or Adhesive/Epoxy Or Unknown</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.RoofWallConstruction">
      <comment>Type 1</comment>
      <comment break="1">Anchor Bolts, Hurricane Ties Or Structurally Connected</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 2</comment>
      <comment break="1">Nails, Screws, Gravity/Friction, Adhesive/Epoxy Or Unknown</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.DoorType">
      <comment>Type (a)   - Reinforced Single-width doors</comment>
      <comment break="1">.</comment>
      <comment break="1">Type (b)  -  Single-width, Double-width, Sliding or Unknown doors</comment>
      <comment break="1">.</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.WindowProtection">
      <comment>Type 1</comment>
      <comment break="1">Engineered Shutters with any Glass Type</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 2</comment>
      <comment break="1">Non-Engineered Shutters with any Glass Type or</comment>
      <comment break="1">No Shutters with Laminated or Tempered Glass</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 3</comment>
      <comment break="1">No Shutters with Annealed or Unknown Glass</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.RoofGeometry">
      <comment>Type1</comment>
      <comment break="1">Gable End Without Bracing, Complex, Flat, Shed Or Unknown</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 2</comment>
      <comment break="1">Gable End With Bracing, Stepped Or Gambrel</comment>
      <comment break="1">.</comment>
      <comment break="1">Type 3</comment>
      <comment break="1">Hip, Mansard Or Pyramid</comment>
    </comments>
    <comments idref="BuildingWindstormLossMitigationInput.BuildingType">
      <comment>Type 1</comment>
      <comment break="1">3 stories or less</comment>
      <comment break="1">.</comment>
      <comment break="1">Type II</comment>
      <comment break="1">r or more stories</comment>
    </comments>
    <comments idref="BuildingInput.BuildingLocationID">
      <comment>Because buildings are associated with a "Location" you need to select which location this building is located.  If you have not entered any locations yet, please go to the "Location" tab and do that first, and then come back here to enter building(s) information.</comment>
    </comments>
    <comments idref="SelectedOccupancyInput.OccupancyID">
      <comment>Because buildings are associated with an "Occupancy",  you need to select which Occupancy this building is associated with.  If you have not entered any occupancies yet, please go to the "Occupancy" tab and do that first, and then come back here to enter building(s) information.</comment>
    </comments>
    <comments idref="BuildingInput.Description">
      <comment>Freeform text description of this building (i.e. Main Building)</comment>
    </comments>
    <comments idref="BuildingInput.ConstructionCode">
      <comment>Please select the appropriate construction code for this building.</comment>
    </comments>
    <comments idref="BuildingInput.Sprinkler">
      <comment>Is there an operable sprinkler system in this building?</comment>
    </comments>
    <comments idref="BuildingInput.SquareFt">
      <comment>Building's square footage.</comment>
    </comments>
    <comments idref="BuildingInput.NumberOfStories">
      <comment>This building's total number of stories.</comment>
    </comments>
    <comments idref="RiskInput.OccupancyID">
      <comment>This is a picklist of all the occupancies (i.e. Classification Table Lookups) that you did on the "Occupancy(s)" screen.  If this picklist does not contain any selections, you will need to go to the "Occupancy(s)" screen now and choose all of your occupancies and then return to this risk screen and continue.</comment>
    </comments>
    <comments idref="OccupancyOutput.GLClassCode">
      <comment>This class code will have been returned via the "Occupancy" lookup.  It is read-only, and placed here for informational purposes only.</comment>
    </comments>
    <comments idref="OccupancyOutput.GLPremiumBasis">
      <comment>This Premium Basis will have been returned via the "Occupancy" lookup.  It is read-only, and placed here for informational purposes only.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.AuditTypeDisplay">
      <comment>Type of audit transaction.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.Description">
      <comment>Enter additional information needed for endorsement.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.FormNumber">
      <comment>Enter form number of endorsement.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.FormCaption">
      <comment>Enter description of endorsement.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.PremiumType">
      <comment>Enter the type of premium for this endorsement.</comment>
      <comment break="1">None = No premium will be applied for this endorsement</comment>
      <comment break="1">Full Premium = Total premium for the policy term</comment>
      <comment break="1">Calculated Premium = Enter information to calculate a premium for the policy term</comment>
      <comment break="1">If the premium is fully earned and/or flat, check the appropriate fields below.</comment>
    </comments>
    <comments idref="CovMiscellaneousOutput.Premium">
      <comment>Enter premium to be applied to the endorsement.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.UnitsOfExposureDescription">
      <comment>Enter description of the units of exposure.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.UnitsOfExposure">
      <comment>Enter the amount of the units of exposure.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.UnitsOfExposureIncluded">
      <comment>Enter the number of units that are included at no charge.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.UnitsDivider">
      <comment>Enter the number of units that the rate is applied per.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.ARate">
      <comment>Enter rate to be applied to the endorsement.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.UnitsOfExposureEstimated">
      <comment>Enter total units of exposure.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.ApplyLCM">
      <comment>Check if loss cost modifier should be applied to the calculation.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.ApplyRMF">
      <comment>Check if rate modification factor should be applied to the calculation.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.FullyEarnedPremium">
      <comment>Check if Fully Earned Premium is applicable.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.SICCodeLabel">
      <comment>Select the Standard Industrial Classification Code for the Applicant from the pick list.  The classification code can be found at www.osha.gov.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.SICCodeSearchValue">
      <comment>Enter value to search for within SIC Code data.</comment>
    </comments>
    <comments idref="CovMiscellaneousOutput.PremiumFullyEarned">
      <comment>Enter premium to be applied to the endorsement.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.TypeOfRisk">
      <comment>This field is required to determine the "Type of Policy" stat code for Package Policies.</comment>
      <comment break="1">If the value is not selected and the policy is a true ISO Package then the Stat Code value will be set to a blank.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.ISOLicenseInfo">
      <comment>Includes copyrighted material of ISO Properties, Inc., with its permission.  Copyright, Insurance Services Office, Inc., 2006.</comment>
      <comment break="1">This product ("Example Templates (ISO Base)") includes information which is proprietary to Insurance Services Office, Inc. Use of the Product is limited to ISO Participating Insurers. ISO Participating Insurers use is limited to those jurisdictions and for those lines of insurance, jurisdictions and services for which such insurer participates with ISO.</comment>
      <comment break="1">ISO does not guarantee the accuracy or timeliness of the ISO information provided. ISO shall not be liable for any loss or damage of any kind and howsoever caused resulting from the use of the ISO information.</comment>
    </comments>
    <comments idref="ExperienceRatingInput.NumberYearsLossInformation">
      <comment>Enter the number of years of loss information, immediately prior to this policy.</comment>
    </comments>
    <comments idref="ExperienceRatingInput.DateLossRunsCreated">
      <comment>Enter the last day of coverage for the years of loss information above.</comment>
    </comments>
    <comments idref="ExperienceRatingOutput.MaximumSingleLoss">
      <comment>Largest payment amount available under the policy.</comment>
    </comments>
    <comments idref="ExperienceRatingInput.NumberOfLossesEqualOrGreaterThanMSL">
      <comment>Enter the number of losses in the Loss Information that was equal or larger than the Maximum Single Loss amount in the Loss Information time period.</comment>
    </comments>
    <comments idref="ExperienceRatingInput.CombinedAmtAllLossesBelowMSL">
      <comment>Enter the total payment made for losses below the Maximum Single Loss amount for the Loss Information time period.</comment>
    </comments>
    <comments idref="ExperienceRatingInput.AnyLosses">
      <comment>Indicate if the insured had any losses in the years referenced above.</comment>
    </comments>
    <comments idref="ExperienceRatingInput.ExperienceRatingOverride">
      <comment>Select to enter override values for individual parts of the experience rating calculation.  If a field is left blank or is equal to zero then it will be ignored and the calculated value will be used.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.NAICSCodeLabel">
      <comment>Select the Standard Industrial Classification Code for the Applicant from the pick list.  The classification code can be found at www.osha.gov.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.NAICSCodeSearchValue">
      <comment>Enter value to search for within SIC Code data.</comment>
    </comments>
    <comments idref="AccountInput.EntityType">
      <comment>The entity type is defined by laws or rules governing the formation and operation of a business by which it was organized to operate. The term is also used to describe the entities themselves. Some common entities are: limited liability partnerships (LLC), corporations, partnerships, trusts, and sole proprietor.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.BIPerAccidentLimit">
      <comment>Enter the bodily injury limit per accident on the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.BIPerPersonLimit">
      <comment>Enter the bodily injury limit per person on the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.CarrierName">
      <comment>Enter the name of the insurance company for the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.CombinedSingleLimit">
      <comment>Enter the combined single limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.EffectiveDate">
      <comment>Enter the effective date of the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.ExpirationDate">
      <comment>Enter the expiration date of the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.FireDamageLimit">
      <comment>Enter the fire damage limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.ModificationFactor">
      <comment>Enter the modification factor applied to the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.PDLimit">
      <comment>Enter the property damage limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.PolicyNumber">
      <comment>Enter the policy number for the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.PolicyType">
      <comment>Enter the policy type for the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.RetroDate">
      <comment>Enter the retro date on the prior policy.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.TotalPremium">
      <comment>Enter the total premium for the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.BIAggregateLimit">
      <comment>Enter the bodily injury aggregate limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.BIOccurrenceLimit">
      <comment>Enter the bodily injury occurrence limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.CarrierName">
      <comment>Enter the name of the insurance company for the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.CombinedSingleLimit">
      <comment>Enter the combined single limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.EachOccurrenceLimit">
      <comment>Enter the occurrence limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.EffectiveDate">
      <comment>Enter the effective date of the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.ExpirationDate">
      <comment>Enter the expiration date of the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.FireDamageLimit">
      <comment>Enter the fire damage limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.GeneralAggregateLimit">
      <comment>Enter the general aggregate limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.MedicalExpenseLimit">
      <comment>Enter the medical expense limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.ModificationFactor">
      <comment>Enter the modification factor applied to the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.PDAggregateLimit">
      <comment>Enter the property damage aggregate limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.PDOccurrenceLimit">
      <comment>Enter the property damage occurrence limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.PersonalAdvertisingInjuryLimit">
      <comment>Enter the personal and advertising injury limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.PolicyNumber">
      <comment>Enter the policy number for the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.PolicyType">
      <comment>Enter the policy type for the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.ProductsCompletedOpsLimit">
      <comment>Enter the products and completed operations limit on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.RetroDate">
      <comment>Enter the retro date on the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.TotalPremium">
      <comment>Enter the total premium for the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.BuildingLimit">
      <comment>Enter the limit on buildings on the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.CarrierName">
      <comment>Enter the name of the insurance company for the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.EffectiveDate">
      <comment>Enter the effective date of the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.ExpirationDate">
      <comment>Enter the expiration date of the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.ModificationFactor">
      <comment>Enter the modification factor applied to the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.PersonalPropertyLimit">
      <comment>Enter the limit on personal property on the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.PolicyNumber">
      <comment>Enter the policy number for the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.PolicyType">
      <comment>Enter the policy type for the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.TotalPremium">
      <comment>Enter the total premium for the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.CarrierName">
      <comment>Enter the name of the insurance company for the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.EffectiveDate">
      <comment>Enter the effective date of the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.ExpirationDate">
      <comment>Enter the expiration date of the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.Limit">
      <comment>Enter the limit for this coverage on the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.ModificationFactor">
      <comment>Enter the modification factor applied to the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.PolicyNumber">
      <comment>Enter the policy number for the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.PolicyType">
      <comment>Enter the policy type for the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.TotalPremium">
      <comment>Enter the total premium for the prior policy.</comment>
    </comments>
    <comments idref="ApplicantContact.AccountingContactEmail">
      <comment>Enter the email address of the Accounting Contact person.</comment>
    </comments>
    <comments idref="ApplicantContact.AccountingContactName">
      <comment>Enter the name of the person who will provide the accounting information.</comment>
    </comments>
    <comments idref="ApplicantContact.AccountingContactPhone">
      <comment>Enter the phone number of the Accounting Contact person.</comment>
    </comments>
    <comments idref="ApplicantContact.CreditBureauName">
      <comment>Enter the name of the Credit Bureau associated with this applicant.</comment>
    </comments>
    <comments idref="ApplicantContact.IDNumber">
      <comment>Enter the number assigned by the Credit Bureau for this applicant.</comment>
    </comments>
    <comments idref="ApplicantContact.InspectionContactEmail">
      <comment>Enter the email address of the Inspection Contact person.</comment>
    </comments>
    <comments idref="ApplicantContact.InspectionContactName">
      <comment>Enter the name of the person who will assist the inspector.</comment>
    </comments>
    <comments idref="ApplicantContact.InspectionContactPhone">
      <comment>Enter the phone number of the Inspection Contact person.</comment>
    </comments>
    <comments idref="ApplicantContact.NumberMembersManagers">
      <comment>Enter the number of members and managers.</comment>
    </comments>
    <comments idref="ApplicantContact.WebsiteAddress">
      <comment>Enter the website for the company.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.BankruptciesTaxCreditLiens">
      <comment>Indicate if the applicant has had any bankrupties.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.BusinessPlacedInTrust">
      <comment>Indicate if the business is in a trust.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.CatastrophicExposures">
      <comment>Indicate if the applicant has any known catastrophic exposures.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.DescriptionOperations">
      <comment>Describe the operations of the applicant</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.FlammablesExplosivesChemicals">
      <comment>Indicate if the applicant has exposures which are flammables, explosives or chemicals.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.FormalSafetyProgram">
      <comment>Indicate if the applicant has formal safety program currently active.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.InsuranceWithCompany" override="1">
      <comment>Indicate if other applications are being submitted to the company at this time.</comment>
      <comment break="1">List policy numbers.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.NameOfTrust">
      <comment>If the business is in a trust, enter the name of the trust.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.SubsidiaryAnotherEntity">
      <comment>Indicate if the applicant business is owned by another business or organization.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.SubsidiaryCompanies">
      <comment>Indicate if the applicant business owns another business or organization.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.UncorrectedCodeViolations">
      <comment>Indicate if there are still known violations to the fire code.</comment>
    </comments>
    <comments idref="ApplicantContact.NoticeGivenToApplicant" override="1">
      <comment>Indicate if the notification of information practice has been given to the applicant.</comment>
      <comment break="1">Not applicable in all states, consult your agent or broker for your state's requirements.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.ConvictedArson">
      <comment>Indicate if the applicant has been convicted of arson in the last five years.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.DeclinedCancelledNonRenewed" override="1">
      <comment>Indicate if previously coverage has been declined.</comment>
      <comment break="1">Missouri Applicants - Do not answer this question.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.DiscriminationSexualAbuseNegligentHiring">
      <comment>Indicate if the applicant has had any losses or claims relating to discrimination, sexual abuse or negligent hiring.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.GeneralRemarksProcessingInstructions" override="1">
      <comment>Enter explanatory remarks concerning the answers to the general information questions.</comment>
      <comment break="1">Attach ACORD 101, Additional Remarks Schedule, if more space is required.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.AmountPaid">
      <comment>Enter the amount paid on this loss.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.AmountReserved">
      <comment>Enter the amount on reserve for this loss.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.ClaimStatus">
      <comment>Indicate if the claim is still open.</comment>
      <comment break="1">Indicate if the claim has been closed.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.DateOfClaim">
      <comment>Enter the date of claim on this loss.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.DateOfOccurrence">
      <comment>Enter the date of this loss occurrence.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.LossLineOfBusiness">
      <comment>Enter the line of business for this loss.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.LossSummaryAttached">
      <comment>Indicate if a loss summary is attached.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.TypeDescriptionOccurrence">
      <comment>Describe the occurrence.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.Address1">
      <comment>Enter address 1.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.Address2">
      <comment>Enter address 2.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.BusinessPhoneNumber">
      <comment>Enter the business phone number.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.City">
      <comment>Enter the city.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.EntityType">
      <comment>Choose the entity type.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.FEINSSN">
      <comment>Enter the FEIN or Social Security #.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.GLCode">
      <comment>Enter the GL code.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.NAICS">
      <comment>Enter the NAICS.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.NumberMembersManagers">
      <comment>Enter the number of members and managers.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.SIC">
      <comment>Enter the SIC.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.State">
      <comment>Enter the state.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.WebsiteAddress">
      <comment>Enter the website address.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredPolicyUnderwriting.ZipCode">
      <comment>Enter the zip code.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Address1">
      <comment>Enter Address 1.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Address2">
      <comment>Enter Address 2.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Aircraft">
      <comment>Enter the aircraft item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Airport">
      <comment>Enter the airport item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Boat">
      <comment>Enter the boat item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Building">
      <comment>Enter the building item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.City">
      <comment>Enter the city.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.EmailAddress">
      <comment>Enter the email address.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.FaxNumber">
      <comment>Enter the fax number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Interest">
      <comment>Choose the type of Additional Interest.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.InterestEndDate">
      <comment>Enter or choose an end date.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Item">
      <comment>Enter the item item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.ItemClass">
      <comment>Enter the item class item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.ItemDescription">
      <comment>Enter the item description.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.LienAmount">
      <comment>Enter the lien amount.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Location">
      <comment>Enter the location item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Name">
      <comment>Enter the additional interest's name.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.PhoneNumber">
      <comment>Enter the phone number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Rank">
      <comment>Enter the rank.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.ReasonForInterest">
      <comment>Enter the reason for interest.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.ReferenceLoanNumber">
      <comment>Enter the reference/loan number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.State">
      <comment>Enter the state.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.Vehicle">
      <comment>Enter the vehicle item number.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.ZipCode">
      <comment>Enter the zip code.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestOutputNonShredded.EvidenceCaption">
      <comment>Mark the appropriate evidence selections.</comment>
    </comments>
    <comments idref="ContactInformationInput.ContactName">
      <comment>Enter the contact name.</comment>
    </comments>
    <comments idref="ContactInformationInput.ContactType">
      <comment>Enter the contact type.</comment>
    </comments>
    <comments idref="ContactInformationInput.PrimaryEmail">
      <comment>Enter the primary email address.</comment>
    </comments>
    <comments idref="ContactInformationInput.PrimaryPhoneNumber">
      <comment>Enter the primary phone number.</comment>
    </comments>
    <comments idref="ContactInformationInput.PrimaryPhoneType">
      <comment>Enter the primary phone type.</comment>
    </comments>
    <comments idref="ContactInformationInput.SecondaryEmail">
      <comment>Enter the secondary email address.</comment>
    </comments>
    <comments idref="ContactInformationInput.SecondaryPhoneNumber">
      <comment>Enter the secondary phone number.</comment>
    </comments>
    <comments idref="ContactInformationInput.SecondaryPhoneType">
      <comment>Enter the secondary phone type.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.ForeclosureRepossessionBankruptcy">
      <comment>Indicate if the applicant has had any foreclosures, repossesions, or bankruptcies in the last five years.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.ForeignOperations">
      <comment>Indicate if the applicant has any foreign operations.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.JudgementOrLien">
      <comment>Indicate if the applicant has had any judements or liens in the past five years.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.OtherBusinessVentures">
      <comment>Indicate if the applicant has any other business ventures for which coverage is not requested.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Apartments">
      <comment>Indicate if the nature of the applicant business is apartments.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Condominiums">
      <comment>Indicate if the nature of the applicant business is condominiums.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Contractor">
      <comment>Indicate if the nature of the applicant business is contractor.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.DateBusinessStarted">
      <comment>Choose or enter the business start date.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.DescriptionOperationsOtherNamedInsureds">
      <comment>Enter the description for the operations of the other named insureds.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.DescriptionPrimaryOperations">
      <comment>Enter the description for the operations of the primary insured.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.InstallationServiceRepairWorkPercent">
      <comment>Enter the percent of business from installation, service or repair work.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Institutional">
      <comment>Indicate if the nature of the applicant business is institutional.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Manufacturing">
      <comment>Indicate if the nature of the applicant business is manufacturing.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Office">
      <comment>Indicate if the nature of the applicant business is office.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.OffPremisesInstallationServiceRepairPercent">
      <comment>Enter the percent of business from off premises installation, service or repair work.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Restaurant">
      <comment>Indicate if the nature of the applicant business is restaurant.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Retail">
      <comment>Indicate if the nature of the applicant business is retail.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.RetailStoresServiceOperationsTotalSales">
      <comment>Enter the percent of business from retail stores or service operations.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Service">
      <comment>Indicate if the nature of the applicant business is service.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Wholesale">
      <comment>Indicate if the nature of the applicant business is wholesale.</comment>
    </comments>
    <comments idref="UnderwritingLossInformation.TotalLosses">
      <comment>Enter total losses amount.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.ClaimOpen">
      <comment>Indicate if the claim is open.</comment>
    </comments>
    <comments idref="UnderwritingLossHistoryInput.Subrogation">
      <comment>Indicate if subrogation applies.</comment>
    </comments>
    <comments idref="AdditionalNamedInsuredInput.Name">
      <comment>Enter name of additional insured.</comment>
    </comments>
    <comments idref="GeneralPolicyInformation.ConvictedArson">
      <comment>Indicate if the applicant has been convicted of arson in the last five years.</comment>
      <comment break="1">In RI, this question must be answered by any applicant for property insurance.  Failure to disclose the existence of an arson conviction is a misdemeanor punishable by a sentence of up to one year of imprisonment.</comment>
    </comments>
    <comments idref="ApplicantContact.GLCode">
      <comment>Enter the GL Code.</comment>
    </comments>
    <comments idref="CommercialAutoHistoryInput.Premium">
      <comment>Enter the premium for the prior policy.</comment>
    </comments>
    <comments idref="CommercialGeneralLiabilityHistoryInput.Premium">
      <comment>Enter the premium for the prior policy.</comment>
    </comments>
    <comments idref="CommercialPropertyHistoryInput.Premium">
      <comment>Enter the premium for the prior policy.</comment>
    </comments>
    <comments idref="OtherInsuranceHistoryInput.Premium">
      <comment>Enter the premium for the prior policy.</comment>
    </comments>
    <comments idref="PolicyUnderwritingAdditionalInterestInput.OtherInterestDescription">
      <comment>Choose the type of Additional Interest.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.Other">
      <comment>Indicate if the nature of the applicant business is other.</comment>
    </comments>
    <comments idref="NatureOfBusinessInput.OtherDescription">
      <comment>Enter the description for the operations of the other named insureds.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.NCCILicenseInfo">
      <comment>Includes copyrighted material of The National Council on Compensation Insurance, Inc., with its permission.    Copyright, 2009 The National Council on Compensation Insurance Inc.  All Rights Reserved.</comment>
    </comments>
    <comments idref="PolicyOutputNonShredded.AAISLicenseInfo">
      <comment>Includes copyrighted material of American Association of Insurance Services with its permission.</comment>
    </comments>
    <comments idref="CovMiscellaneousInput.FlatChargeIndicator">
      <comment>Check if Flat Premium Charge is applicable.</comment>
    </comments>
    <comments idref="LocationOutput.TaxCodeCity">
      <comment>~LocationTaxManuscript.ManuScriptID!Policy.TaxCodeAnnotation~</comment>
    </comments>
    <comments idref="LocationOutput.TaxCodeCounty">
      <comment>~LocationTaxManuscript.ManuScriptID!Policy.TaxCodeAnnotation~</comment>
    </comments>
    <comments idref="PolicyInput.KYSurchargeExemption">
      <comment>Types of Policyholders Exempt or Partially Exempt from the Insurance Premium Surcharge pursuant to KRS 136.392(5):</comment>
      <comment break="1">The federal government</comment>
      <comment break="1">Resident educational and charitable institutions qualifying under Section 501(c)(3) of the Internal Revenue Code;</comment>
      <comment break="1">Resident nonprofit religious institutions for real, tangible, and intangible property coverage only;</comment>
      <comment break="1">State government for coverage of real property; or</comment>
      <comment break="1">Local governments for coverage of real property.</comment>
      <comment break="1">Also, Exempt from the Insurance Premium Surcharge</comment>
      <comment break="1">Premiums received by life and health insurers pursuant to KRS 136.392(1);</comment>
      <comment break="1">Municipal premium taxes pursuant to KRS 136.392(1);</comment>
      <comment break="1">Premiums received for accident and health insurance;</comment>
      <comment break="1">Premiums received for federal insured crop insurance;</comment>
      <comment break="1">Premiums received for federal insured flood insurance;</comment>
      <comment break="1">Premiums received for reinsurance;</comment>
      <comment break="1">Premiums received for title insurance; or</comment>
      <comment break="1">Premiums received for workers' compensation insurance.</comment>
    </comments>
    <comments idref="LocationInput.KYMunicipalTaxExemption">
      <comment>Select if exempt from KY Municipal Tax.  Tax codes below:</comment>
      <comment break="1">~LocationTaxManuscript.ManuScriptID!Policy.TaxCodeAnnotation~</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.FirstName">
      <comment>Input First Name.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.LastName">
      <comment>Input Last Name.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.MiddleName">
      <comment>Input Middle Name.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.Prefix">
      <comment>Select Prefix.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.Suffix">
      <comment>Select Suffix.</comment>
    </comments>
    <comments idref="AdditionalOtherInterestInput.NameSplit">
      <comment>Check to Enter First/Middle/Last Names.</comment>
    </comments>
    <comments idref="LocationInput.ExcludeLocationCommercialAuto">
      <comment>Exclude this location from Commercial Auto part of Package Policy.</comment>
    </comments>
    <comments idref="LocationInput.ExcludeLocationCommercialUmbrella">
      <comment>Exclude this location from Commercial Umbrella part of Package Policy.</comment>
    </comments>
    <comments idref="LocationInput.ExcludeLocationCrime">
      <comment>Exclude this location from Crime part of Package Policy.</comment>
    </comments>
    <comments idref="LocationInput.ExcludeLocationGeneralLiability">
      <comment>Exclude this location from General Liability part of Package Policy.</comment>
    </comments>
    <comments idref="LocationInput.ExcludeLocationInlandMarine">
      <comment>Exclude this location from Inland Marine part of Package Policy.</comment>
    </comments>
    <comments idref="LocationInput.ExcludeLocationProperty">
      <comment>Exclude this location from Commercial Propery part of Package Policy.</comment>
    </comments>
  </annotations>
  <revisions />
  <mapping mappingCount="30">
    <reference mapId="clientName" name="Client Name" idref="AccountInput.Name" />
    <reference mapId="policyStatus" name="Policy Status" idref="PolicyOutput.Status" />
    <reference mapId="policyNumber" name="Policy Number" idref="PolicyOutput.PolicyNumber" />
    <reference mapId="effectiveDate" name="Effective Date" idref="PolicyInput.EffectiveDate" />
    <reference mapId="expirationDate" name="Expiration Date" idref="PolicyInput.ExpirationDate" />
    <reference mapId="policyPremium" name="Policy Premium" idref="PolicyPremiums.Premium" />
    <reference mapId="address" name="Address" idref="AccountInput.Address1" />
    <reference mapId="address2" name="Address2" idref="AccountInput.Address2" />
    <reference mapId="city" name="City" idref="AccountInput.City" />
    <reference mapId="state" name="State" idref="AccountInput.State" />
    <reference mapId="zipCode" name="ZIP Code" idref="AccountInput.ZipCode" />
    <reference mapId="phoneNumber" name="Phone Number" idref="AccountInput.PrimaryPhone" />
    <reference mapId="faxNumber" name="Fax Number" idref="AccountInput.Fax" />
    <reference mapId="producer" name="Producer" idref="ProducerInput.Name" />
    <reference mapId="agency" name="Agency" idref="AgencyInput.Name" />
    <reference mapId="description" name="Description" idref="PolicyOutputNonShredded.TransactionDescription" />
    <reference mapId="transactionDate" name="TransactionDate" idref="PolicyOutput.TransactionDate" />
    <reference mapId="description2" name="Description2" idref="PolicyOutput.Description" />
    <reference mapId="partyLastNameOptional" name="Party Last Name (optional)" idref="AccountInput.PartyName" />
    <reference mapId="partyFirstNameOptional" name="Party First Name (optional)" idref="" />
    <reference mapId="partyMiddleNameOptional" name="Party Middle Name (optional)" idref="" />
    <reference mapId="partyPrefixCodeOptional" name="Party Prefix Code (optional)" idref="" />
    <reference mapId="partySuffixCodeOptional" name="Party Suffix Code (optional)" idref="" />
    <reference mapId="quoteNumber" name="Quote Number" idref="PolicyOutput.QuoteNumber" />
    <reference mapId="partyTypeCode" name="Party Type Code (optional)" idref="AccountPrivate.PartyTypeCode" />
    <reference mapId="partyCountryCode" name="Party Country Code (optional)" idref="" />
    <reference mapId="locationCountryCode" name="Location Country Code (optional)" idref="" />
    <reference mapId="phoneCountryCode" name="Phone Country Code (optional)" idref="" />
    <reference mapId="branchOffice" name="Branch Office" idref="" />
    <reference mapId="writingCompany" name="Writing Company" idref="" />
    <reference mapId="ConsumerKeyLastName" name="ConsumerKeyLastName" idref="AccountInput.Name" />
    <reference mapId="ConsumerKeyEmail" name="ConsumerKeyEmail" idref="AccountInput.Email" />
    <reference mapId="ConsumerKeyZip" name="ConsumerKeyZip" idref="AccountInput.ZipCode" />
  </mapping>
  <schemaMaps>
    <schemaMap name="PBBI Account Geocoding">
      <recordActions caption="Not Currently Used">
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
      </recordActions>
      <GeocodeUS rootGroupId="Account" xpath=".">
        <AddressLine1 idref="AccountInput.Address1" />
        <AddressLine2 idref="AccountInput.Address2" />
        <City idref="AccountInput.City" />
        <StateProvince idref="AccountInput.State" />
        <PostalCode idref="AccountInput.ZipCode" />
        <Latitude idref="Account_GeocodeOutput.Latitude" />
        <Longitude idref="Account_GeocodeOutput.Longitude" />
        <GeocodeMatchCode idref="Account_GeocodeOutput.GeocodeMatchCode" />
        <Confidence idref="Account_GeocodeOutput.Confidence" />
        <PostalCodeBase idref="AccountInput.ZipCodeBase" />
        <PostalCodeAddOn idref="AccountInput.ZipCodeAddOn" />
      </GeocodeUS>
      <GeocodeEventing rootGroupId="Account" xpath="GeocodeEventing[1]">
        <OnAcceptRunField value="Account_GeocodePrivate.SetLastVerifiedToToday" />
        <OnRejectRunField value="" />
      </GeocodeEventing>
    </schemaMap>
    <schemaMap name="PBBI Location Geocoding">
      <recordActions caption="Not Currently Used">
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
        <recordAction caption="Not Currently Used" execute="content" value="notCurrentlyUsed" show="False" />
      </recordActions>
      <GeocodeUS rootGroupId="Location" xpath=".">
        <AddressLine1 idref="LocationInput.Address1" />
        <AddressLine2 idref="LocationInput.Address2" />
        <City idref="LocationInput.City" />
        <StateProvince idref="LocationInput.State" />
        <PostalCode idref="LocationInput.ZipCode" />
        <PostalCodeBase idref="LocationInput.ZipCodeBase" />
        <PostalCodeAddOn idref="LocationInput.ZipCodeAddOn" />
        <Latitude idref="Location_GeocodeOutput.Latitude" />
        <Longitude idref="Location_GeocodeOutput.Longitude" />
        <County idref="LocationInput.County" />
        <Country value="LocationInput.Country" />
        <Confidence idref="Location_GeocodeOutput.Confidence" />
        <GeocodeMatchCode idref="Location_GeocodeOutput.GeocodeMatchCode" />
      </GeocodeUS>
      <GeocodeEventing rootGroupId="Location" xpath="GeocodeEventing[1]">
        <OnAcceptRunField value="Location_GeocodePrivate.SetLastVerifiedToToday" />
        <OnRejectRunField value="" />
      </GeocodeEventing>
    </schemaMap>
    <schemaMap name="PBBI Location View Map">
      <ViewMap rootGroupId="Location" xpath="ViewMap[1]">
        <Latitude idref="Location_GeocodeOutput.Latitude" />
        <Longitude idref="Location_GeocodeOutput.Longitude" />
        <ZoomLevel value="5" />
        <Caption idref="LocationInput.Description" />
        <Marker value="Skins/PitneyBowesRIAControl/img/marker.png" />
      </ViewMap>
    </schemaMap>
    <schemaMap name="PBBI Account View Map">
      <ViewMap rootGroupId="Account" xpath="ViewMap[1]">
        <Latitude idref="Account_GeocodeOutput.Latitude" />
        <Longitude idref="Account_GeocodeOutput.Longitude" />
        <ZoomLevel value="5" />
        <Caption idref="AccountInput.Name" />
        <Marker value="Skins/PitneyBowesRIAControl/img/marker-gold.png" />
      </ViewMap>
    </schemaMap>
    <schemaMap name="AccountPartySearch">
      <recordActions caption="Party actions">
        <recordAction caption="Add Sample" execute="content" value="partyAddMappedRecord" show="" />
        <recordAction caption="Update Sample" execute="content" value="partyUpdateMappedRecord" show="" />
      </recordActions>
      <Party rootGroupId="Account" xpath="">
        <PartyName idref="AccountInput.Name" />
      </Party>
      <Location rootGroupId="Account">
        <LocationStateCode idref="AccountInput.State" />
        <LocationAddressLine1 idref="AccountInput.Address1" />
        <LocationAddressLine2 idref="AccountInput.Address2" />
        <LocationCity idref="AccountInput.City" />
        <LocationPostalCode idref="AccountInput.ZipCode" />
      </Location>
      <PartyPhone rootGroupId="Account">
        <PhoneTypeCode />
        <PhoneNumber idref="AccountInput.PrimaryPhone" />
        <PhoneExtension />
        <PhoneCountryCode />
        <PhoneFormatCode />
        <PhoneExtendedData />
      </PartyPhone>
    </schemaMap>
    <schemaMap name="AdditionalNamedInsured">
      <recordActions caption="Select a different party">
        <recordAction caption="Search for another party" execute="content" value="partyUpdate:partySearch" show="True" />
        <recordAction caption="Update Sample" execute="content" value="partyUpdateMappedRecord" show="False" />
      </recordActions>
      <Party rootGroupId="AdditionalNamedInsured">
        <PartyName idref="AdditionalNamedInsuredInput.Name" />
        <PartyId idref="AdditionalNamedInsuredInput.DatabaseID" />
        <PartyTypeCode idref="AdditionalNamedInsuredOutputNonShredded.PartyTypeCode" />
        <PartyTaxId idref="AdditionalNamedInsuredPolicyUnderwriting.FEINSSN" />
      </Party>
      <Location rootGroupId="AdditionalNamedInsured">
        <LocationAddressLine1 idref="AdditionalNamedInsuredPolicyUnderwriting.Address1" slideOut="1" />
        <LocationAddressLine2 idref="AdditionalNamedInsuredPolicyUnderwriting.Address2" />
        <LocationCity idref="AdditionalNamedInsuredPolicyUnderwriting.City" />
        <LocationStateCode idref="AdditionalNamedInsuredPolicyUnderwriting.State" />
        <LocationPostalCode idref="AdditionalNamedInsuredPolicyUnderwriting.ZipCode" />
      </Location>
      <PartyPhone rootGroupId="AdditionalNamedInsured">
        <PhoneNumber idref="AdditionalNamedInsuredPolicyUnderwriting.BusinessPhoneNumber" slideOut="1" />
        <PhoneTypeCode value="B" />
        <PhoneExtension value="" />
        <PhoneCountryCode value="" />
        <PhoneFormatCode value="US1" />
      </PartyPhone>
    </schemaMap>
  </schemaMaps>
</ManuScript>